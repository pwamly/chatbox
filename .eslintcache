[{"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/index.js":"1","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/App.js":"2","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/index.js":"3","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Head/index.js":"4","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Head/Home.js":"5","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Head/Dashboard.js":"6","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/ProtectRoute.js":"7","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/client/index.js":"8","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/client/client.js":"9","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Profile/index.js":"10","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/reducer.js":"11","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/actions.js":"12","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/store.js":"13","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/config/axiosConfig.js":"14","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/hooks/index.js":"15","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/index.js":"16","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Navibar/index.js":"17","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Menubar/sidebarData.js":"18","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Menubar/index.js":"19","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Forms/Stepform/ForgotPassword/ForgotPasswordForm.js":"20","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Forms/Stepform/ForgotPassword/ForgotPass.js":"21","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Forms/Stepform/ForgotPassword/ResetPass.js":"22","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Forms/Login.js":"23","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Forms/ForgotPassword/ForgotPasswordForm.js":"24","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Forms/ForgotPassword/ForgotPass.js":"25","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Forms/ForgotPassword/ResetPass.js":"26","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Navibar/Navbar.js":"27","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Navibar/Menubar/sidebarData.js":"28","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Footer/Footer.js":"29","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Spinner/Spiner.js":"30","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/index.js":"31","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/InspectionForm.js":"32","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/VehicleInformatin.js":"33","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/VehicleInfoCont.js":"34","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/EngineType.js":"35","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/ConversionKitInfo.js":"36","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/CgnCylinderInfoCont.js":"37","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/CgnCylinderInfo.js":"38","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/Preview.js":"39","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/RenderAccordion.js":"40","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Pdf/Pdf.js":"41","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/Owner.js":"42","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Printform/Printform.js":"43","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Charts/Spline.js":"44","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Profile/Profile.js":"45","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Team/Index.js":"46","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Team/Regteam.js":"47","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Team/Table/Table.js":"48","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Report/Report.js":"49","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Report/Table/Table.js":"50","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Pdf/previe.js":"51","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Report/View.js":"52","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Report/Registration/index.js":"53","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Report/Registration/Owner.js":"54","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Report/Registration/VehicleInformatin.js":"55","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Report/Registration/InspectionForm.js":"56","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Report/Registration/EngineType.js":"57","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Report/Registration/VehicleInfoCont.js":"58","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Report/Registration/CgnCylinderInfoCont.js":"59","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Report/Registration/ConversionKitInfo.js":"60","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Report/Registration/CgnCylinderInfo.js":"61","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Report/Registration/Preview.js":"62","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Report/Registration/RenderAccordion.js":"63","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Spinner/Loader.js":"64"},{"size":149,"mtime":1615786140699,"results":"65","hashOfConfig":"66"},{"size":1562,"mtime":1615841499626,"results":"67","hashOfConfig":"66"},{"size":960,"mtime":1615592446248,"results":"68","hashOfConfig":"66"},{"size":250,"mtime":1609344225763,"results":"69","hashOfConfig":"66"},{"size":302,"mtime":1609343793693,"results":"70","hashOfConfig":"66"},{"size":495,"mtime":1614415531116,"results":"71","hashOfConfig":"66"},{"size":517,"mtime":1615841686155,"results":"72","hashOfConfig":"66"},{"size":396,"mtime":1614415530748,"results":"73","hashOfConfig":"66"},{"size":16000,"mtime":1616571943969,"results":"74","hashOfConfig":"66"},{"size":1380,"mtime":1614415531132,"results":"75","hashOfConfig":"66"},{"size":3492,"mtime":1616600829701,"results":"76","hashOfConfig":"66"},{"size":897,"mtime":1616568917264,"results":"77","hashOfConfig":"66"},{"size":415,"mtime":1616569050115,"results":"78","hashOfConfig":"66"},{"size":2784,"mtime":1616599212951,"results":"79","hashOfConfig":"66"},{"size":5452,"mtime":1616595432717,"results":"80","hashOfConfig":"66"},{"size":2702,"mtime":1616179793742,"results":"81","hashOfConfig":"66"},{"size":2617,"mtime":1615752540458,"results":"82","hashOfConfig":"66"},{"size":873,"mtime":1615574163951,"results":"83","hashOfConfig":"66"},{"size":95,"mtime":1614385153969,"results":"84","hashOfConfig":"66"},{"size":719,"mtime":1614585039537,"results":"85","hashOfConfig":"66"},{"size":1369,"mtime":1614612303807,"results":"86","hashOfConfig":"66"},{"size":1852,"mtime":1615783942663,"results":"87","hashOfConfig":"66"},{"size":2846,"mtime":1615785983086,"results":"88","hashOfConfig":"66"},{"size":719,"mtime":1614613242248,"results":"89","hashOfConfig":"66"},{"size":2022,"mtime":1615389868559,"results":"90","hashOfConfig":"66"},{"size":2684,"mtime":1615401645652,"results":"91","hashOfConfig":"66"},{"size":946,"mtime":1615386234725,"results":"92","hashOfConfig":"66"},{"size":568,"mtime":1614715441366,"results":"93","hashOfConfig":"66"},{"size":216,"mtime":1614925281232,"results":"94","hashOfConfig":"66"},{"size":543,"mtime":1614703809707,"results":"95","hashOfConfig":"66"},{"size":9303,"mtime":1616223081772,"results":"96","hashOfConfig":"66"},{"size":2587,"mtime":1615881437504,"results":"97","hashOfConfig":"66"},{"size":2769,"mtime":1615852327660,"results":"98","hashOfConfig":"66"},{"size":2788,"mtime":1614842643581,"results":"99","hashOfConfig":"66"},{"size":2133,"mtime":1615372931136,"results":"100","hashOfConfig":"66"},{"size":2441,"mtime":1616232880708,"results":"101","hashOfConfig":"66"},{"size":7284,"mtime":1615879862172,"results":"102","hashOfConfig":"66"},{"size":7608,"mtime":1615877808032,"results":"103","hashOfConfig":"66"},{"size":7173,"mtime":1616179046166,"results":"104","hashOfConfig":"66"},{"size":1492,"mtime":1615759293071,"results":"105","hashOfConfig":"66"},{"size":658,"mtime":1615719285104,"results":"106","hashOfConfig":"66"},{"size":2445,"mtime":1616107677126,"results":"107","hashOfConfig":"66"},{"size":32021,"mtime":1616621191318,"results":"108","hashOfConfig":"66"},{"size":938,"mtime":1615310218652,"results":"109","hashOfConfig":"66"},{"size":7546,"mtime":1615829873988,"results":"110","hashOfConfig":"66"},{"size":433,"mtime":1615751019615,"results":"111","hashOfConfig":"66"},{"size":5660,"mtime":1615920196587,"results":"112","hashOfConfig":"66"},{"size":6119,"mtime":1616181476292,"results":"113","hashOfConfig":"66"},{"size":744,"mtime":1616094320298,"results":"114","hashOfConfig":"66"},{"size":23131,"mtime":1616600785787,"results":"115","hashOfConfig":"66"},{"size":645,"mtime":1614926701297,"results":"116","hashOfConfig":"66"},{"size":1581,"mtime":1616229808942,"results":"117","hashOfConfig":"66"},{"size":7155,"mtime":1616105334174,"results":"118","hashOfConfig":"66"},{"size":2439,"mtime":1616175149368,"results":"119","hashOfConfig":"66"},{"size":2791,"mtime":1616601639713,"results":"120","hashOfConfig":"66"},{"size":2588,"mtime":1616614116174,"results":"121","hashOfConfig":"66"},{"size":2133,"mtime":1616094876274,"results":"122","hashOfConfig":"66"},{"size":2788,"mtime":1616094876278,"results":"123","hashOfConfig":"66"},{"size":7293,"mtime":1616601829609,"results":"124","hashOfConfig":"66"},{"size":2441,"mtime":1616232949310,"results":"125","hashOfConfig":"66"},{"size":7608,"mtime":1616094876270,"results":"126","hashOfConfig":"66"},{"size":7417,"mtime":1616178074221,"results":"127","hashOfConfig":"66"},{"size":1492,"mtime":1616094876274,"results":"128","hashOfConfig":"66"},{"size":470,"mtime":1616197684495,"results":"129","hashOfConfig":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},"86wbd6",{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"132"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"132"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"132"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"147"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"132"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"165","usedDeprecatedRules":"132"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"168","usedDeprecatedRules":"132"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"132"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"132"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"132"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"180","messages":"181","errorCount":2,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"132"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"132"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"132"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"132"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"132"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"132"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"132"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"132"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"132"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"132"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"132"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"132"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"132"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"132"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"132"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"132"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"132"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"132"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"132"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"132"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"132"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"132"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"132"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"132"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"269","messages":"270","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"132"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"132"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"132"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"132"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"132"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"132"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"132"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"132"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/index.js",[],["301","302"],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/App.js",["303","304","305"],"import React from \"react\";\nimport {\n  Redirect,\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport { ProtectRoute } from \"./components/ProtectRoute\";\n\nimport Home from \"./components/Home\";\nimport Form from \"./components/Forms/Stepform/ForgotPassword/ForgotPasswordForm\";\n// import Dashboard from \"./components/Dashboard\";\nimport Dashboard from \"./components/Dash_board\";\nimport { Provider } from \"react-redux\";\nimport { ToastProvider } from \"react-toast-notifications\";\nimport { userData, getProfile } from \"./client/index\";\nimport { store } from \"./store\";\nimport Pdf from \"./components/Pdf/Pdf\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ToastProvider placement=\"top-center\">\n        <div className=\"site\">\n          <Router>\n            <Switch>\n              <Route exact path=\"/login\">\n                <Home />\n              </Route>{\" \"}\n              <Route exact path=\"/form\">\n                <Pdf />\n              </Route>{\" \"}\n              <ProtectRoute\n                path=\"/dashboard\"\n                exact\n                component={Dashboard}\n              ></ProtectRoute>{\" \"}\n              <ProtectRoute path=\"/dashboard\" component={Dashboard}>\n                {\" \"}\n              </ProtectRoute>{\" \"}\n              <Redirect exact to=\"/dashboard\" />\n              <Route path=\"*\" component={() => <h2> 404 Not Found </h2>} />\n            </Switch>{\" \"}\n          </Router>{\" \"}\n        </div>{\" \"}\n      </ToastProvider>{\" \"}\n    </Provider>\n  );\n}\n\nexport default App;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/index.js",["306","307","308"],"import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Card from \"@material-ui/core/Card\";\nimport Container from \"@material-ui/core/Container\";\nimport ForgotPassword from \"./Forms/ForgotPassword/ForgotPasswordForm\";\nimport Login from \"./Forms/Login\";\nimport Navbar from \"./Navibar/Navbar\";\nimport Footer from \"../Footer/Footer\";\nimport \"./home.css\";\n\nconst login = true;\nconst forgot = \"\";\n\nfunction index() {\n  return (\n    <>\n      {\" \"}\n      <div>\n        <Router>\n          <Navbar />\n          <Container className=\"main-home\">\n            <Switch>\n              <Route path=\"/login\">\n                <Login />\n              </Route>{\" \"}\n              <Route path=\"/reset-password\">\n                <ForgotPassword />\n              </Route>{\" \"}\n            </Switch>{\" \"}\n          </Container>{\" \"}\n        </Router>{\" \"}\n        <Footer />\n      </div>{\" \"}\n    </>\n  );\n}\n\nexport default index;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Head/index.js",["309"],"import React from \"react\";\nimport Home from \"./Home\";\nimport Dashboard from \"./Dashboard\";\nconst login = false;\nfunction index() {\n  {\n    if (login) {\n      return <Dashboard />;\n    } else {\n      return <Home />;\n    }\n  }\n}\nexport default index;\n",["310","311"],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Head/Home.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Head/Dashboard.js",[],["312","313"],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/ProtectRoute.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/client/index.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/client/client.js",["314","315","316","317","318","319","320","321","322"],"import { stringify } from \"query-string\";\nimport { store } from \"../store\";\nimport instance from \"../config/axiosConfig\";\nimport { SAVE_TOKEN } from \"../actions\";\nimport { merge, forEach } from \"lodash\";\nimport isEmpty from \"lodash/isEmpty\";\nimport { singularize, pluralize } from \"inflection\";\nimport camelCase from \"lodash/camelCase\";\nimport jwtDecode from \"jwt-decode\";\n\nlet access_token;\nlet userId;\nlet tokenPayload;\n\nconst logged = localStorage.getItem(\"islogged\");\nconst token = localStorage.getItem(\"token\");\n\n//..................start..................\n// ............. auth functions........\n\n/**\n * @function\n * @name getTokenPayload\n * @description Return decoded token payload\n * @param {string} token jwt token base64 url encoded token\n * @returns {object} Jwt token content\n * @version 0.1.0\n * @since 0.1.0\n */\nexport const getTokenPayload = (token) => {\n    if (isEmpty(tokenPayload)) {\n        try {\n            tokenPayload = jwtDecode(token);\n        } catch (error) {\n            // eslint-disable-next-line no-console\n            console.log(error);\n        }\n    }\n\n    return tokenPayload;\n};\n\nexport const fetchAccessToken = async() => {\n    try {\n        access_token = await instance.post(\"/refresh_token\");\n        const { AccessToken } = access_token.data;\n        localStorage.setItem(\"token\", AccessToken);\n        return access_token;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const isLogged = () => {\n    if (!logged) {\n        console.log(\"not loged\", logged);\n        return false;\n    }\n    if (!token) {\n        console.log(\"no token\");\n        return false;\n    }\n    return logged;\n    // return true;  ............ uncomment for change only\n};\n\nexport const login = async(payload) => {\n    try {\n        const authRes = await instance.post(\"/auth/login\", {...payload });\n        const { accessToken } = authRes;\n        if (accessToken) {\n            localStorage.setItem(\"token\", accessToken);\n            localStorage.setItem(\"islogged\", true);\n            window.location.replace(`/dashboard`);\n        }\n    } catch (error) {\n        console.log(\"error in login\", error);\n    }\n\n    return false;\n};\n\nexport const registerUser = async(payload) => {\n    try {\n        const repsonse = await instance.post(\"auth/register\", {...payload });\n        console.log(\"response\");\n    } catch (error) {\n        console.log(\"error in login\", error);\n    }\n\n    return false;\n};\n\nexport const editProfile = async(payload) => {\n    try {\n        const response = await instance.put(\"/auth/profile\", {...payload });\n\n        if (response) {\n            const { successful, success } = response;\n            return successful || success;\n        }\n    } catch (error) {\n        return error;\n        console.log(\"error in login\", error);\n    }\n\n    return false;\n};\n\nexport const logout = async() => {\n    localStorage.clear();\n    window.location.replace(`/`);\n    try {\n        const authRes = await instance.post(\"/auth/logout\", {\n            token: token,\n        });\n        const { accessToken } = authRes.data;\n        if (authRes.status == \"200\") {}\n    } catch (error) {\n        console.log(\"error in login\", error);\n    }\n\n    return false;\n};\n\nexport const getCode = async(data) => {\n    try {\n        const { email } = data;\n        const code = await instance.post(\"/auth/forgot-password\", { email });\n        return code;\n    } catch (error) {\n        return {};\n    }\n};\n\nexport const postCode = async(data) => {\n    try {\n        const { email, usercode, newpass } = data;\n        const isSuccessful = await instance.post(\"/auth/reset-password\", {\n            email,\n            code: usercode,\n            newpassword: newpass,\n        });\n        if (isSuccessful) {\n            return { isSuccessful: true };\n        }\n        return { isSuccessful: false };\n    } catch (error) {\n        return { isSuccessful: false };\n    }\n};\n\n//.................................. api endpoints........................\n\nexport const getAllReports = async(data) => {\n    try {\n        if (data) {\n            const reports = await instance.get(\"/api/reports\", {\n                params: data,\n            });\n            if (reports) {\n                return reports;\n            }\n        } else {\n            const reports = await instance.get(\"/api/reports\");\n            if (reports) {\n                return reports;\n            }\n        }\n    } catch (error) {\n        return { isSuccessful: false };\n    }\n};\n\nexport const getAllhistory = async(data) => {\n    try {\n        if (data) {\n            const reports = await instance.get(\"/api/reports/history\", {\n                params: data,\n            });\n            if (reports) {\n                return reports;\n            }\n        } else {\n            const reports = await instance.get(\"/api/reports/history\");\n            if (reports) {\n                return reports;\n            }\n        }\n    } catch (error) {\n        return { isSuccessful: false };\n    }\n};\n\nexport const getUsers = async() => {\n    try {\n        const users = await instance.get(\"/api/users\");\n        if (users) {\n            return users;\n        }\n    } catch (error) {\n        return { isSuccessful: false };\n    }\n};\n\nexport const postVehicleInfo = async(data) => {\n    try {\n        const response = await instance.post(\"/api/actions/registervehicle\", {\n            ...data,\n        });\n        if (response) {\n            return response;\n        }\n    } catch (error) {\n        return { isSuccessful: false };\n    }\n};\n\nexport const deleteReport = async(id) => {\n    try {\n        const response = await instance.delete(`/api/reports/deletevehicle/${id}`);\n\n        if (response) {\n            return response;\n        }\n    } catch (error) {\n        return { isSuccessful: false };\n    }\n};\nexport const deletehistory = async(id) => {\n    try {\n        const response = await instance.delete(`/api/reports/deletehistory/${id}`);\n\n        if (response) {\n            return response;\n        }\n    } catch (error) {\n        return { isSuccessful: false };\n    }\n};\n\nexport const EditReport = async(data) => {\n    try {\n        const { id } = data;\n        const isSuccessful = await instance.put(`/api/actions/editvehicle/${id}`, {\n            ...data,\n        });\n        if (isSuccessful) {\n            return { isSuccessful: true };\n        }\n        return { isSuccessful: false };\n    } catch (error) {\n        return { isSuccessful: false };\n    }\n};\n\nexport const deleteUser = async(id) => {\n    try {\n        const response = await instance.delete(`/api/users/${id}`);\n\n        if (response) {\n            return response;\n        }\n    } catch (error) {\n        return { isSuccessful: false };\n    }\n};\n\nexport const addUser = async(data) => {\n    try {\n        const response = await instance.post(\"/auth/register\", {\n            ...data,\n        });\n\n        if (response) {\n            return response;\n        }\n    } catch (error) {\n        return { isSuccessful: false };\n    }\n};\n//..................end..................\n// ............. auth functions..........\n\n/**\n * @function prepareParams\n * @name prepareParams\n * @description convert api query params as per API filtering specifications\n * @param {object} params api call query params\n * @returns {object} http params to be sent to server\n * @since 0.1.0\n * @version 0.1.0\n * @static\n * @public\n * @example\n */\nexport const prepareParams = (params) => {\n    const normalizedParams = {};\n    const { sort, page, pageSize, ...otherParams } = params || {};\n\n    if (sort) {\n        forEach(params.sort, (value, key) => {\n            normalizedParams.sortBy = key;\n            normalizedParams.sortOrder = value;\n        });\n    }\n\n    if (page) {\n        normalizedParams.page = params.page;\n    }\n\n    if (pageSize) {\n        normalizedParams.pageSize = params.pageSize;\n    }\n\n    if (otherParams) {\n        forEach(otherParams, (value, key) => {\n            normalizedParams[key] = value;\n        });\n    }\n\n    return normalizedParams;\n};\n\n/**\n * @function get\n * @name get\n * @description issue http get request to specified url.\n * @param {string} url valid http path.\n * @param {object} [params] params that will be encoded into url query params.\n * @returns {Promise} promise resolve with data on success or error on failure.\n * @since 0.1.0\n * @version 0.1.0\n */\nexport const get = (url, params) => {\n    const options = prepareParams(params);\n    return instance.get(url, { params: options });\n};\n\n/**\n * @function post\n * @name post\n * @description issue http post request to specified url.\n * @param {string} url valid http path.\n * @param {object} data request payload to be encoded on http request body\n * @returns {Promise} promise resolve with data on success or error on failure.\n * @since 0.1.0\n * @version 0.1.0\n * @example\n * import { post } from './client';\n *\n * const postUser = post('/users', { age: 14 });\n * postUser.then(user => { ... }).catch(error => { ... });\n */\nexport const post = (url, data) => {\n    if (isEmpty(data)) {\n        return Promise.reject(new Error(\"Missing Payload\"));\n    }\n\n    return instance.post(url, data);\n};\n\n/**\n * @function put\n * @name put\n * @description issue http put request to specified url.\n * @param {string} url valid http path.\n * @param {object} data request payload to be encoded on http request body\n * @returns {Promise} promise resolve with data on success or error on failure.\n * @since 0.1.0\n * @version 0.1.0\n * @example\n */\nexport const put = (url, data) => {\n    if (isEmpty(data)) {\n        return Promise.reject(new Error(\"Missing Payload\"));\n    }\n\n    return instance.put(url, data);\n};\n\n/**\n * @function patch\n * @name patch\n * @description issue http patch request to specified url.\n * @param {string} url valid http path.\n * @param {object} data request payload to be encoded on http request body\n * @returns {Promise} promise resolve with data on success or error on failure.\n * @since 0.1.0\n * @version 0.1.0\n * @example\n */\nexport const patch = (url, data) => {\n    if (isEmpty(data)) {\n        return Promise.reject(new Error(\"Missing Payload\"));\n    }\n\n    return instance.patch(url, data);\n};\n\n/**\n * @function del\n * @name del\n * @description issue http delete request to specified url.\n * @param {string} url valid http path.\n * @returns {Promise} promise resolve with data on success or error on failure.\n * @since 0.1.0\n * @version 0.1.0\n * @example\n */\nexport const del = (url) => {\n    return instance.delete(url);\n};\n\n/**\n * @function\n * @name normalizeResource\n * @description Normalize resource by adding singular and plural\n * names to it\n * @param {string} resource valid api resource name\n * @returns {object} Object contains singular and plural names for resource\n *\n * @version 0.1.0\n * @since 0.1.0\n */\nexport const normalizeResource = (resource) => {\n    const singular = singularize(resource.name);\n    const plural = pluralize(resource.name);\n\n    return { singular, plural };\n};\n\n/**\n * @function\n * @name variableNameFor\n * @description Generate camel cased variable name based on provided strings\n * @param  {...string} names array of names to be used in variable name\n * @returns {string} camel cased name\n *\n * @version 0.1.0\n * @since 0.1.0\n */\nconst variableNameFor = (...names) => camelCase([...names]);\n\n/**\n * @function\n * @name createGetListHttpAction\n * @param {string} resource Api resource name\n * @returns {object} http actions to interact with a resource\n *\n * @version 0.1.0\n * @since 0.1.0\n */\nexport const createGetListHttpAction = (resource) => {\n    const { plural } = normalizeResource(resource);\n\n    const methodName = variableNameFor(\"get\", plural);\n\n    return {\n        [methodName]: (params) => {\n            const endpoint = `/${plural}`;\n\n            return get(endpoint, params);\n        },\n    };\n};\n\n/**\n * @function\n * @name createGetSingleHttpAction\n * @param {string} resource Api resource name\n * @returns {object} http actions to interact with a resource\n *\n * @version 0.1.0\n * @since 0.1.0\n */\nexport const createGetSingleHttpAction = (resource) => {\n    const { singular, plural } = normalizeResource(resource);\n\n    const methodName = variableNameFor(\"get\", singular);\n\n    return {\n        [methodName]: (id) => {\n            const endpoint = `/api/${singular}/${id}`;\n\n            return get(endpoint);\n        },\n    };\n};\n\n/**\n * @function\n * @name createPostHttpAction\n * @param {string} resource Api resource name\n * @returns {object} http actions to interact with a resource\n *\n * @version 0.1.0\n * @since 0.1.0\n */\nexport const createPostHttpAction = (resource) => {\n    const { singular, plural } = normalizeResource(resource);\n\n    const methodName = variableNameFor(\"post\", singular);\n\n    return {\n        [methodName]: (payload) => {\n            const endpoint = `/${plural}`;\n\n            return post(endpoint, payload);\n        },\n    };\n};\n\n/**\n * @function\n * @name createPutHttpAction\n * @param {string} resource Api resource name\n * @returns {object} http actions to interact with a resource\n *\n * @version 0.1.0\n * @since 0.1.0\n */\nexport const createPutHttpAction = (resource) => {\n    const { singular, plural } = normalizeResource(resource);\n\n    const methodName = variableNameFor(\"put\", singular);\n\n    return {\n        [methodName]: (payload) => {\n            const endpoint = `/${plural}/${payload.id}`;\n\n            return put(endpoint, payload);\n        },\n    };\n};\n\n/**\n * @function\n * @name createPatchHttpAction\n * @param {string} resource Api resource name\n * @returns {object} http actions to interact with a resource\n *\n * @version 0.1.0\n * @since 0.1.0\n */\nexport const createPatchHttpAction = (resource) => {\n    const { singular, plural } = normalizeResource(resource);\n\n    const methodName = variableNameFor(\"patch\", singular);\n\n    return {\n        [methodName]: (payload) => {\n            const endpoint = `/${plural}/${payload.id}`;\n\n            return patch(endpoint, payload);\n        },\n    };\n};\n\n/**\n * @function\n * @name createDeleteHttpAction\n * @param {string} resource Api resource name\n * @returns {object} http actions to interact with a resource\n *\n * @version 0.1.0\n * @since 0.1.0\n */\nexport const createDeleteHttpAction = (resource) => {\n    const { singular, plural } = normalizeResource(resource);\n\n    const methodName = variableNameFor(\"delete\", singular);\n\n    return {\n        [methodName]: (id) => {\n            const endpoint = `/${plural}/${id}`;\n\n            return del(endpoint);\n        },\n    };\n};\n\n/**\n * @function createHttpActionsFor\n * @name createHttpActionsFor\n * @description generate http actions to interact with resource\n * @param {string} resource valid http resource\n * @returns {object} http actions to interact with a resource\n * @since 0.1.0\n * @version 0.1.0\n * @example\n * import { createHttpActionsFor } from './client';\n *\n * const { deleteUser } = createHttpActionsFor('user');\n * deleteUser('5c176624').then(user => { ... }).catch(error => { ... });\n */\nexport const createHttpActionsFor = (resource) => {\n    const getResources = createGetListHttpAction(resource);\n    const getResource = createGetSingleHttpAction(resource);\n    const postResource = createPostHttpAction(resource);\n    const putResource = createPutHttpAction(resource);\n    const patchResource = createPatchHttpAction(resource);\n    const deleteResource = createDeleteHttpAction(resource);\n\n    return {\n        ...getResources,\n        ...getResource,\n        ...postResource,\n        ...putResource,\n        ...patchResource,\n        ...deleteResource,\n    };\n};\n\n/**\n * @function\n * @name getUserId\n * @description retrieve userId from local storage if not set\n *\n * @returns {string |undefined} user id\n * @since 0.1.0\n * @version 0.1.0\n */\nexport const getUserId = () => {\n    if (isEmpty(userId)) {\n        const payload = getTokenPayload(token);\n        const { id } = payload;\n\n        // userId = localStorage.getItem(\"userId\"); // eslint-disable-line\n        userId = id;\n    }\n\n    return userId;\n};","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Profile/index.js",["323","324"],"import React from \"react\";\nimport avatar from \"../../assets/logo512r.png\";\nimport { connect } from \"react-redux\";\nimport { ImPencil } from \"react-icons/im\";\nimport { EDIT_USER } from \"../../actions\";\nimport { httpActions, getUserId } from \"../../client\";\nimport { useGet } from \"../../hooks\";\n\nconst { getProfile } = httpActions;\n\nfunction Index({ data, profile, dispatch }) {\n  const id = getUserId();\n\n  const { result: user, loading, refresh } = useGet(id, getProfile);\n\n  return user ? (\n    <div className=\"profile\">\n      <div className=\"avatar\">\n        <img className=\"aimg\" src={avatar} alt=\"\" />\n      </div>\n      <div className=\"details\">\n        <div className=\"pencil\" onClick={() => dispatch({ type: EDIT_USER })}>\n          <ImPencil />\n        </div>\n        {console.log(\"ttttttttttttttt\", user)}\n        <div className=\"pdetails\">\n          <h3 className=\"h3span\">First name:</h3> <h3>{user.fname}</h3>\n        </div>\n        <div className=\"pdetails\">\n          <h3 className=\"h3span\">Last name:</h3> <h3>{user.lname}</h3>\n        </div>\n        <div className=\"pdetails\">\n          <h3 className=\"h3span\">Email:</h3> <h3>{user.email}</h3>\n        </div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\nconst mapStateToprops = (store) => {\n  const { profile } = store;\n  return { ...store, profile: profile };\n};\n\nexport default connect(mapStateToprops)(Index);\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/reducer.js",["325","326","327","328"],"import {\n    ACTIVATE_USER,\n    ADD_USER,\n    DEACTIVATE_USER,\n    REMOVE_USER,\n    EDIT_USER,\n    EXIT_ADD_FORM,\n    EXIT_EDIT_USER,\n    ADD_USER_FORM,\n    CLEAR_PROFILE_DATA,\n    VIEW_USER,\n    EXIT_VEW_USER,\n    SAVE_UPDATES,\n    SAVE_TOKEN,\n    SAVE_INITIAL_DATA,\n    SAVE_REPORT_DATA,\n    SAVE_FORM_DATA,\n    SAVE_PROFILE_DATA,\n    CLEAR_REPORT_DATA,\n    SHOW_HISTORY_TABLE,\n} from \"./actions\";\n// import { removeUser, registerUser } from \"./client/\";\nlet removeUser, registerUser;\n\nfunction reducer(state, action) {\n    /*forms*/\n    if (action.type === EXIT_ADD_FORM) {\n        return {...state, adduser: false };\n    }\n    if (action.type === ADD_USER_FORM) {\n        return {...state, adduser: true };\n    }\n\n    /*user data*/\n    if (action.type === ADD_USER) {\n        return {...state, adduser: true };\n    }\n\n    if (action.type === REMOVE_USER) {\n        // return {...state, data: removeUser(action.payload), viewuser: false };\n    }\n\n    if (action.type === VIEW_USER) {\n        if (action.payload) {\n            const { modalShown } = action.payload;\n            return {\n                ...state,\n                showProfile: modalShown,\n            };\n        }\n        return {...state };\n    }\n    if (action.type === SAVE_INITIAL_DATA) {\n        if (action.payload) {\n            return {\n                ...state,\n                profile: {...action.payload },\n            };\n        }\n        return {...state };\n    }\n\n    if (action.type === EXIT_VEW_USER) {\n        return {\n            ...state,\n            showProfile: false,\n        };\n    }\n    if (action.type === EDIT_USER) {\n        return {...state, edituser: true };\n    }\n    if (action.type === EXIT_EDIT_USER) {\n        return {...state, edituser: false };\n    }\n    if (action.type === SAVE_UPDATES) {\n        let { data } = state;\n        const { payload } = action;\n\n        for (let i = 0; i < data.length; i++) {\n            if (data[i].id === payload.id) {\n                data[i] = payload;\n                if (payload.role === \"admin\") {\n                    state.profile = payload;\n                }\n            }\n        }\n\n        return {\n            ...state,\n            edituser: false,\n            data,\n            viewdata: null,\n            adduserbtn: true,\n        };\n    }\n\n    //................. AUTH\n\n    if (action.type === SAVE_TOKEN) {\n        if (action.payload) {\n            const { access_token } = action.payload;\n            console.log(\"token from login\", access_token);\n            return {...state, token: access_token };\n        }\n    }\n\n    //......... form data\n\n    if (action.type === SAVE_FORM_DATA) {\n        if (action.payload) {\n            const { email } = action.payload;\n            console.log(\"token from login\", email);\n            return {...state, formdata: { email } };\n        }\n    }\n    if (action.type === CLEAR_REPORT_DATA) {\n        return {...state, reportdata: {} };\n    }\n    if (action.type === SAVE_REPORT_DATA) {\n        if (action.payload) {\n            return {...state, reportdata: {...action.payload } };\n        }\n    }\n    if (action.type === SAVE_PROFILE_DATA) {\n        if (action.payload) {\n            return {...state, teamdata: {...action.payload } };\n        }\n    }\n    if (action.type === CLEAR_PROFILE_DATA) {\n        return {...state, teamdata: {} };\n    }\n    if (action.type === SHOW_HISTORY_TABLE) {\n        return {...state, historytable: !state.historytable };\n    }\n\n    return state;\n}\n\nexport default reducer;","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/actions.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/store.js",["329"],"\"use strict\";\nimport { createStore } from \"redux\";\nimport reducer from \"./reducer\";\n\nlet store;\nconst initstore = {\n    data: [],\n    adduser: false,\n    edituser: false,\n    profile: {},\n    viewuser: false,\n    showProfile: false,\n    adduserbtn: true,\n    token: \"\",\n    reportdata: {},\n    teamdata: {},\n    historytable: false,\n};\nif (!store) {\n    store = createStore(reducer, initstore);\n}\n\nexport { store };","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/config/axiosConfig.js",["330","331"],"\"use strict\";\n\nimport axios from \"axios\";\nimport { store } from \"../store\";\nimport { fetchAccessToken } from \"../client\";\n\nlet instance;\nlet BASE_URL;\nlet isAlreadyFetchingAccessToken = false;\nlet subscribers = [];\n\nconst token = localStorage.getItem(\"token\");\n\nBASE_URL = process.env.REACT_APP_NECBOT_API_URL;\n\nconst defaultOptions = {\n    baseURL: BASE_URL,\n    withCredentials: true,\n    headers: {\n        \"Content-Type\": \"application/json\",\n    },\n};\n\nif (!instance) {\n    instance = axios.create(defaultOptions);\n    instance.interceptors.request.use(function(config) {\n        if (token) {\n            config.headers.Authorization = token ? `Bearer ${token}` : \"\";\n        }\n        return config;\n    });\n\n    function onAccessTokenFetched(access_token) {\n        subscribers = subscribers.filter((callback) => callback(access_token));\n    }\n\n    function addSubscriber(callback) {\n        subscribers.push(callback);\n    }\n\n    instance.interceptors.response.use(\n        function(response) {\n            return response.data;\n        },\n        function(error) {\n            const {\n                config,\n                response: { status },\n            } = error;\n            let originalRequest = config;\n\n            if (originalRequest.url === \"/auth/reset-password\") {\n                return;\n            } else {\n                if (status === 403) {\n                    if (!isAlreadyFetchingAccessToken) {\n                        isAlreadyFetchingAccessToken = true;\n\n                        fetchAccessToken().then((access_token) => {\n                            if (access_token) {\n                                const { AccessToken } = access_token.data;\n                                isAlreadyFetchingAccessToken = false;\n                                onAccessTokenFetched(AccessToken);\n                            }\n                        });\n                    }\n\n                    const retryOriginalRequest = new Promise((resolve) => {\n                        addSubscriber((AccessToken) => {\n                            const newtoken = \"Bearer \" + AccessToken;\n                            const newheaders = {\n                                ...originalRequest.headers,\n                                Authorization: newtoken,\n                            };\n                            const newrequest = {...originalRequest, headers: newheaders };\n                            const newinstance = axios.create();\n                            resolve(newinstance(newrequest));\n                        });\n                    });\n\n                    return retryOriginalRequest;\n                }\n            }\n            // window.location.replace(\"/login\");\n            return Promise.reject(error);\n        }\n    );\n}\nexport default instance;","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/hooks/index.js",["332","333","334","335"],"/**\n * Custom hooks\n *\n * @author Benson Maruchu<benmaruchu@gmail.com>\n * @since 0.1.0\n */\n\n/* dependencies */\nimport { useEffect, useState, useCallback, useContext } from \"react\";\nimport { useToasts } from \"react-toast-notifications\";\n//import { ConfigsContext, LocaleContext, RolesContext } from \"../../configs\";\n\n/**\n * @function\n * @name useGetList\n * @description Custom hook for fetching results from the web\n * @param {Function} onGet Function to be called on fetch data event\n * @param {object} params Additional Params to be passed\n * @returns {*[]} Array which have data, functions\n * @version 0.1.0\n * @since 0.2.0\n */\nexport const useGetList = (onGet, params) => {\n    const { addToast } = useToasts();\n    const [loading, setLoading] = useState(false);\n    const [results, setResults] = useState([]);\n    const [pages, setPages] = useState(0);\n    const [total, setTotal] = useState(0);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [haveNextPage, setHaveNextPage] = useState(false);\n    const [havePreviousPage, setHavePreviousPage] = useState(false);\n    const [sort, sortBy] = useState(null);\n    const [searchQuery, searchBy] = useState(undefined);\n    const [shouldRefresh, setShouldRefresh] = useState(false);\n    const [filters, filterBy] = useState(null);\n\n    useEffect(() => {\n        setLoading(true);\n        onGet({ page: currentPage, sort, q: searchQuery, ...filters, ...params })\n            .then((response) => {\n                setResults(response.data);\n                setPages(response.pagination.totalPages);\n                setTotal(response.total);\n                if (currentPage > 1) {\n                    setHavePreviousPage(true);\n                } else {\n                    setHavePreviousPage(false);\n                }\n\n                if (currentPage < response.pagination.totalPages) {\n                    setHaveNextPage(true);\n                } else {\n                    setHaveNextPage(false);\n                }\n\n                setLoading(false);\n            })\n            .catch((error) => {\n                setLoading(false);\n                addToast(error.message, { appearance: \"error\" });\n            });\n    }, [currentPage, sort, filters, searchQuery, shouldRefresh]);\n\n    const refresh = useCallback(() => setShouldRefresh(!shouldRefresh), [\n        shouldRefresh,\n    ]);\n    return {\n        results,\n        pages,\n        currentPage,\n        havePreviousPage,\n        haveNextPage,\n        loading,\n        total,\n        setTotal,\n        setCurrentPage,\n        sortBy,\n        searchBy,\n        refresh,\n        filterBy,\n    };\n};\n\n/**\n * @function\n * @name useGets\n * @description Custom hook for fetching results from the web\n * @param {Function} onGet Function to be called on fetch data event\n * @param {object} params Additional Params to be passed\n * @returns {*[]} Array which have data, functions\n * @version 0.1.0\n * @since 0.2.0\n */\nexport const useGets = (onGet, params) => {\n    const { addToast } = useToasts();\n    const [loading, setLoading] = useState(false);\n    const [results, setResults] = useState([]);\n    const [sort, sortBy] = useState(null);\n    const [searchQuery, searchBy] = useState(undefined);\n    const [shouldRefresh, setShouldRefresh] = useState(false);\n    const [filters, filterBy] = useState(null);\n\n    useEffect(() => {\n        setLoading(true);\n        onGet({ sort, q: searchQuery, ...filters, ...params })\n            .then((response) => {\n                setResults(response);\n                setLoading(false);\n            })\n            .catch((error) => {\n                setLoading(false);\n                addToast(error.message, { appearance: \"error\" });\n            });\n    }, [sort, filters, searchQuery, shouldRefresh]);\n\n    const refresh = useCallback(() => setShouldRefresh(!shouldRefresh), [\n        shouldRefresh,\n    ]);\n\n    return {\n        results,\n        loading,\n        sortBy,\n        searchBy,\n        refresh,\n        filterBy,\n    };\n};\n\n/**\n * @function\n * @name useGet\n * @description Custom hook for getting a single result from server\n *\n * @param {string} id Resource Id\n * @param {Function} onGet Client function invoked for retrieving data\n * @returns {*[]} Array for Result and loading state\n * @version 0.2.0\n * @since 0.1.0\n */\nexport const useGet = (id, onGet) => {\n    const { addToast } = useToasts();\n    const [loading, setLoading] = useState(false);\n    const [result, setResult] = useState(null);\n    const [shouldRefresh, setShouldRefresh] = useState(false);\n\n    useEffect(() => {\n        setLoading(true);\n\n        onGet(id)\n            .then((response) => {\n                setResult(response);\n                setLoading(false);\n            })\n            .catch((error) => {\n                setLoading(false);\n                addToast(error.message, { appearance: \"error\" });\n            });\n    }, [shouldRefresh]);\n\n    const refresh = useCallback(() => setShouldRefresh(!shouldRefresh), [\n        shouldRefresh,\n    ]);\n\n    return { result, loading, refresh };\n};\n\n/**\n * @function\n * @name useConfigs\n * @description Configs context hooks\n *\n * @returns {object} Configs Context\n *\n * @version 0.1.0\n * @since 0.1.0\n */\n// export const useConfigs = () => {\n//     return useContext(ConfigsContext);\n// };\n\n// export const useLocale = () => {\n//     return useContext(LocaleContext);\n// };\n\n// export const useRole = () => {\n//     return useContext(RolesContext);\n// };","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/index.js",["336","337","338","339","340","341","342","343"],"import React, { useEffect } from \"react\";\nimport Navbar from \"./Navibar/index\";\nimport { IconContext } from \"react-icons\";\nimport Container from \"@material-ui/core/Container\";\nimport Footer from \"../Footer/Footer\";\nimport { connect } from \"react-redux\";\nimport { getUserId, httpActions } from \"../../client/index\";\nimport Team from \"./Team/Index\";\nimport { useGet } from \"../../hooks\";\nimport \"./dashbar.css\";\nimport RegistrationForm from \"./Registration\";\nimport { ProtectRoute } from \"../../components/ProtectRoute\";\nimport Regform from \"../Pdf/Pdf\";\nimport Printform from \"../Dash_board/Printform/Printform\";\nimport Spline from \"./Charts/Spline\";\nimport Profile from \"../Dash_board/Profile/Profile\";\nimport { SAVE_INITIAL_DATA } from \"../../actions\";\nimport Report from \"./Report/Report\";\n\nimport {\n  Redirect,\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from \"react-router-dom\";\n\nconst { getProfile } = httpActions;\n\nfunction Index({ modalShown, toggleModal, showProfile, dispatch }) {\n  let initial;\n  const vendorId = getUserId();\n  const { result: user, loading, refresh } = useGet(vendorId, getProfile);\n  const { fname, lname, email, username, phone, userRole, signature } =\n    user || {};\n\n  if (fname && lname) {\n    initial = `${fname} ${lname}`\n      .split(\" \")\n      .map((n, i, a) => (i === 0 || i + 1 === a.length ? n[0] : null))\n      .join(\"\")\n      .toUpperCase();\n  }\n\n  useEffect(() => {\n    dispatch({\n      type: SAVE_INITIAL_DATA,\n      payload: {\n        fname,\n        lname,\n        email,\n        username,\n        phone,\n        userRole,\n        initial,\n        signature,\n      },\n    });\n  }, [user]);\n\n  return (\n    <>\n      {\" \"}\n      {showProfile && <Profile />}{\" \"}\n      <IconContext.Provider value={{ color: \"#fff\" }}>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n          }}\n        >\n          <Router>\n            <Navbar props={initial} />{\" \"}\n            <Container className=\"dashboard\">\n              <Switch>\n                <ProtectRoute path=\"/dashboard\" exact component={Spline} />{\" \"}\n                <ProtectRoute\n                  path=\"/dashboard/registration\"\n                  exact\n                  component={RegistrationForm}\n                />{\" \"}\n                <ProtectRoute path=\"/dashboard/team\" component={Team} />{\" \"}\n                <ProtectRoute path=\"/dashboard/reports\" component={Report} />{\" \"}\n              </Switch>{\" \"}\n            </Container>{\" \"}\n          </Router>{\" \"}\n        </div>{\" \"}\n      </IconContext.Provider>{\" \"}\n    </>\n  );\n}\nconst mapStateToprops = (store) => {\n  return { ...store };\n};\n\nexport default connect(mapStateToprops)(Index);\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Navibar/index.js",["344"],"import React, { useState } from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { SidebarData } from \"../Menubar/sidebarData\";\nimport { connect } from \"react-redux\";\nimport * as FaIcons from \"react-icons/fa\";\nimport * as AiIcons from \"react-icons/ai\";\nimport * as IoIcons from \"react-icons/io\";\nimport \"../Navibar/navbar.css\";\nimport { logout as signout } from \"../../../client\";\nimport { VIEW_USER, CLEAR_REPORT_DATA } from \"../../../actions\";\n\nfunction Index({ dispatch, props }) {\n  const [sidebar, setSidebar] = useState(false);\n  const showsidebar = () => setSidebar(!sidebar);\n  const [modalShown, toggleModal] = useState(false);\n\n  function handle(title) {\n    if (title == \"Registration\") {\n      dispatch({ type: CLEAR_REPORT_DATA });\n    }\n  }\n  const logout = {\n    title: \"Reports\",\n    path: \"/reports\",\n    icon: <IoIcons.IoIosPaper />,\n    cName: \"nav-text\",\n  };\n  return (\n    <>\n      <div className=\"navbar\">\n        <Link to=\"#\" className=\"menu-bars\">\n          <FaIcons.FaBars onClick={showsidebar} />{\" \"}\n        </Link>{\" \"}\n        <div className=\"pavatar\">\n          <div\n            className=\"avatar\"\n            onClick={() => {\n              toggleModal(!modalShown);\n              dispatch({ type: VIEW_USER, payload: { modalShown } });\n            }}\n          >\n            <span className=\"initial\"> {props} </span>{\" \"}\n          </div>{\" \"}\n        </div>{\" \"}\n      </div>{\" \"}\n      <nav className={sidebar ? \"nav-menu active\" : \"nav-menu\"}>\n        <ul className=\"nav-menu-items\" onClick={showsidebar}>\n          <li className=\"navbar-toggle\">\n            <Link to=\"#\" className=\"menu-bars\">\n              <AiIcons.AiOutlineClose />\n            </Link>{\" \"}\n          </li>{\" \"}\n          {SidebarData.map((item, index) => {\n            return (\n              <li key={index} className={item.cName}>\n                <NavLink\n                  className=\"menu-bar\"\n                  to={item.path}\n                  activeClassName=\"active\"\n                  onClick={() => handle(item.title)}\n                >\n                  {item.icon} <span> {item.title} </span>{\" \"}\n                </NavLink>{\" \"}\n              </li>\n            );\n          })}{\" \"}\n          <li key=\"123\" className={logout.cName}>\n            <Link onClick={() => signout()} className=\"menu-bar\">\n              {\" \"}\n              {logout.icon} <span> Logout </span>{\" \"}\n            </Link>{\" \"}\n          </li>{\" \"}\n        </ul>{\" \"}\n      </nav>{\" \"}\n    </>\n  );\n}\nconst MapStateToprops = (store) => {\n  return { ...store };\n};\nexport default connect(MapStateToprops)(Index);\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Menubar/sidebarData.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Menubar/index.js",["345","346","347"],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Forms/Stepform/ForgotPassword/ForgotPasswordForm.js",["348"],"import React from \"react\";\nimport { useForm, useStep } from \"react-hooks-helper\";\nimport ForgotPass from \"./ForgotPass\";\nimport ResetPass from \"./ResetPass\";\n\nfunction StepForm() {\n  const Default = {\n    email: \"\",\n    code: \"\",\n    newpass: \"\",\n    confirmpass: \"\",\n  };\n\n  const steps = [{ id: \"forgotPassword\" }, { id: \"resetpassword\" }];\n  const [formData, setForm] = useForm(Default);\n  const { step, navigation } = useStep({ steps, initialStep: 0 });\n  const props = { formData, setForm, navigation };\n\n  switch (step.id) {\n    case \"forgotPassword\":\n      return <ForgotPass {...props} />;\n    case \"resetpassword\":\n      return <ResetPass {...props} />;\n  }\n\n  return <div> </div>;\n}\n\nexport default StepForm;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Forms/Stepform/ForgotPassword/ForgotPass.js",["349","350","351"],"import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { getCode } from \"../../../../client\";\nimport Card from \"@material-ui/core/Card\";\n\nconst style = {\n  maxWidth: 300,\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nfunction ForgotPass({ formData, setForm, navigation }) {\n  const { email, code, newpass } = formData;\n\n  async function handle() {\n    let responsecode = \"1234\";\n    if (responsecode) {\n      navigation.next();\n    }\n  }\n\n  return (\n    <Container maxWidth=\"xs\">\n      <Card variant=\"outlined\" style={style}>\n        <h3>Forgot Password</h3>\n        <TextField\n          label=\"email / phone\"\n          value={email}\n          onChange={setForm}\n          name=\"email\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <Button\n          variant=\"contained\"\n          fullWidth\n          color=\"primary\"\n          style={{ marginTop: \"1rem\" }}\n          onClick={handle}\n        >\n          Submit\n        </Button>\n      </Card>\n    </Container>\n  );\n}\n\nexport default ForgotPass;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Forms/Stepform/ForgotPassword/ResetPass.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Forms/Login.js",["352","353","354"],"import React, { useRef, useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport { login } from \"../../../client/client\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Spinner from \"../../Spinner/Spiner\";\nimport \"./form.css\";\nconst style = {\n  maxWidth: 300,\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nconst spinerStyle = {\n  display: \"flex\",\n  flexDirection: \"rows\",\n  gap: \"12px\",\n};\n\nfunction Login() {\n  const { addToast } = useToasts();\n  const [loading, setLoading] = useState(false);\n\n  //   const [formData, setForm] = useState({});\n  const username = useRef(\"\");\n  const password = useRef(\"\");\n  const formref = useRef();\n\n  async function handle() {\n    try {\n      setLoading(true);\n      const response = await login({\n        username: username.current.value,\n        password: password.current.value,\n      });\n      formref.current.reset();\n      if (response) {\n        setLoading(false);\n        addToast(\"... was created successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n      }\n      setLoading(false);\n      addToast(\"Wrong Credentials!\", { appearance: \"error\" });\n    } catch (error) {\n      setLoading(false);\n      addToast(\"Failed\", { appearance: \"error\" });\n    }\n  }\n\n  return (\n    <div className=\"login-form\">\n      <Card variant=\"outlined\" style={style}>\n        <h3> Sign in </h3>{\" \"}\n        <TextField\n          label=\"Email \"\n          margin=\"normal\"\n          inputRef={username}\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n          ref={formref}\n        />{\" \"}\n        <TextField\n          label=\"Password \"\n          margin=\"normal\"\n          inputRef={password}\n          type=\"password\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n          ref={formref}\n        />{\" \"}\n        <Button\n          variant=\"contained\"\n          fullWidth\n          color=\"primary\"\n          style={{ marginTop: \"1rem\" }}\n          onClick={handle}\n        >\n          {loading ? (\n            <div style={spinerStyle}>\n              <Spinner loading={loading} /> Loading...{\" \"}\n            </div>\n          ) : (\n            \"Login\"\n          )}{\" \"}\n        </Button>{\" \"}\n        <h4>\n          <Link to=\"/reset-password\" style={{ textDecoration: \"none\" }}>\n            Forgot password ?\n          </Link>{\" \"}\n        </h4>{\" \"}\n      </Card>{\" \"}\n    </div>\n  );\n}\n\nexport default Login;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Forms/ForgotPassword/ForgotPasswordForm.js",["355"],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Forms/ForgotPassword/ForgotPass.js",["356","357","358","359","360"],"import React, { useRef, useState, useEffect } from \"react\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { getCode } from \"../../../../client\";\nimport Card from \"@material-ui/core/Card\";\n\nconst style = {\n  maxWidth: 300,\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nfunction ForgotPass({ formData, setForm, navigation }) {\n  const { addToast } = useToasts();\n  const [loading, setLoading] = useState(false);\n  const { email, code, newpass } = formData;\n\n  async function handle() {\n    setLoading(true);\n    try {\n      const { code } = await getCode({ email });\n\n      if (code) {\n        setLoading(false);\n        addToast(\"... your recovery code successfully sent to your phone\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n        navigation.next();\n        return;\n      }\n      setLoading(false);\n      addToast(\"Account Not found!\", { appearance: \"error\" });\n    } catch (error) {\n      setLoading(false);\n      addToast(\"Failed\", { appearance: \"error\" });\n    }\n  }\n\n  return (\n    <Container maxWidth=\"xs\" className=\"login-form\">\n      <Card variant=\"outlined\" style={style}>\n        <h3> Forgot Password </h3>{\" \"}\n        <TextField\n          label=\"email / phone\"\n          value={email}\n          onChange={setForm}\n          name=\"email\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <Button\n          variant=\"contained\"\n          fullWidth\n          color=\"primary\"\n          style={{ marginTop: \"1rem\" }}\n          onClick={handle}\n        >\n          Submit{\" \"}\n        </Button>{\" \"}\n      </Card>{\" \"}\n    </Container>\n  );\n}\n\nexport default ForgotPass;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Forms/ForgotPassword/ResetPass.js",["361","362","363"],"import React, { useRef, useState, useEffect } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Card from \"@material-ui/core/Card\";\nimport { postCode } from \"../../../../client/client\";\n\nconst style = {\n  maxWidth: 300,\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nfunction ResetPass({ formData, setForm, navigation }) {\n  const { addToast } = useToasts();\n  const [loading, setLoading] = useState(false);\n\n  const { email, code, newpass, confirmpass } = formData;\n\n  async function handle() {\n    if (confirmpass !== newpass) {\n      addToast(\"passwords not match\", { appearance: \"error\" });\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await postCode({ email, usercode: code, newpass });\n      const { isSuccessful } = response;\n\n      if (isSuccessful) {\n        setLoading(false);\n        addToast(\"... your password is successfully updated\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n      } else {\n        setLoading(false);\n        addToast(\"Account Not found!\", { appearance: \"error\" });\n      }\n    } catch (error) {\n      setLoading(false);\n      addToast(\"Failed\", { appearance: \"error\" });\n    }\n  }\n\n  return (\n    <Container maxWidth=\"xs\" className=\"login-form\">\n      <Card style={style}>\n        {\" \"}\n        <h3> Reset Password </h3>{\" \"}\n        <TextField\n          label=\"code\"\n          value={code}\n          onChange={setForm}\n          name=\"code\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"New password\"\n          value={newpass}\n          onChange={setForm}\n          name=\"newpass\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Confirm password\"\n          value={confirmpass}\n          onChange={setForm}\n          name=\"confirmpass\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <Button\n          variant=\"contained\"\n          fullWidth\n          color=\"primary\"\n          style={{ marginTop: \"1rem\" }}\n          onClick={handle}\n        >\n          Submit{\" \"}\n        </Button>{\" \"}\n      </Card>{\" \"}\n    </Container>\n  );\n}\n\nexport default ResetPass;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Navibar/Navbar.js",["364","365","366","367","368"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\nimport { SidebarData } from \"./Menubar/sidebarData\";\nimport * as FaIcons from \"react-icons/fa\";\nimport * as AiIcons from \"react-icons/ai\";\nimport * as IoIcons from \"react-icons/io\";\nimport \"../Navibar/navbar.css\";\nimport \"../home.css\";\n\nfunction Navbar() {\n  const [sidebar, setSidebar] = useState(false);\n  const showsidebar = () => setSidebar(!sidebar);\n  return (\n    <>\n      <div className=\"navba\">\n        <Container className=\"navcontaine\">\n          <Link to=\"#\" className=\"navlinks1\">\n            Home{\" \"}\n          </Link>{\" \"}\n          <Link to=\"#\" className=\"navlinks1\">\n            Feeds{\" \"}\n          </Link>{\" \"}\n          <Link to=\"/login\" className=\"navlinks1\">\n            Login{\" \"}\n          </Link>{\" \"}\n        </Container>{\" \"}\n      </div>{\" \"}\n    </>\n  );\n}\n\nexport default Navbar;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Navibar/Menubar/sidebarData.js",["369"],"import React from \"react\";\nimport * as FaIcons from \"react-icons/fa\";\nimport * as AiIcons from \"react-icons/ai\";\nimport * as IoIcons from \"react-icons/io\";\n\nexport const SidebarData = [{\n        title: \"Home\",\n        path: \"/\",\n        icon: < AiIcons.AiFillHome / > ,\n        cName: \"nav-text\",\n    },\n    {\n        title: \"Feeds\",\n        path: \"/feeds\",\n        icon: < IoIcons.IoMdPeople / > ,\n        cName: \"nav-text\",\n    },\n    {\n        title: \"Login\",\n        path: \"/login\",\n        icon: < IoIcons.IoMdHelpCircle / > ,\n        cName: \"nav-text\",\n    },\n];","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Footer/Footer.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Spinner/Spiner.js",["370"],"import React from \"react\";\nimport { useState } from \"react\";\nimport { css } from \"@emotion/core\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\n// Can be a string as well. Need to ensure each key-value pair ends with ;\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: #fff;\n`;\n\nfunction Spiner({ loading }) {\n  let [color, setColor] = useState(\"#ffffff\");\n\n  return (\n    <div className=\"\">\n      <ClipLoader color={color} loading={loading} css={override} size={25} />\n    </div>\n  );\n}\n\nexport default Spiner;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/index.js",["371","372","373","374"],"import React from \"react\";\nimport { useForm, useStep } from \"react-hooks-helper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Owner from \"./Owner\";\nimport { connect } from \"react-redux\";\nimport InspectionForm from \"./InspectionForm\";\nimport VehicleInfo from \"./VehicleInformatin\";\nimport VehicleInfoCont from \"./VehicleInfoCont\";\nimport EngineType from \"./EngineType\";\nimport ConversionKitInfo from \"./ConversionKitInfo\";\nimport CgnCylinderInfo from \"./CgnCylinderInfo\";\nimport CgnCylinderInfoCont from \"./CgnCylinderInfoCont\";\nimport Preview from \"./Preview\";\nimport \"./reg.css\";\n\nfunction Index({ reportdata }) {\n    const {\n        createdAt = \"\",\n            validto = \"\",\n            name = \"\",\n            email = \"\",\n            phone = \"\",\n            location = \"\",\n            newInstallation = \"...v...\",\n            periodic = \".....\",\n            afterAccident = \"....\",\n            ownername = \"\",\n            vihecleRegno = \"\",\n            manYear = \"\",\n            make = \"\",\n            model = \"\",\n            chasisno = \"\",\n            engineno = \"\",\n            milliege = \"\",\n            biFuel = \"...\",\n            Dedicated = \"...V...\",\n            DualFuel = \"....\",\n            type = \"\",\n            manufacturer = \"\",\n            serialno = \"-\",\n            installername = \"\",\n            cylinderno3 = \"3\",\n            cylinderposition3 = \"\",\n            cylinderSerialNo3 = \"\",\n            cylindertype3 = \"\",\n            cmanufacturer3 = \"\",\n            cmanuContact3 = \"\",\n            servicepressure3 = \"\",\n            cmanufacturedDate3 = \"\",\n            waterVolume3 = \"\",\n            cexpiryDate3 = \"\",\n            tbscertificate3 = \"\",\n            cylinderno1 = \"1\",\n            cylinderposition1 = \"\",\n            cylindertype1 = \"\",\n            cylinderSerialNo1 = \"\",\n            cmanufacturer1 = \"\",\n            cmanuContact1 = \"\",\n            servicepressure1 = \"\",\n            cmanufacturedDate1 = \"\",\n            waterVolume1 = \"\",\n            cexpiryDate1 = \"\",\n            tbscertificate1 = \"\",\n            cylinderno2 = \"2\",\n            cylinderSerialNo2 = \"\",\n            cylinderposition2 = \"\",\n            cylindertype2 = \"\",\n            cmanufacturer2 = \"\",\n            cmanuContact2 = \"\",\n            servicepressure2 = \"\",\n            cmanufacturedDate2 = \"\",\n            waterVolume2 = \"\",\n            cexpiryDate2 = \"\",\n            tbscertificate2 = \"\",\n            inspectorID = \"\",\n            validfrom = \"\",\n    } = reportdata;\n\n    const Default = {\n        name,\n        email,\n        phone,\n        location,\n        newInstallation,\n        periodic,\n        afterAccident,\n        ownername,\n        vihecleRegno,\n        manYear,\n        make,\n        model,\n        chasisno,\n        engineno,\n        milliege,\n        biFuel,\n        Dedicated,\n        DualFuel,\n        type,\n        manufacturer,\n        serialno,\n        installername,\n        cylinderno3,\n        cylinderposition3,\n        cylindertype3,\n        cmanufacturer3,\n        cmanuContact3,\n        servicepressure3,\n        cmanufacturedDate3,\n        waterVolume3,\n        cexpiryDate3,\n        tbscertificate3,\n        cylinderno1,\n        cylinderposition1,\n        cylindertype1,\n        cmanufacturer1,\n        cmanuContact1,\n        servicepressure1,\n        cmanufacturedDate1,\n        waterVolume1,\n        cexpiryDate1,\n        tbscertificate1,\n        cylinderno2,\n        cylinderposition2,\n        cylindertype2,\n        cmanufacturer2,\n        cmanuContact2,\n        cylinderSerialNo1,\n        cylinderSerialNo2,\n        cylinderSerialNo3,\n        servicepressure2,\n        cmanufacturedDate2,\n        waterVolume2,\n        cexpiryDate2,\n        tbscertificate2,\n        validfrom,\n    };\n\n    const steps = [\n        { id: \"Owner\" },\n        { id: \"Inspection-type\" },\n        { id: \"Vehicle-information\" },\n        { id: \"Vehicle-informationCont\" },\n        { id: \"Type-of-ngv\" },\n        { id: \"Conversion-kit-information\" },\n        { id: \"Cng-cylinders-information\" },\n        { id: \"Cng-cylinders-informationCont\" },\n        { id: \"preview\" },\n    ];\n    const [formData, setForm] = useForm(Default);\n    const { step, navigation } = useStep({ steps, initialStep: 0 });\n    const props = { formData, setForm, navigation };\n\n    switch (step.id) {\n        case \"Owner\":\n            return ( <\n                Grid container justify = \"center\"\n                direction = \"column\"\n                alignContent = \"center\"\n                style = {\n                    { height: \"100hv\", border: \"3px\", boxSizing: \"border-box\" } } >\n                <\n                Owner {...props }\n                />{\" \"} <\n                /Grid>\n            );\n\n        case \"Inspection-type\":\n            return ( <\n                Grid container justify = \"center\"\n                direction = \"column\"\n                alignContent = \"center\"\n                style = {\n                    {\n                        height: \"100hv\",\n                        border: \"3px\",\n                        boxSizing: \"border-box\",\n                        paddingTop: \"40px\",\n                    }\n                } >\n                <\n                InspectionForm {...props }\n                />{\" \"} <\n                /Grid>\n            );\n        case \"Vehicle-information\":\n            return ( <\n                Grid container justify = \"center\"\n                direction = \"column\"\n                alignContent = \"center\"\n                style = {\n                    {\n                        height: \"100hv\",\n                        border: \"9px\",\n                        boxSizing: \"border-box\",\n                        paddingTop: \"40px\",\n                    }\n                } >\n                <\n                VehicleInfo {...props }\n                />{\" \"} <\n                /Grid>\n            );\n        case \"Vehicle-informationCont\":\n            return ( <\n                Grid container justify = \"center\"\n                direction = \"column\"\n                alignContent = \"center\"\n                style = {\n                    {\n                        height: \"100hv\",\n                        border: \"3px\",\n                        boxSizing: \"border-box\",\n                        paddingTop: \"40px\",\n                    }\n                } >\n                <\n                VehicleInfoCont {...props }\n                />{\" \"} <\n                /Grid>\n            );\n        case \"Type-of-ngv\":\n            return ( <\n                Grid container justify = \"center\"\n                direction = \"column\"\n                alignContent = \"center\"\n                style = {\n                    {\n                        height: \"100hv\",\n                        border: \"3px\",\n                        boxSizing: \"border-box\",\n                        paddingTop: \"40px\",\n                    }\n                } >\n                <\n                EngineType {...props }\n                />{\" \"} <\n                /Grid>\n            );\n        case \"Conversion-kit-information\":\n            return ( <\n                Grid container justify = \"center\"\n                direction = \"column\"\n                alignContent = \"center\"\n                style = {\n                    {\n                        height: \"100hv\",\n                        border: \"3px\",\n                        boxSizing: \"border-box\",\n                        paddingTop: \"40px\",\n                    }\n                } >\n                <\n                ConversionKitInfo {...props }\n                />{\" \"} <\n                /Grid>\n            );\n        case \"Cng-cylinders-information\":\n            return ( <\n                Grid container justify = \"center\"\n                direction = \"column\"\n                alignContent = \"center\"\n                style = {\n                    {\n                        height: \"100hv\",\n                        border: \"3px\",\n                        boxSizing: \"border-box\",\n                    }\n                } >\n                <\n                CgnCylinderInfo {...props }\n                />{\" \"} <\n                /Grid>\n            );\n        case \"Cng-cylinders-informationCont\":\n            return ( <\n                Grid container justify = \"center\"\n                direction = \"column\"\n                alignContent = \"center\"\n                style = {\n                    {\n                        height: \"100hv\",\n                        border: \"3px\",\n                        boxSizing: \"border-box\",\n                    }\n                } >\n                <\n                CgnCylinderInfoCont {...props }\n                />{\" \"} <\n                /Grid>\n            );\n        case \"preview\":\n            return ( <\n                Box p = { 5 }\n                style = {\n                    {\n                        border: \"3px\",\n                        boxSizing: \"border-box\",\n                        maxHeight: \"550px\",\n                        overflowY: \"auto\",\n                    }\n                } >\n                <\n                Preview {...props }\n                />{\" \"} <\n                /Box>\n            );\n    }\n\n    return <div > < /div>;\n}\nconst MapStateToprops = (store) => {\n    return {...store };\n};\nexport default connect(MapStateToprops)(Index);","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/InspectionForm.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/VehicleInformatin.js",["375","376","377","378","379","380","381","382"],"import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\n\nconst style = {\n  maxWidth: 300,\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nfunction VehicleInfo({ formData, setForm, navigation }) {\n  const {\n    newInstallation,\n    periodic,\n    afterAccident,\n    ownername,\n    vihecleRegno,\n    manYear,\n    make,\n    model,\n    chasisno,\n    engineno,\n    milliege,\n  } = formData;\n\n  async function handle() {\n    let responsecode = \"1234\";\n    if (responsecode) {\n      navigation.next();\n    }\n  }\n  const Default = {\n    newInstallation: \"\",\n    periodic: \"\",\n    afterAccident: \"\",\n    ownername: \"\",\n    vihecleRegno,\n    manYear: \"\",\n    make: \"\",\n    model: \"\",\n    chasisno: \"\",\n    engineno: \"\",\n    milliege: \"\",\n  };\n  return (\n    <Container maxWidth=\"xs\">\n      <Card variant=\"outlined\" style={style}>\n        <h3> VEHICLE INFORMATION </h3>{\" \"}\n        <TextField\n          label=\"Name of Owner\"\n          value={ownername}\n          onChange={setForm}\n          name=\"ownername\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Vehicle Reg No\"\n          value={vihecleRegno}\n          onChange={setForm}\n          name=\"vihecleRegno\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Year of Man.\"\n          value={manYear}\n          onChange={setForm}\n          name=\"manYear\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Make\"\n          value={make}\n          onChange={setForm}\n          name=\"make\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <div style={{ marginTop: \"1rem\" }}>\n          {\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"2px\" }}\n            onClick={() => navigation.previous()}\n          >\n            Back{\" \"}\n          </Button>{\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"1rem\" }}\n            onClick={handle}\n          >\n            Next{\" \"}\n          </Button>{\" \"}\n        </div>{\" \"}\n      </Card>{\" \"}\n    </Container>\n  );\n}\n\nexport default VehicleInfo;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/VehicleInfoCont.js",["383","384","385","386","387","388","389"],"import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\n\nconst style = {\n  maxWidth: 300,\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nfunction VehicleInfocont({ formData, setForm, navigation }) {\n  const {\n    newInstallation,\n    periodic,\n    afterAccident,\n    ownername,\n    vihecleRegno,\n    manYear,\n    make,\n    model,\n    chasisno,\n    engineno,\n    milliege,\n  } = formData;\n\n  async function handle() {\n    let responsecode = \"1234\";\n    if (responsecode) {\n      navigation.next();\n    }\n  }\n  const Default = {\n    newInstallation: \"\",\n    periodic: \"\",\n    afterAccident: \"\",\n    ownername: \"\",\n    vihecleRegno,\n    manYear: \"\",\n    make: \"\",\n    model: \"\",\n    chasisno: \"\",\n    engineno: \"\",\n    milliege: \"\",\n  };\n  return (\n    <Container maxWidth=\"xs\">\n      <Card variant=\"outlined\" style={style}>\n        <h3> Continuation... </h3>{\" \"}\n        <TextField\n          label=\"Model\"\n          value={model}\n          onChange={setForm}\n          name=\"model\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Chasis No or VIN\"\n          value={chasisno}\n          onChange={setForm}\n          name=\"chasisno\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Engine No / Type\"\n          value={engineno}\n          onChange={setForm}\n          name=\"engineno\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Milleage at Inspection (km)\"\n          value={milliege}\n          onChange={setForm}\n          name=\"milliege\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <div style={{ marginTop: \"1rem\" }}>\n          {\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"2px\" }}\n            onClick={() => navigation.previous()}\n          >\n            Back{\" \"}\n          </Button>{\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"1rem\" }}\n            onClick={handle}\n          >\n            Next{\" \"}\n          </Button>{\" \"}\n        </div>{\" \"}\n      </Card>{\" \"}\n    </Container>\n  );\n}\n\nexport default VehicleInfocont;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/EngineType.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/ConversionKitInfo.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/CgnCylinderInfoCont.js",["390"],"import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\n\nconst style = {\n  display: \"flex\",\n  flexDirection: \"row\",\n};\nconst stylemain = {\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n\n  width: \"800px\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nfunction CgnCylinderInfoCont({ formData, setForm, navigation }) {\n  const {\n    servicepressure1,\n    cmanufacturedDate1,\n    waterVolume1,\n    tbscertificate1,\n    servicepressure2,\n    cmanufacturedDate2,\n    waterVolume2,\n    cexpiryDate1,\n    cexpiryDate2,\n    cexpiryDate3,\n    tbscertificate2,\n    servicepressure3,\n    cmanufacturedDate3,\n    waterVolume3,\n    tbscertificate3,\n  } = formData;\n\n  async function handle() {\n    let responsecode = \"1234\";\n    if (responsecode) {\n      navigation.next();\n    }\n  }\n\n  return (\n    <Container>\n      <Card style={stylemain}>\n        <h3> CNG CYLINDERS INFORMATION Cont ... </h3>{\" \"}\n        <Card fullWidth style={style}>\n          <Card>\n            <TextField\n              label=\"Service Pressure(MPa)\"\n              value={servicepressure1}\n              onChange={setForm}\n              name=\"servicepressure1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n            />\n            <TextField\n              value={cmanufacturedDate1}\n              id=\"date\"\n              onChange={setForm}\n              name=\"cmanufacturedDate1\"\n              label=\"Manufactured Date\"\n              type=\"date\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              defaultValue=\"0000-00-00\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <TextField\n              label=\"Water volume(litres)\"\n              value={waterVolume1}\n              onChange={setForm}\n              name=\"waterVolume1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n            />\n            <TextField\n              value={cexpiryDate1}\n              id=\"date\"\n              onChange={setForm}\n              name=\"cexpiryDate1\"\n              label=\"Expiry Date\"\n              type=\"date\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              defaultValue=\"0000-00-00\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n\n            <TextField\n              label=\"TBS certificare\"\n              value={tbscertificate1}\n              onChange={setForm}\n              name=\"tbscertificate1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n            />\n          </Card>{\" \"}\n          <Card>\n            <TextField\n              label=\"Service Pressure(MPa)\"\n              value={servicepressure2}\n              onChange={setForm}\n              name=\"servicepressure2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n            />\n            <TextField\n              value={cmanufacturedDate2}\n              id=\"date\"\n              onChange={setForm}\n              name=\"cmanufacturedDate2\"\n              label=\"Manufactured Date\"\n              type=\"date\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              defaultValue=\"0000-00-00\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <TextField\n              label=\"Water volume(litres)\"\n              value={waterVolume2}\n              onChange={setForm}\n              name=\"waterVolume2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n            />\n\n            <TextField\n              value={cexpiryDate2}\n              id=\"date\"\n              onChange={setForm}\n              name=\"cexpiryDate2\"\n              label=\"Expiry Date\"\n              type=\"date\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              defaultValue=\"0000-00-00\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n\n            <TextField\n              label=\"TBS certificare\"\n              value={tbscertificate2}\n              onChange={setForm}\n              name=\"tbscertificate2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n            />\n          </Card>{\" \"}\n          <Card>\n            <TextField\n              label=\"Service Pressure(MPa)\"\n              value={servicepressure3}\n              onChange={setForm}\n              name=\"servicepressure3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              fullWidth\n            />\n\n            <TextField\n              value={cmanufacturedDate3}\n              id=\"date\"\n              onChange={setForm}\n              name=\"cmanufacturedDate3\"\n              label=\"Manufactured Date\"\n              type=\"date\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              defaultValue=\"0000-00-00\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <TextField\n              label=\"Water volume(litres)\"\n              value={waterVolume3}\n              onChange={setForm}\n              name=\"waterVolume3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              fullWidth\n            />\n            <TextField\n              value={cexpiryDate3}\n              id=\"date\"\n              onChange={setForm}\n              name=\"cexpiryDate3\"\n              label=\"Expiry Date\"\n              type=\"date\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              defaultValue=\"0000-00-00\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n\n            <TextField\n              label=\"TBS certificare\"\n              value={tbscertificate3}\n              onChange={setForm}\n              name=\"tbscertificate3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              fullWidth\n            />\n          </Card>{\" \"}\n        </Card>{\" \"}\n        <div style={{ marginTop: \"1rem\" }}>\n          {\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"2px\" }}\n            onClick={() => navigation.previous()}\n          >\n            Back{\" \"}\n          </Button>{\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"1rem\" }}\n            onClick={() => navigation.next()}\n          >\n            Next{\" \"}\n          </Button>{\" \"}\n        </div>{\" \"}\n      </Card>{\" \"}\n    </Container>\n  );\n}\n\nexport default CgnCylinderInfoCont;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/CgnCylinderInfo.js",["391"],"import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\n\nconst style = {\n  display: \"flex\",\n  flexDirection: \"row\",\n};\nconst stylemain = {\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n\n  width: \"800px\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nfunction CgnCylinderInfo({ formData, setForm, navigation }) {\n  const {\n    cylinderno1,\n    cylinderposition1,\n    cylindertype1,\n    cmanufacturer1,\n    cmanuContact1,\n    cylinderno2,\n    cylinderposition2,\n    cylindertype2,\n    cmanufacturer2,\n    cmanuContact2,\n    cylinderno3,\n    cylinderSerialNo1,\n    cylinderSerialNo2,\n    cylinderSerialNo3,\n    cylinderposition3,\n    cylindertype3,\n    cmanufacturer3,\n    cmanuContact3,\n  } = formData;\n\n  async function handle() {\n    let responsecode = \"1234\";\n    if (responsecode) {\n      navigation.next();\n    }\n  }\n\n  return (\n    <Container>\n      <Card style={stylemain}>\n        <h3> CNG CYLINDERS INFORMATION </h3>{\" \"}\n        <Card fullWidth style={style}>\n          <Card>\n            <TextField\n              label=\"Cylinder No.\"\n              value={cylinderno1}\n              onChange={setForm}\n              name=\"cylinderno1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              defaultValue=\"1\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Cylinder position on vehicle\"\n              value={cylinderposition1}\n              onChange={setForm}\n              name=\"cylinderposition1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Cylinder Type\"\n              value={cylindertype1}\n              onChange={setForm}\n              name=\"cylindertype1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Cylinder Serial No\"\n              value={cylinderSerialNo1}\n              onChange={setForm}\n              name=\"cylinderSerialNo1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Manufacturer Name\"\n              value={cmanufacturer1}\n              onChange={setForm}\n              name=\"cmanufacturer1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Manufacturer Contact\"\n              value={cmanuContact1}\n              onChange={setForm}\n              name=\"cmanuContact1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n          </Card>{\" \"}\n          <Card>\n            <TextField\n              label=\"Cylinder No.\"\n              value={cylinderno2}\n              onChange={setForm}\n              name=\"cylinderno2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              defaultValue=\"2\"\n            />\n            <TextField\n              label=\"Cylinder position on vehicle\"\n              value={cylinderposition2}\n              onChange={setForm}\n              name=\"cylinderposition2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Cylinder Type\"\n              value={cylindertype2}\n              onChange={setForm}\n              name=\"cylindertype2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Cylinder Serial No\"\n              value={cylinderSerialNo2}\n              onChange={setForm}\n              name=\"cylinderSerialNo2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Manufacturer Name\"\n              value={cmanufacturer2}\n              onChange={setForm}\n              name=\"cmanufacturer2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Manufacturer Contact\"\n              value={cmanuContact2}\n              onChange={setForm}\n              name=\"cmanuContact2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n          </Card>{\" \"}\n          <Card>\n            <TextField\n              label=\"Cylinder No.\"\n              value={cylinderno3}\n              onChange={setForm}\n              name=\"cylinderno3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              defaultValue=\"3\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Cylinder position on vehicle\"\n              value={cylinderposition3}\n              onChange={setForm}\n              name=\"cylinderposition3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Cylinder Type\"\n              value={cylindertype3}\n              onChange={setForm}\n              name=\"cylindertype3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Cylinder Serial No\"\n              value={cylinderSerialNo3}\n              onChange={setForm}\n              name=\"cylinderSerialNo3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Manufacturer Name\"\n              value={cmanufacturer3}\n              onChange={setForm}\n              name=\"cmanufacturer3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Manufacturer Contact\"\n              value={cmanuContact3}\n              onChange={setForm}\n              name=\"cmanuContact3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n          </Card>{\" \"}\n        </Card>{\" \"}\n        <div style={{ marginTop: \"1rem\" }}>\n          {\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"2px\" }}\n            onClick={() => navigation.previous()}\n          >\n            Back{\" \"}\n          </Button>{\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"1rem\" }}\n            onClick={() => navigation.next()}\n          >\n            Next{\" \"}\n          </Button>{\" \"}\n        </div>{\" \"}\n      </Card>{\" \"}\n    </Container>\n  );\n}\n\nexport default CgnCylinderInfo;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/Preview.js",["392","393","394","395"],"import React, { useRef, useState, useEffect } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport RenderAccordion from \"./RenderAccordion\";\nimport { postVehicleInfo } from \"../../../client/client\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Spinner from \"../../Spinner/Spiner\";\nimport { useHistory } from \"react-router-dom\";\n\nconst style = {\n  maxWidth: 300,\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nconst spinerStyle = {\n  display: \"flex\",\n  flexDirection: \"rows\",\n  gap: \"12px\",\n};\n\nfunction Preview(data) {\n  let history = useHistory;\n\n  const { formData, navigation, nameid } = data;\n  const {\n    name,\n    email,\n    phone,\n    location,\n    validfrom,\n    newInstallation,\n    periodic,\n    afterAccident,\n    ownername,\n    vihecleRegno,\n    manYear,\n    make,\n    model,\n    chasisno,\n    engineno,\n    milliege,\n    biFuel,\n    Dedicated,\n    DualFuel,\n    type,\n    manufacturer,\n    serialno,\n    installername,\n    cylinderno1,\n    cylinderposition1,\n    cylindertype1,\n    cmanufacturer1,\n    cmanuContact1,\n    servicepressure1,\n    cmanufacturedDate1,\n    waterVolume1,\n    cexpiryDate1,\n    tbscertificate1,\n    cylinderno2,\n    cylinderposition2,\n    cylindertype2,\n    cmanufacturer2,\n    cmanuContact2,\n    servicepressure2,\n    cmanufacturedDate2,\n    cylinderSerialNo1,\n    cylinderSerialNo2,\n    cylinderSerialNo3,\n    waterVolume2,\n    cexpiryDate2,\n    tbscertificate2,\n    cylinderno3,\n    cylinderposition3,\n    cylindertype3,\n    cmanufacturer3,\n    cmanuContact3,\n    servicepressure3,\n    cmanufacturedDate3,\n    waterVolume3,\n    cexpiryDate3,\n    tbscertificate3,\n  } = formData;\n\n  const { addToast } = useToasts();\n  const [loading, setLoading] = useState(false);\n\n  async function handle() {\n    try {\n      setLoading(true);\n      const response = await postVehicleInfo(formData);\n\n      if (response) {\n        setLoading(false);\n        addToast(\"... was created successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n        return;\n      }\n      setLoading(false);\n      addToast(\"Wrong Credentials!\", { appearance: \"error\" });\n    } catch (error) {\n      setLoading(false);\n      addToast(\"Failed\", { appearance: \"error\" });\n    }\n  }\n  const { go } = navigation;\n  return (\n    <Container maxWidth=\"sm\" style={{ height: \"90%\" }}>\n      <h3> Review </h3>{\" \"}\n      <RenderAccordion\n        summary=\"OWNER DETAILS\"\n        details={[\n          { nameid: \"Owner\" },\n          { \"Full Name\": name },\n          { Email: email },\n          { Phone: phone },\n          { Location: location },\n        ]}\n        go={go}\n        nameid={nameid}\n      />{\" \"}\n      <RenderAccordion\n        summary=\"INSPECTION TYPE\"\n        details={[\n          { nameid: \"Inspection-type\" },\n          { \"New installation\": newInstallation },\n          { Periodic: periodic },\n          { \"After Accident\": afterAccident },\n          { \"Valid From\": validfrom },\n        ]}\n        go={go}\n        nameid={nameid}\n      />{\" \"}\n      <RenderAccordion\n        summary=\"VEHICLE INFORMATION\"\n        details={[\n          { nameid: \"Vehicle-information\" },\n          { \"Name of Owner\": ownername },\n          { \"Vehicle Reg No\": vihecleRegno },\n          { \"Year of Man\": manYear },\n          { Make: make },\n          { Model: model },\n          { \"Chasis No or VIN\": chasisno },\n          { \"Engine No / Type\": engineno },\n          { \"Milleage at Inspection(km)\": milliege },\n        ]}\n        go={go}\n      />{\" \"}\n      <RenderAccordion\n        summary=\"TYPE OF NGV\"\n        details={[\n          { nameid: \"Type-of-ngv\" },\n          { \"Bi-Fuel\": biFuel },\n          { Dedicated: Dedicated },\n          { \"Dual Fuel\": DualFuel },\n        ]}\n        go={go}\n      />{\" \"}\n      <RenderAccordion\n        summary=\"CONVERSION KIT INFORMATION\"\n        details={[\n          { nameid: \"Conversion-kit-information\" },\n          { Type: type },\n          { Manufacturer: manufacturer },\n          { \"Serial No\": serialno },\n          { \"Name of Installer\": installername },\n        ]}\n        go={go}\n      />{\" \"}\n      <RenderAccordion\n        summary=\"CNG CYLINDER INFORMATION 1\"\n        details={[\n          { nameid: \"Cng-cylinders-information\" },\n          { \"Cylinder No\": cylinderno1 },\n          { \"Cylinder Position\": cylinderposition1 },\n          { \"Cylinder Type\": cylindertype1 },\n          { \"Cylinder Serial No\": cylinderSerialNo1 },\n          { \"Manufacture Name\": cmanufacturer1 },\n          { \"Manufacturer Address\": cmanuContact1 },\n          { \"Service Presssure(MPa)\": servicepressure1 },\n          { \"Manufactured Date\": cmanufacturedDate1 },\n          { \"Water volume(Ltr)\": waterVolume1 },\n          { \"Expiry Date\": cexpiryDate1 },\n          { \"TBS Certificate\": tbscertificate1 },\n        ]}\n        go={go}\n      />{\" \"}\n      <RenderAccordion\n        summary=\"CNG CYLINDER INFORMATION 2\"\n        details={[\n          { nameid: \"Cng-cylinders-information\" },\n          { \"Cylinder No\": cylinderno2 },\n          { \"Cylinder Position\": cylinderposition2 },\n          { \"Cylinder Type\": cylindertype2 },\n          { \"Cylinder Serial No\": cylinderSerialNo2 },\n          { \"Manufacture Name\": cmanufacturer2 },\n          { \"Manufacturer Address\": cmanuContact2 },\n          { \"Service Presssure(MPa)\": servicepressure2 },\n          { \"Manufactured Date\": cmanufacturedDate2 },\n          { \"Water volume(Ltr)\": waterVolume2 },\n          { \"Expiry Date\": cexpiryDate2 },\n          { \"TBS Certificate\": tbscertificate2 },\n        ]}\n        go={go}\n      />{\" \"}\n      <RenderAccordion\n        summary=\"CNG CYLINDER INFORMATION 3\"\n        details={[\n          { nameid: \"Cng-cylinders-information\" },\n          { \"Cylinder No\": cylinderno3 },\n          { \"Cylinder Position\": cylinderposition3 },\n          { \"Cylinder Type\": cylindertype3 },\n          { \"Cylinder Serial No\": cylinderSerialNo3 },\n          { \"Manufacture Name\": cmanufacturer3 },\n          { \"Manufacturer Address\": cmanuContact3 },\n          { \"Service Presssure(MPa)\": servicepressure3 },\n          { \"Manufactured Date\": cmanufacturedDate3 },\n          { \"Water volume(Ltr)\": waterVolume3 },\n          { \"Expiry Date\": cexpiryDate3 },\n          { \"TBS Certificate\": tbscertificate3 },\n        ]}\n        go={go}\n      />{\" \"}\n      <div style={{ marginTop: \"1rem\" }}>\n        {\" \"}\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          style={{ marginRight: \"2px\" }}\n          onClick={() => window.location.replace(\"/dashboard/\")}\n        >\n          Back{\" \"}\n        </Button>{\" \"}\n        <Button variant=\"contained\" width=\"md\" color=\"primary\" onClick={handle}>\n          {loading ? (\n            <div style={spinerStyle}>\n              <Spinner loading={loading} /> Loading...{\" \"}\n            </div>\n          ) : (\n            \"Save\"\n          )}{\" \"}\n        </Button>{\" \"}\n      </div>{\" \"}\n    </Container>\n  );\n}\nexport default Preview;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/RenderAccordion.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Pdf/Pdf.js",["396"],"import React from \"react\";\nimport ReactToPrint from \"react-to-print\";\nimport Regform from \"../Dash_board/Printform/Printform\";\n\nconst thStyle = {\n  fontFamily: \"Anton\",\n  fontWeight: \"normal\",\n  fontStyle: \"normal\",\n};\n\nclass ComponentToPrint extends React.Component {\n  render() {\n    return <Regform />;\n  }\n}\n\nclass Example extends React.Component {\n  render() {\n    return (\n      <div>\n        <ReactToPrint\n          trigger={() => <button> Print this out! </button>}\n          content={() => this.componentRef}\n        />{\" \"}\n        <ComponentToPrint ref={(el) => (this.componentRef = el)} />{\" \"}\n      </div>\n    );\n  }\n}\n\nexport default Example;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/Owner.js",["397"],"import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport { useHistory } from \"react-router-dom\";\nconst style = {\n  maxWidth: 300,\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nfunction Owner({ formData, setForm, navigation }) {\n  const { name, email, phone, plateno, location } = formData;\n  let history = useHistory();\n  async function handle() {\n    let responsecode = \"1234\";\n    if (responsecode) {\n      navigation.next();\n    }\n  }\n\n  return (\n    <Container maxWidth=\"xs\">\n      <Card variant=\"outlined\" style={style}>\n        <h3> OWNER INFORMATION </h3>{\" \"}\n        <TextField\n          label=\"Full Name\"\n          value={name}\n          onChange={setForm}\n          name=\"name\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Location\"\n          value={location}\n          onChange={setForm}\n          name=\"location\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Email\"\n          value={email}\n          onChange={setForm}\n          name=\"email\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Phone\"\n          value={phone}\n          onChange={setForm}\n          name=\"phone\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <div style={{ marginTop: \"1rem\" }}>\n          {\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"2px\" }}\n            onClick={() => history.push(\"/dashboard\")}\n          >\n            Back{\" \"}\n          </Button>{\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"1rem\" }}\n            onClick={handle}\n          >\n            Next{\" \"}\n          </Button>{\" \"}\n        </div>{\" \"}\n      </Card>{\" \"}\n    </Container>\n  );\n}\n\nexport default Owner;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Printform/Printform.js",["398","399","400","401","402","403","404","405","406","407","408","409","410","411","412"],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Charts/Spline.js",["413"],"import { Chart } from \"react-google-charts\";\nimport * as React from \"react\";\nimport { render } from \"react-dom\";\n\nconst options = {\n  title: \"Months vs. Number of cars inspected\",\n  hAxis: { title: \"Months\", viewWindow: { min: 0, max: 12 } },\n  vAxis: {\n    title: \"Number of cars inspected\",\n    viewWindow: { min: 0, max: 120 },\n  },\n  legend: \"none\",\n};\nconst data = [\n  [\"Months\", \"Number of cars inspected\"],\n  [0, 0],\n  [1, 5],\n  [2, 14],\n  [3, 5],\n  [4, 3],\n  [5, 7],\n  [6, 7],\n  [7, 10],\n  [8, 7],\n  [9, 7],\n  [10, 7],\n  [11, 7],\n  [12, 7],\n];\n\nfunction Spline() {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        background: \"red\",\n\n        width: \"auto\",\n      }}\n    >\n      <Chart\n        chartType=\"LineChart\"\n        data={data}\n        options={options}\n        width=\"100%\"\n        height=\"500px\"\n        legendToggle\n      />\n    </div>\n  );\n}\n\nexport default Spline;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Profile/Profile.js",["414","415","416","417","418","419","420","421"],"import React, { useRef, useState, useEffect } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport { getUserId, httpActions } from \"../../../client/index\";\nimport \"./profile.css\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { connect } from \"react-redux\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { useGet } from \"../../../hooks\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Spinner from \"../../Spinner/Spiner\";\nimport { EDIT_USER, EXIT_EDIT_USER, EXIT_VEW_USER } from \"../../../actions\";\nimport { editProfile } from \"../../../client\";\n\nconst spinerStyle = {\n  display: \"flex\",\n  flexDirection: \"rows\",\n  gap: \"12px\",\n};\n\nconst Editstyle = {\n  maxWidth: 300,\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nconst { putProfile } = httpActions;\n\nfunction Profile({ profile, edituser, dispatch }) {\n  const style = { display: \"flex\", flexDirection: \"row\", fontWeight: \"bold\" };\n  const { fname, initial, lname, email, username, phone, userRole } =\n    profile || {};\n  const { addToast } = useToasts();\n  const [loading, setLoading] = useState(false);\n  const formref = useRef();\n  const fsname = useRef(fname);\n  const lsname = useRef(lname);\n  const usrphone = useRef(phone);\n\n  async function handlesave() {\n    try {\n      setLoading(true);\n      // formref.current.reset();\n      const response = await editProfile({\n        firstname: fsname.current.value,\n        lastname: lsname.current.value,\n        phone: usrphone.current.value,\n      });\n\n      if (response) {\n        setLoading(false);\n        addToast(\"... was Updated successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n        window.location.replace(`/dashboard`);\n        return;\n      }\n      setLoading(false);\n      addToast(\"Updates saved!\", { appearance: \"warning\" });\n    } catch (error) {\n      setLoading(false);\n      addToast(\"Failed\", { appearance: \"error\" });\n    }\n  }\n\n  const edit = false;\n\n  return (\n    <>\n      {\" \"}\n      {!edituser ? (\n        <Card\n          variant=\"outlined \"\n          style={{\n            marginTop: \"10px\",\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"50%\",\n            fontFamily: \"sans-serif\",\n            transform: \"translate(-50%, -50%)\",\n            width: \"35%\",\n            minWidth: \"300px\",\n            zIndex: \"1\",\n            height: \"500px\",\n            borderRadius: \"16px\",\n          }}\n        >\n          <div className=\"pavata\">\n            <div className=\"avata\">\n              <span className=\"initialzoomp\"> {initial} </span>{\" \"}\n            </div>{\" \"}\n          </div>{\" \"}\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n            }}\n          >\n            {\" \"}\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                width: \"80%\",\n                margin: \"50px\",\n                gap: \"16px\",\n              }}\n            >\n              <span style={style}>\n                Name:{\" \"}\n                <span style={{ fontWeight: \"normal\" }}>\n                  {\" \"}\n                  {fname + \"   \" + lname}{\" \"}\n                </span>{\" \"}\n              </span>{\" \"}\n              <span style={style}>\n                Email: <span style={{ fontWeight: \"normal\" }}> {email} </span>{\" \"}\n              </span>{\" \"}\n              <span style={style}>\n                Phone: <span style={{ fontWeight: \"normal\" }}> {phone} </span>{\" \"}\n              </span>{\" \"}\n              <span style={style}>\n                Role: <span style={{ fontWeight: \"normal\" }}> {userRole} </span>{\" \"}\n              </span>{\" \"}\n            </div>{\" \"}\n            <IconButton\n              style={{\n                width: \"10%\",\n                height: \"50px\",\n                marginTop: \"78px\",\n                marginRight: \"30px\",\n              }}\n              color=\"primary\"\n              component=\"span\"\n              onClick={() => {\n                dispatch({ type: EDIT_USER });\n              }}\n            >\n              <Edit />\n            </IconButton>{\" \"}\n          </div>\n          <div style={{ display: \"flex \", justifyContent: \"center\" }}>\n            {\" \"}\n            <Button\n              variant=\"contained\"\n              width=\"sm\"\n              style={{ marginTop: \"1rem\", paddingLeft: \"0px\" }}\n              onClick={() => dispatch({ type: EXIT_VEW_USER })}\n            >\n              Close{\" \"}\n            </Button>{\" \"}\n          </div>\n        </Card>\n      ) : (\n        <Card\n          variant=\"outlined \"\n          style={{\n            marginTop: \"10px\",\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"50%\",\n            fontFamily: \"sans-serif\",\n            transform: \"translate(-50%, -50%)\",\n            width: \"35%\",\n            minWidth: \"300px\",\n            zIndex: \"1\",\n            height: \"400px\",\n            borderRadius: \"16px\",\n            maxWidth: 300,\n            padding: \"20px\",\n            borderRadius: \"16px\",\n            transition: \"0.3s\",\n            boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n            \"&:hover\": {\n              boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n            },\n          }}\n        >\n          {\" \"}\n          <TextField\n            label=\"First Name \"\n            defaultValue={fname}\n            margin=\"normal\"\n            inputRef={fsname}\n            variant=\"outlined\"\n            autoComplete=\"off\"\n            fullWidth\n            ref={formref}\n          />{\" \"}\n          <TextField\n            label=\"Last Name \"\n            margin=\"normal\"\n            inputRef={lsname}\n            variant=\"outlined\"\n            autoComplete=\"off\"\n            defaultValue={lname}\n            fullWidth\n            ref={formref}\n          />{\" \"}\n          <TextField\n            label=\"Phone\"\n            margin=\"normal\"\n            defaultValue={phone}\n            inputRef={usrphone}\n            variant=\"outlined\"\n            autoComplete=\"off\"\n            fullWidth\n            ref={formref}\n          />{\" \"}\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n              gap: \"10px\",\n            }}\n          >\n            {\" \"}\n            <Button\n              variant=\"contained\"\n              widht=\"sm\"\n              color=\"primary\"\n              style={{ marginTop: \"1rem\", paddingLeft: \"0px\" }}\n              onClick={handlesave}\n            >\n              {loading ? (\n                <div style={spinerStyle}>\n                  <Spinner loading={loading} /> Loading...{\" \"}\n                </div>\n              ) : (\n                \"Save\"\n              )}{\" \"}\n            </Button>{\" \"}\n            <Button\n              variant=\"contained\"\n              width=\"sm\"\n              style={{ marginTop: \"1rem\", paddingLeft: \"0px\" }}\n              onClick={() => dispatch({ type: EXIT_EDIT_USER })}\n            >\n              Close{\" \"}\n            </Button>{\" \"}\n          </div>\n          <h4> </h4>{\" \"}\n        </Card>\n      )}{\" \"}\n    </>\n  );\n}\nconst MapStateToprops = (store) => {\n  return { ...store };\n};\nexport default connect(MapStateToprops)(Profile);\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Team/Index.js",["422","423"],"import React, { useMemo } from \"react\";\nimport Table from \"./Table/Table\";\nimport Adduser from \"./Regteam\";\nimport { connect } from \"react-redux\";\nimport { ADD_USER } from \"../../../actions\";\n\nfunction Index({ adduser }) {\n  return (\n    <div style={{ height: \"600px\" }}>{!adduser ? <Table /> : <Adduser />} </div>\n  );\n}\nconst MapStateToprops = (store) => {\n  return { ...store };\n};\nexport default connect(MapStateToprops)(Index);\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Team/Regteam.js",["424","425","426","427","428"],"import React, { useRef, useState, useEffect } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport { useToasts } from \"react-toast-notifications\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Spinner from \"../../Spinner/Spiner\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { connect } from \"react-redux\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { ADD_USER, EXIT_ADD_FORM } from \"../../../actions\";\nimport { addUser } from \"../../../client/client\";\n\nconst spinerStyle = {\n  display: \"flex\",\n  flexDirection: \"rows\",\n  gap: \"12px\",\n};\n\nfunction Regteam({ adduser, teamdata, dispatch }) {\n  const style = { display: \"flex\", flexDirection: \"row\", fontWeight: \"bold\" };\n  const [cng, setCng] = useState(\"\");\n  const [open, setOpen] = React.useState(false);\n  const { addToast } = useToasts();\n  const [loading, setLoading] = useState(false);\n  const formref = useRef();\n  const fsname = useRef(\"\");\n  const lsname = useRef(\"\");\n  const usrphone = useRef(\"\");\n  const email = useRef(\"\");\n  const signature = useRef(\"\");\n  const pass = useRef(\"\");\n\n  const {\n    fname = \"\",\n    lname = \"\",\n    usphone = \"\",\n    usremail = \"\",\n    usrcng = \"\",\n    usrpass = \"\",\n  } = teamdata;\n  const handleChange = (event) => {\n    setCng(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  async function handlesave() {\n    try {\n      setLoading(true);\n      // formref.current.reset();\n      let response = await addUser({\n        firstname: fsname.current.value,\n        lastname: lsname.current.value,\n        email: email.current.value,\n        username: email.current.value,\n        signature: cng,\n        phone: usrphone.current.value,\n        password: pass.current.value,\n      });\n\n      if (response) {\n        setLoading(false);\n        addToast(\" User Added successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n        window.location.replace(`/dashboard/team`);\n        return;\n      }\n      setLoading(false);\n      addToast(\"Updates saved!\", { appearance: \"warning\" });\n    } catch (error) {\n      setLoading(false);\n      addToast(\"Failed\", { appearance: \"error\" });\n    }\n  }\n\n  return (\n    <Card\n      variant=\"outlined \"\n      style={{\n        marginTop: \"30px\",\n        position: \"absolute\",\n        left: \"50%\",\n        top: \"50%\",\n        fontFamily: \"sans-serif\",\n        transform: \"translate(-50%, -50%)\",\n        width: \"35%\",\n        minWidth: \"300px\",\n        zIndex: \"1\",\n        height: \"auto\",\n        borderRadius: \"16px\",\n        marginBottom: \"20px !important\",\n        maxWidth: 300,\n        padding: \"20px\",\n        borderRadius: \"16px\",\n        transition: \"0.3s\",\n        boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n        \"&:hover\": {\n          boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n        },\n      }}\n    >\n      {\" \"}\n      <TextField\n        label=\"First Name \"\n        margin=\"normal\"\n        inputRef={fsname}\n        variant=\"outlined\"\n        autoComplete=\"off\"\n        fullWidth\n        ref={formref}\n        defaultValue={fname}\n      />{\" \"}\n      <TextField\n        label=\"Last Name \"\n        margin=\"normal\"\n        inputRef={lsname}\n        variant=\"outlined\"\n        autoComplete=\"off\"\n        fullWidth\n        defaultValue={lname}\n        ref={formref}\n      />{\" \"}\n      <TextField\n        label=\"Phone\"\n        margin=\"normal\"\n        inputRef={usrphone}\n        variant=\"outlined\"\n        autoComplete=\"off\"\n        fullWidth\n        ref={formref}\n        defaultValue={usphone}\n      />{\" \"}\n      <TextField\n        label=\"Email\"\n        margin=\"normal\"\n        inputRef={email}\n        variant=\"outlined\"\n        autoComplete=\"off\"\n        fullWidth\n        defaultValue={usremail}\n        ref={formref}\n      />{\" \"}\n      <TextField\n        label=\"Password\"\n        margin=\"normal\"\n        inputRef={pass}\n        variant=\"outlined\"\n        autoComplete=\"off\"\n        fullWidth\n        defaultValue={usrpass}\n        ref={formref}\n      />{\" \"}\n      <InputLabel id=\"label\"> CNG - FSI </InputLabel>{\" \"}\n      <Select\n        labelId=\"label\"\n        id=\"select\"\n        open={open}\n        onClose={handleClose}\n        onOpen={handleOpen}\n        value={cng}\n        onChange={handleChange}\n        defaultValue={usrcng}\n        ref={formref}\n      >\n        <MenuItem value=\"majengo\"> Majengo </MenuItem>{\" \"}\n        <MenuItem value=\"masaka\"> Masaka </MenuItem>{\" \"}\n        <MenuItem value=\"rajabu\"> Rajabu </MenuItem>{\" \"}\n      </Select>{\" \"}\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          gap: \"10px\",\n        }}\n      >\n        {\" \"}\n        <Button\n          variant=\"contained\"\n          width=\"sm\"\n          color=\"primary\"\n          style={{ marginTop: \"1rem\" }}\n          onClick={handlesave}\n        >\n          {loading ? (\n            <div style={spinerStyle}>\n              <Spinner loading={loading} /> Loading...{\" \"}\n            </div>\n          ) : (\n            \"Save\"\n          )}{\" \"}\n        </Button>{\" \"}\n        <Button\n          variant=\"contained\"\n          width=\"sm\"\n          style={{ marginTop: \"1rem\" }}\n          onClick={() => dispatch({ type: EXIT_ADD_FORM })}\n        >\n          Close{\" \"}\n        </Button>{\" \"}\n      </div>{\" \"}\n      <h4> </h4>{\" \"}\n    </Card>\n  );\n}\nconst MapStateToprops = (store) => {\n  return { ...store };\n};\n\nexport default connect(MapStateToprops)(Regteam);\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Team/Table/Table.js",["429","430","431","432","433","434","435","436","437","438","439","440","441"],"import React, {\n  useCallback,\n  useMemo,\n  useEffect,\n  useState,\n  useRef,\n} from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { FaEye, FaRegEye, FaTrash, FaPrint } from \"react-icons/fa\";\nimport { ImPencil } from \"react-icons/im\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Pagination from \"react-bootstrap/Pagination\";\nimport { useGet, useGetList } from \"../../../../hooks/index\";\nimport { connect } from \"react-redux\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Button from \"@material-ui/core/Button\";\nimport { getUsers, deleteUser } from \"../../../../client/client\";\nimport {\n  ADD_USER,\n  SAVE_PROFILE_DATA,\n  CLEAR_PROFILE_DATA,\n} from \"../../../../actions\";\nimport \"./tableteam.css\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nfunction BasicTable({ adduser, dispatch }) {\n  const { results: rows, loading, refresh } = useGetList(getUsers);\n  const { addToast } = useToasts();\n  const [loadingdel, setLoadingdel] = useState(false);\n\n  const Actions = useCallback(\n    (row) => (\n      <div\n        style={{\n          marginTop: \"30px\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          gap: \"15px\",\n          paddingRight: \"40px\",\n        }}\n      >\n        <Link>\n          {\" \"}\n          <ImPencil\n            className=\"IconStyle\"\n            onClick={() => {\n              dispatch({ type: SAVE_PROFILE_DATA, payload: row });\n              dispatch({ type: ADD_USER });\n            }}\n          />\n        </Link>\n\n        <FaTrash\n          id=\"trash\"\n          className=\"IconStyle\"\n          onClick={() => {\n            handledelete(row);\n          }}\n        />\n      </div>\n    ),\n    []\n  );\n  let history = useHistory();\n  const columns = [\n    { label: \"First name\", show: true, name: \"first_name\" },\n    { label: \"Last name\", show: true, name: \"last_name\" },\n    { label: \"Phone \", show: true, name: \"phone\" },\n    { label: \"Email\", show: true, name: \"email\" },\n    { label: \"Role\", show: true, name: \"userRole\" },\n    { label: \"Signature \", show: true, name: \"signature\" },\n    { name: \"formatter\", label: \"Actions\", show: true, formatter: Actions },\n  ];\n\n  const classes = useStyles();\n  const handleAdduser = () => {\n    dispatch({ type: CLEAR_PROFILE_DATA });\n    dispatch({ type: ADD_USER });\n  };\n\n  async function handledelete(row) {\n    const { id } = row;\n    try {\n      setLoadingdel(true);\n      let response = await deleteUser(id);\n\n      if (response) {\n        setLoadingdel(false);\n        addToast(\"deleted successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n        window.location.replace(\"/dashboard/team\");\n        return;\n      }\n      setLoadingdel(false);\n      addToast(\"Wrong Credentials!\", { appearance: \"error\" });\n    } catch (error) {\n      setLoadingdel(false);\n      addToast(\"Failed\", { appearance: \"error\" });\n    }\n  }\n\n  return (\n    <div className=\"table-wrapper\">\n      <div style={{ textAlign: \"center\" }}>TEAM</div>\n\n      <TableContainer\n        component={Paper}\n        style={{\n          border: \"none\",\n        }}\n      >\n        <Table\n          className={classes.table}\n          aria-label=\"simple table\"\n          style={{\n            border: \"none\",\n            padding: \"auto\",\n          }}\n        >\n          <TableHead style={{ background: \"rgb(241, 239, 239)\" }}>\n            <TableRow>\n              <TableCell></TableCell>\n              {columns.map((th) => (\n                <TableCell>{th.label}</TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row, index) => (\n              <TableRow key={row.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {index + 1}\n                </TableCell>\n                {columns.map((column) => {\n                  if (column.show == false) {\n                    return null;\n                  }\n                  if (column.name == \"formatter\") {\n                    return <TableCell>{column.formatter(row)}</TableCell>;\n                  }\n                  return (\n                    <TableCell style={{ border: \"none !important\" }}>\n                      {row[column.name] || \"N/A\"}\n                    </TableCell>\n                  );\n                })}\n              </TableRow>\n            ))}\n          </TableBody>\n          <caption>\n            <div style={{ float: \"right\", marginRight: \"50px\" }}>\n              <Pagination\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  textDecoration: \"none !important\",\n                }}\n              >\n                <Button\n                  variant=\"text\"\n                  style={{ marginRight: \"10px\", fontSize: \"12px\" }}\n                  onClick={() => history.push(\"/dashboard/\")}\n                >\n                  Close{\" \"}\n                </Button>{\" \"}\n                <AddIcon className=\"plus\" onClick={handleAdduser} />\n                <Pagination.First onClick={() => \"\"} disabled={true} />\n                <Pagination.Prev\n                  onClick={() => \"goToPage(currentPage - 1)\"}\n                  disabled={true}\n                />\n                <Pagination.Next\n                  onClick={() => \" goToPage(currentPage + 1)\"}\n                  disabled={true}\n                />\n                <Pagination.Last onClick={() => \"goToPage(pages)\"} />\n              </Pagination>\n            </div>\n          </caption>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\nconst MapStateToprops = (store) => {\n  return { ...store };\n};\nexport default connect(MapStateToprops)(BasicTable);\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Report/Report.js",["442","443","444","445","446","447"],"import React from \"react\";\nimport {\n  Redirect,\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport Table from \"./Table/Table\";\nimport VehicleReg from \"./Registration/index\";\nimport PrintForm from \"../Printform/Printform\";\nimport Pdf from \"../../Pdf/Pdf\";\nimport View from \"./View\";\n\nfunction Report() {\n  const table = false;\n  const editdata = true;\n  const viewdata = false;\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/dashboard/reports\" exact component={Table} />{\" \"}\n        <Route path=\"/dashboard/reports/edit\" exact component={VehicleReg} />{\" \"}\n        <Route path=\"/dashboard/reports/view\" exact component={View} />{\" \"}\n      </Switch>{\" \"}\n    </Router>\n  );\n}\n\nexport default Report;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Report/Table/Table.js",["448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481"],"import React, {\n  useCallback,\n  useMemo,\n  useEffect,\n  useState,\n  useRef,\n} from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport { useToasts } from \"react-toast-notifications\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useGet, useGetList } from \"../../../../hooks/index\";\nimport Pagination from \"react-bootstrap/Pagination\";\nimport { connect } from \"react-redux\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport {\n  getAllReports,\n  deleteReport,\n  getAllhistory,\n  deletehistory,\n} from \"../../../../client/client\";\nimport {\n  ADD_USER,\n  SAVE_REPORT_DATA,\n  CLEAR_PROFILE_DATA,\n  SHOW_HISTORY_TABLE,\n} from \"../../../../actions\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { FaEye, FaRegEye, FaTrash, FaPrint } from \"react-icons/fa\";\nimport { ImPencil } from \"react-icons/im\";\nimport Spin from \"../../../Spinner/Loader\";\nimport \"./tablereport.css\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nfunction BasicTable({ dispatch, reportdata, historytable }) {\n  const classes = useStyles();\n  const formref = useRef();\n  const fsname = useRef(\"\");\n  const [date, setDate] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [opendate, setOpendate] = useState(false);\n  const [openstatus, setOpenstatus] = useState(false);\n  const { addToast } = useToasts();\n  const [loadingdel, setLoadingdel] = useState(false);\n  const [paramsSearch, setSearch] = useState(\"\");\n  const [paramsStatus, setExpire] = useState(\"\");\n  const [paramsDate, setDateparam] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [pageNo, setPageNo] = useState(1);\n  const handleChangedate = (event) => {\n    setDate(event.target.value);\n  };\n\n  let pgno, query;\n  const params = { ...paramsDate, ...paramsSearch, ...paramsStatus, page };\n\n  if (historytable) {\n    query = getAllhistory;\n  } else {\n    query = getAllReports;\n  }\n\n  const {\n    results: historydata,\n    loading: historyloading,\n    currentPage: historycurrentPage,\n    pages: historypages,\n    havePreviousPage: historyhavePreviousPage,\n    haveNextPage: historyhaveNextPage,\n    setCurrentPage: historysetCurrentPage,\n    refresh: historyrefresh,\n  } = useGetList(getAllhistory, params);\n\n  const {\n    results: data,\n    loading,\n    currentPage,\n    pages,\n    havePreviousPage,\n    haveNextPage,\n    setCurrentPage,\n    total,\n    refresh,\n    setTotal,\n  } = useGetList(getAllReports, params);\n\n  let history = useHistory();\n  let pgn = pageNo;\n  const [rows, setRows] = useState(data);\n  const [historyrows, setHistoryRows] = useState(historydata);\n  const Actions = useCallback(\n    (row) => (\n      <div\n        style={{\n          marginTop: \"30px\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          gap: \"15px\",\n          paddingRight: \"40px\",\n        }}\n      >\n        <Link to=\"#\">\n          {\" \"}\n          <FaEye\n            className=\"IconStyle\"\n            onClick={() => {\n              dispatch({ type: SAVE_REPORT_DATA, payload: row });\n              history.push(\"/dashboard/reports/view\");\n            }}\n          />\n        </Link>\n        <Link>\n          <ImPencil\n            className=\"IconStyle\"\n            onClick={() => {\n              dispatch({ type: SAVE_REPORT_DATA, payload: row });\n              history.push(\"/dashboard/reports/edit\");\n            }}\n          />\n        </Link>\n\n        <FaTrash\n          id=\"trash\"\n          className=\"IconStyle\"\n          onClick={() => handledelete(row)}\n        />\n      </div>\n    ),\n    []\n  );\n  const Actionshistory = useCallback(\n    (row) => (\n      <div\n        style={{\n          marginTop: \"30px\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          gap: \"15px\",\n          paddingRight: \"40px\",\n        }}\n      >\n        <Link to=\"#\">\n          {\" \"}\n          <FaEye\n            className=\"IconStyle\"\n            onClick={() => {\n              dispatch({ type: SAVE_REPORT_DATA, payload: row });\n              history.push(\"/dashboard/reports/view\");\n            }}\n          />\n        </Link>\n        <FaTrash\n          id=\"trash\"\n          className=\"IconStyle\"\n          onClick={() => handledeletehistory(row)}\n        />\n      </div>\n    ),\n    []\n  );\n\n  const columns = [\n    { name: \"name\", label: \"Name\", show: true },\n    { name: \"email\", label: \"Email\", show: true },\n    { name: \"phone\", label: \"Phone\", show: true },\n    { name: \"location\", label: \"Location\", show: true },\n    { name: \"newInstallation\", label: \"New Installation\", show: true },\n    { name: \"periodic\", label: \"Periodic\", show: true },\n    { name: \"afterAccident\", label: \"After Accident\", show: true },\n    { name: \"ownername\", label: \"Owner Name\", show: true },\n    { name: \"vihecleRegno\", label: \"Vehicle Reg No\", show: true },\n    { name: \"manYear\", label: \"Manu Year\", show: true },\n    { name: \"make\", label: \"Make\", show: true },\n    { name: \"model\", label: \"Model\", show: true },\n    { name: \"chasisno\", label: \"Chasis No\", show: true },\n    { name: \"engineno\", label: \"Engine No\", show: true },\n    { name: \"milliege\", label: \"Milliege\", show: true },\n    { name: \"biFuel\", label: \"Bi Fuel\", show: true },\n    { name: \"Dedicated\", label: \"Dedicated\", show: true },\n    { name: \"DualFuel\", label: \"Dual Fuel\", show: true },\n    { name: \"type\", label: \"Type\", show: true },\n    { name: \"manufacturer\", label: \"Manufacturer\", show: true },\n    { name: \"serialno\", label: \"Serial No\", show: true },\n    { name: \"installername\", label: \"Installer name\", show: true },\n    { name: \"cylinderno1\", label: \"Cylinder No\", show: true },\n    { name: \"cylinderSerialNo1\", label: \"Cylinder Serial No\", show: true },\n    { name: \"cylinderposition1\", label: \"Cylinder Position\", show: true },\n    { name: \"cylindertype1\", label: \"Cylinder Type\", show: true },\n    { name: \"cmanufacturer1\", label: \"Cylinder manu\", show: true },\n    { name: \"cmanuContact1\", label: \"Cylinder Contact\", show: true },\n    { name: \"servicepressure1\", label: \"Service Pressure\", show: true },\n    { name: \"cmanufacturedDate1\", label: \"Cylinder Manu date\", show: true },\n    { name: \"waterVolume1\", label: \"Water Volume\", show: true },\n    { name: \"cexpiryDate1\", label: \"Cylinder Expiry Date\", show: true },\n    { name: \"tbscertificate1\", label: \"Tbs Certificate\", show: true },\n    { name: \"cylinderno2\", label: \"Cylinder No\", show: true },\n    { name: \"cylinderSerialNo2\", label: \"Cylinder Serial No\", show: true },\n    { name: \"cylinderposition2\", label: \"Cylinder position\", show: true },\n    { name: \"cylindertype2\", label: \"Cylinder type\", show: true },\n    { name: \"cmanufacturer2\", label: \"cylinder manufacturer\", show: true },\n    { name: \"cmanuContact2\", label: \"Cylinder Contact\", show: true },\n    { name: \"servicepressure2\", label: \"Service Pressure\", show: true },\n    { name: \"cmanufacturedDate2\", label: \"Cylinder Manufcturer\", show: true },\n    { name: \"waterVolume2\", label: \"Water Volume\", show: true },\n    { name: \"cexpiryDate2\", label: \"Cylinder Expiry Date\", show: true },\n    { name: \"tbscertificate2\", label: \"Tbs Certificate\", show: true },\n    { name: \"cylinderno3\", label: \"Cylinder No\", show: true },\n    { name: \"cylinderSerialNo3\", label: \"Cylinder Serial No\", show: true },\n    { name: \"cylinderposition3\", label: \"Cylinder position\", show: true },\n    { name: \"cylindertype3\", label: \"Cylinder Type\", show: true },\n    { name: \"cmanufacturer3\", label: \"Cylinder Manufacturer\", show: true },\n    { name: \"cmanuContact3\", label: \"Cylinder Manu Contact\", show: true },\n    { name: \"servicepressure3\", label: \"Service Pressure\", show: true },\n    { name: \"cmanufacturedDate3\", label: \"Cylinder manu date\", show: true },\n    { name: \"waterVolume3\", label: \"Water Vol\", show: true },\n    { name: \"cexpiryDate3\", label: \"Expiry Date\", show: true },\n    { name: \"tbscertificate3\", label: \"Tbs Certicicate\", show: true },\n    { name: \"inspectorID\", label: \"Inspector Name\", show: true },\n    {\n      name: \"formatter\",\n      label: \"Actions\",\n      show: true,\n      formatter: !historytable ? Actions : Actionshistory,\n    },\n  ];\n\n  const handleClosedate = () => {\n    setOpendate(false);\n  };\n\n  const handleOpendate = () => {\n    setOpendate(true);\n  };\n  //..\n  const handleChangestatus = (event) => {\n    setStatus(event.target.value);\n  };\n\n  const handleClosestatus = () => {\n    setOpenstatus(false);\n  };\n\n  const handleOpenstatus = () => {\n    setOpenstatus(true);\n  };\n\n  useEffect(() => {\n    const search = async () => {\n      setLoadingdel(true);\n      let res;\n      if (historytable) {\n        res = await getAllhistory(params);\n      } else {\n        res = await getAllReports(params);\n      }\n\n      setLoadingdel(false);\n      if (historytable) {\n        setHistoryRows(res.data);\n      } else {\n        setRows(res.data);\n        setTotal(res.total);\n      }\n    };\n\n    search();\n  }, [paramsDate, paramsSearch, paramsStatus, page, historytable]);\n\n  async function handledelete(row) {\n    const { id } = row;\n    try {\n      setLoadingdel(true);\n      let response;\n      response = await deleteReport(id);\n      if (response) {\n        setLoadingdel(false);\n        addToast(\"deleted successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n        if (historytable && response) {\n          return;\n        }\n        window.location.replace(\"/dashboard/reports\");\n        return;\n      }\n      setLoadingdel(false);\n      addToast(\"Wrong Credentials!\", { appearance: \"error\" });\n    } catch (error) {\n      setLoadingdel(false);\n      addToast(\"Failed\", { appearance: \"error\" });\n    }\n  }\n  async function handledeletehistory(row) {\n    const { id } = row;\n    try {\n      setLoadingdel(true);\n      let response;\n      response = await deletehistory(id);\n      if (response) {\n        setLoadingdel(false);\n        addToast(\"deleted successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n\n        dispatch({ type: SHOW_HISTORY_TABLE, payload: false });\n        dispatch({ type: SHOW_HISTORY_TABLE, payload: true });\n\n        return;\n      }\n      setLoadingdel(false);\n      addToast(\"Wrong Credentials!\", { appearance: \"error\" });\n    } catch (error) {\n      setLoadingdel(false);\n      addToast(\"Failed\", { appearance: \"error\" });\n    }\n  }\n  return (\n    <div className=\"table-wrapper\">\n      <div style={{ textAlign: \"center\" }}>\n        {historytable ? \"HISTORY \" : \"REPORTS\"}\n      </div>\n      <div\n        style={{\n          height: \"50px\",\n          width: \"100%\",\n          marginBottom: \"30px\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          gap: \"30px\",\n        }}\n      >\n        <TextField\n          id=\"search\"\n          style={{ height: \"10px !important\", marginLeft: \"20px\" }}\n          label=\"Search Cylinder Serial No \"\n          margin=\"normal\"\n          onChange={(e) => {\n            setLoadingdel(true);\n            setSearch({ q: e.target.value });\n          }}\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          width=\"sm\"\n        />{\" \"}\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            marginTop: \"35px\",\n            gap: \"20px\",\n          }}\n        >\n          {\" \"}\n          <InputLabel style={{ paddingTop: \"3px\" }} id=\"label\">\n            Filter By Date\n          </InputLabel>\n          <Select\n            labelId=\"label\"\n            id=\"selectdate\"\n            open={opendate}\n            onClose={handleClosedate}\n            onOpen={handleOpendate}\n            onChange={(e) => setDateparam({ day: e.target.value })}\n          >\n            <MenuItem value=\"day\">Today</MenuItem>\n            <MenuItem value=\"week\">This week</MenuItem>\n            <MenuItem value=\"month\">This month</MenuItem>\n          </Select>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            marginTop: \"35px\",\n            gap: \"20px\",\n          }}\n        >\n          {\" \"}\n          <InputLabel style={{ paddingTop: \"3px\" }} id=\"label\">\n            Filter By Cylinder Status\n          </InputLabel>\n          <Select\n            labelId=\"label\"\n            id=\"selectstatus\"\n            open={openstatus}\n            onClose={handleClosestatus}\n            onOpen={handleOpenstatus}\n            onChange={(e) => setExpire({ status: e.target.value })}\n          >\n            <MenuItem value=\"expired\">Expired</MenuItem>\n            <MenuItem value=\"notexpired\">Not expired</MenuItem>\n          </Select>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            marginTop: \"35px\",\n            gap: \"20px\",\n          }}\n        >\n          {!historytable ? (\n            <InputLabel\n              className=\"switchlabel\"\n              style={{ paddingTop: \"3px\" }}\n              id=\"switchlabel\"\n              onClick={() => dispatch({ type: SHOW_HISTORY_TABLE })}\n            >\n              Switch to History\n            </InputLabel>\n          ) : (\n            <InputLabel\n              className=\"switchlabel\"\n              style={{ paddingTop: \"3px\" }}\n              id=\"switchlabel\"\n              onClick={() => dispatch({ type: SHOW_HISTORY_TABLE })}\n            >\n              Switch to Reports\n            </InputLabel>\n          )}\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            marginTop: \"35px\",\n            gap: \"20px\",\n          }}\n        >\n          {!historytable && (\n            <InputLabel style={{ paddingTop: \"3px\" }} id=\"label\">\n              Total number : <span style={{ color: \"black\" }}>{total}</span>\n            </InputLabel>\n          )}\n        </div>\n      </div>\n      <TableContainer\n        component={Paper}\n        style={{\n          border: \"none !important\",\n        }}\n      >\n        {historytable ? (\n          <Table\n            id=\"repotable\"\n            className={classes.table}\n            aria-label=\"simple table\"\n            style={{\n              border: \"none !important\",\n              padding: \"auto\",\n            }}\n          >\n            <TableHead\n              style={{\n                background: \"rgb(241, 239, 239)\",\n                border: \"none !important\",\n              }}\n            >\n              <TableRow\n                style={{\n                  border: \"none !important\",\n                  height: \"10px !important\",\n                  fontSize: \"8px !important\",\n                }}\n              >\n                <TableCell\n                  style={{\n                    border: \"none !important\",\n                    height: \"10px !important\",\n                    fontSize: \"8px !important\",\n                  }}\n                ></TableCell>\n                {columns.map((th) => (\n                  <TableCell style={{ border: \"none !important\" }}>\n                    {th.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody style={{ border: \"none !important\" }}>\n              {!loading ? (\n                historyrows.map((row, index) => {\n                  return (\n                    <TableRow\n                      key={row.id}\n                      style={{ border: \"none !important\" }}\n                    >\n                      <TableCell\n                        component=\"th\"\n                        scope=\"row\"\n                        style={{ border: \"none !important\" }}\n                      >\n                        <span> {pgn++}</span>\n                      </TableCell>\n                      {columns.map((column) => {\n                        if (column.show == false) {\n                          return null;\n                        }\n                        if (column.name == \"formatter\") {\n                          return <TableCell>{column.formatter(row)}</TableCell>;\n                        }\n\n                        return (\n                          <TableCell style={{ border: \"none !important\" }}>\n                            {row[column.name] || \"N/A\"}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })\n              ) : (\n                <div\n                  style={{\n                    position: \"fixed\",\n                    top: \"50%\",\n                    zIndex: \"4\",\n                    left: \"50%\",\n                  }}\n                >\n                  <Spin />\n                </div>\n              )}\n            </TableBody>\n            <caption>\n              <div style={{ float: \"left\", marginLeft: \"50px\" }}>\n                <Pagination\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    textDecoration: \"none !important\",\n                  }}\n                >\n                  <Button\n                    variant=\"text\"\n                    style={{ marginRight: \"2px\", fontSize: \"12px\" }}\n                    onClick={() => window.location.replace(\"/dashboard\")}\n                  >\n                    Close{\" \"}\n                  </Button>{\" \"}\n                  <Pagination.First\n                    onClick={() => setPage(1)}\n                    disabled={true}\n                  />\n                  <Pagination.Prev\n                    onClick={() => {\n                      setPage(page - 1);\n                      setPageNo(pageNo - 10);\n                    }}\n                    disabled={page > 1 ? false : true}\n                  />\n                  <Pagination.Next\n                    onClick={() => {\n                      setPage(page + 1);\n                      setPageNo(pageNo + 10);\n                    }}\n                    disabled={historypages > page ? false : true}\n                  />\n                  <Pagination.Last\n                    onClick={() => setPage(pages)}\n                    disabled={historypages > page ? false : true}\n                  />\n                </Pagination>\n              </div>\n            </caption>\n          </Table>\n        ) : (\n          <Table\n            id=\"repotable\"\n            className={classes.table}\n            aria-label=\"simple table\"\n            style={{\n              border: \"none !important\",\n              padding: \"auto\",\n            }}\n          >\n            <TableHead\n              style={{\n                background: \"rgb(241, 239, 239)\",\n                border: \"none !important\",\n              }}\n            >\n              <TableRow\n                style={{\n                  border: \"none !important\",\n                  height: \"10px !important\",\n                  fontSize: \"8px !important\",\n                }}\n              >\n                <TableCell\n                  style={{\n                    border: \"none !important\",\n                    height: \"10px !important\",\n                    fontSize: \"8px !important\",\n                  }}\n                ></TableCell>\n                {columns.map((th) => (\n                  <TableCell style={{ border: \"none !important\" }}>\n                    {th.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody style={{ border: \"none !important\" }}>\n              {!loading ? (\n                rows.map((row, index) => {\n                  return (\n                    <TableRow\n                      key={row.id}\n                      style={{ border: \"none !important\" }}\n                    >\n                      <TableCell\n                        component=\"th\"\n                        scope=\"row\"\n                        style={{ border: \"none !important\" }}\n                      >\n                        <span> {pgn++}</span>\n                      </TableCell>\n                      {columns.map((column) => {\n                        if (column.show == false) {\n                          return null;\n                        }\n                        if (column.name == \"formatter\") {\n                          return <TableCell>{column.formatter(row)}</TableCell>;\n                        }\n\n                        return (\n                          <TableCell style={{ border: \"none !important\" }}>\n                            {row[column.name] || \"N/A\"}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })\n              ) : (\n                <div\n                  style={{\n                    position: \"fixed\",\n                    top: \"50%\",\n                    zIndex: \"4\",\n                    left: \"50%\",\n                  }}\n                >\n                  <Spin />\n                </div>\n              )}\n            </TableBody>\n            <caption>\n              <div style={{ float: \"left\", marginLeft: \"50px\" }}>\n                <Pagination\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    textDecoration: \"none !important\",\n                  }}\n                >\n                  <Button\n                    variant=\"text\"\n                    style={{ marginRight: \"2px\", fontSize: \"12px\" }}\n                    onClick={() => window.location.replace(\"/dashboard\")}\n                  >\n                    Close{\" \"}\n                  </Button>{\" \"}\n                  <Pagination.First\n                    onClick={() => setPage(1)}\n                    disabled={true}\n                  />\n                  <Pagination.Prev\n                    onClick={() => {\n                      setPage(page - 1);\n                      setPageNo(pageNo - 10);\n                    }}\n                    disabled={page > 1 ? false : true}\n                  />\n                  <Pagination.Next\n                    onClick={() => {\n                      setPage(page + 1);\n                      setPageNo(pageNo + 10);\n                    }}\n                    disabled={pages > page ? false : true}\n                  />\n                  <Pagination.Last\n                    onClick={() => setPage(pages)}\n                    disabled={pages > page ? false : true}\n                  />\n                </Pagination>\n              </div>\n            </caption>\n          </Table>\n        )}{\" \"}\n      </TableContainer>\n    </div>\n  );\n}\nconst MapStateToprops = (store) => {\n  return { ...store };\n};\nexport default connect(MapStateToprops)(BasicTable);\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Pdf/previe.js",["482"],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Report/View.js",["483","484","485","486","487","488"],"import React, { PureComponent } from \"react\";\nimport Pdf from \"../Printform/Printform\";\nimport Button from \"@material-ui/core/Button\";\nimport ReactToPrint from \"react-to-print\";\nimport { Link, useHistory, withRouter } from \"react-router-dom\";\n\nconst viewpdf = {};\nconst actions = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  gap: \"30px\",\n  justifyContent: \"center\",\n  marginBottom: \"20px\",\n};\n\nconst thStyle = {\n  fontFamily: \"Anton\",\n  fontWeight: \"normal\",\n  fontStyle: \"normal\",\n};\n\n// export const Componet = withRouter(({ history, location }) => {});\n\nclass ComponentToPrint extends React.Component {\n  render() {\n    return <Pdf />;\n  }\n}\n\nclass Example extends PureComponent {\n  render() {\n    const { history, location } = this.props;\n    return (\n      <div>\n        <ComponentToPrint ref={(el) => (this.componentRef = el)} />\n        <div style={actions}>\n          <ReactToPrint\n            trigger={() => (\n              <Button\n                variant=\"contained\"\n                width=\"sm\"\n                color=\"primary\"\n                style={{ marginTop: \"1rem\", paddingLeft: \"0px\" }}\n              >\n                Print\n              </Button>\n            )}\n            content={() => this.componentRef}\n          />\n          <Button\n            variant=\"contained\"\n            width=\"sm\"\n            color=\"primary\"\n            style={{ marginTop: \"1rem\", paddingLeft: \"0px\" }}\n            onClick={() => history.push(\"/dashboard/reports\")}\n          >\n            Back\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Example;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Report/Registration/index.js",["489","490","491","492"],"import React from \"react\";\nimport { useForm, useStep } from \"react-hooks-helper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Owner from \"./Owner\";\nimport { connect } from \"react-redux\";\nimport InspectionForm from \"./InspectionForm\";\nimport VehicleInfo from \"./VehicleInformatin\";\nimport VehicleInfoCont from \"./VehicleInfoCont\";\nimport EngineType from \"./EngineType\";\nimport ConversionKitInfo from \"./ConversionKitInfo\";\nimport CgnCylinderInfo from \"./CgnCylinderInfo\";\nimport CgnCylinderInfoCont from \"./CgnCylinderInfoCont\";\nimport Preview from \"./Preview\";\nimport \"./reg.css\";\n\nfunction Index({ reportdata }) {\n  const {\n    id,\n    createdAt = \"\",\n    validto = \"\",\n    name = \"\",\n    email = \"\",\n    phone = \"\",\n    location = \"\",\n    newInstallation = \"...v...\",\n    periodic = \".....\",\n    afterAccident = \"....\",\n    ownername = \"\",\n    vihecleRegno = \"\",\n    manYear = \"\",\n    make = \"\",\n    model = \"\",\n    chasisno = \"\",\n    engineno = \"\",\n    milliege = \"\",\n    biFuel = \"...\",\n    Dedicated = \"...V...\",\n    DualFuel = \"....\",\n    type = \"\",\n    manufacturer = \"\",\n    serialno = \"-\",\n    installername = \"\",\n    cylinderno3 = \"3\",\n    cylinderposition3 = \"\",\n    cylinderSerialNo3 = \"\",\n    cylindertype3 = \"\",\n    cmanufacturer3 = \"\",\n    cmanuContact3 = \"\",\n    servicepressure3 = \"\",\n    cmanufacturedDate3 = \"\",\n    waterVolume3 = \"\",\n    cexpiryDate3 = \"\",\n    tbscertificate3 = \"\",\n    cylinderno1 = \"1\",\n    cylinderposition1 = \"\",\n    cylindertype1 = \"\",\n    cylinderSerialNo1 = \"\",\n    cmanufacturer1 = \"\",\n    cmanuContact1 = \"\",\n    servicepressure1 = \"\",\n    cmanufacturedDate1 = \"\",\n    waterVolume1 = \"\",\n    cexpiryDate1 = \"\",\n    tbscertificate1 = \"\",\n    cylinderno2 = \"2\",\n    cylinderSerialNo2 = \"\",\n    cylinderposition2 = \"\",\n    cylindertype2 = \"\",\n    cmanufacturer2 = \"\",\n    cmanuContact2 = \"\",\n    servicepressure2 = \"\",\n    cmanufacturedDate2 = \"\",\n    waterVolume2 = \"\",\n    cexpiryDate2 = \"\",\n    tbscertificate2 = \"\",\n    inspectorID = \"\",\n    validfrom = \"\",\n  } = reportdata;\n\n  const Default = {\n    id,\n    name,\n    email,\n    phone,\n    location,\n    newInstallation,\n    periodic,\n    afterAccident,\n    ownername,\n    vihecleRegno,\n    manYear,\n    make,\n    model,\n    chasisno,\n    engineno,\n    milliege,\n    biFuel,\n    Dedicated,\n    DualFuel,\n    type,\n    manufacturer,\n    serialno,\n    installername,\n    cylinderno3,\n    cylinderposition3,\n    cylindertype3,\n    cmanufacturer3,\n    cmanuContact3,\n    servicepressure3,\n    cmanufacturedDate3,\n    waterVolume3,\n    cexpiryDate3,\n    tbscertificate3,\n    cylinderno1,\n    cylinderposition1,\n    cylindertype1,\n    cmanufacturer1,\n    cmanuContact1,\n    servicepressure1,\n    cmanufacturedDate1,\n    waterVolume1,\n    cexpiryDate1,\n    tbscertificate1,\n    cylinderno2,\n    cylinderposition2,\n    cylindertype2,\n    cmanufacturer2,\n    cmanuContact2,\n    cylinderSerialNo1,\n    cylinderSerialNo2,\n    cylinderSerialNo3,\n    servicepressure2,\n    cmanufacturedDate2,\n    waterVolume2,\n    cexpiryDate2,\n    tbscertificate2,\n    validfrom,\n  };\n\n  const steps = [\n    { id: \"Owner\" },\n    { id: \"Inspection-type\" },\n    { id: \"Vehicle-information\" },\n    { id: \"Vehicle-informationCont\" },\n    { id: \"Type-of-ngv\" },\n    { id: \"Conversion-kit-information\" },\n    { id: \"Cng-cylinders-information\" },\n    { id: \"Cng-cylinders-informationCont\" },\n    { id: \"preview\" },\n  ];\n  const [formData, setForm] = useForm(Default);\n  const { step, navigation } = useStep({ steps, initialStep: 0 });\n  const props = { formData, setForm, navigation };\n\n  switch (step.id) {\n    case \"Owner\":\n      return (\n        <Grid\n          container\n          justify=\"center\"\n          direction=\"column\"\n          alignContent=\"center\"\n          style={{ height: \"100hv\", border: \"3px\", boxSizing: \"border-box\" }}\n        >\n          <Owner {...props} />{\" \"}\n        </Grid>\n      );\n\n    case \"Inspection-type\":\n      return (\n        <Grid\n          container\n          justify=\"center\"\n          direction=\"column\"\n          alignContent=\"center\"\n          style={{\n            height: \"100hv\",\n            border: \"3px\",\n            boxSizing: \"border-box\",\n            paddingTop: \"40px\",\n          }}\n        >\n          <InspectionForm {...props} />{\" \"}\n        </Grid>\n      );\n    case \"Vehicle-information\":\n      return (\n        <Grid\n          container\n          justify=\"center\"\n          direction=\"column\"\n          alignContent=\"center\"\n          style={{\n            height: \"100hv\",\n            border: \"9px\",\n            boxSizing: \"border-box\",\n            paddingTop: \"40px\",\n          }}\n        >\n          <VehicleInfo {...props} />{\" \"}\n        </Grid>\n      );\n    case \"Vehicle-informationCont\":\n      return (\n        <Grid\n          container\n          justify=\"center\"\n          direction=\"column\"\n          alignContent=\"center\"\n          style={{\n            height: \"100hv\",\n            border: \"3px\",\n            boxSizing: \"border-box\",\n            paddingTop: \"40px\",\n          }}\n        >\n          <VehicleInfoCont {...props} />{\" \"}\n        </Grid>\n      );\n    case \"Type-of-ngv\":\n      return (\n        <Grid\n          container\n          justify=\"center\"\n          direction=\"column\"\n          alignContent=\"center\"\n          style={{\n            height: \"100hv\",\n            border: \"3px\",\n            boxSizing: \"border-box\",\n            paddingTop: \"40px\",\n          }}\n        >\n          <EngineType {...props} />{\" \"}\n        </Grid>\n      );\n    case \"Conversion-kit-information\":\n      return (\n        <Grid\n          container\n          justify=\"center\"\n          direction=\"column\"\n          alignContent=\"center\"\n          style={{\n            height: \"100hv\",\n            border: \"3px\",\n            boxSizing: \"border-box\",\n            paddingTop: \"40px\",\n          }}\n        >\n          <ConversionKitInfo {...props} />{\" \"}\n        </Grid>\n      );\n    case \"Cng-cylinders-information\":\n      return (\n        <Grid\n          container\n          justify=\"center\"\n          direction=\"column\"\n          alignContent=\"center\"\n          style={{\n            height: \"100hv\",\n            border: \"3px\",\n            boxSizing: \"border-box\",\n          }}\n        >\n          <CgnCylinderInfo {...props} />{\" \"}\n        </Grid>\n      );\n    case \"Cng-cylinders-informationCont\":\n      return (\n        <Grid\n          container\n          justify=\"center\"\n          direction=\"column\"\n          alignContent=\"center\"\n          style={{\n            height: \"100hv\",\n            border: \"3px\",\n            boxSizing: \"border-box\",\n          }}\n        >\n          <CgnCylinderInfoCont {...props} />{\" \"}\n        </Grid>\n      );\n    case \"preview\":\n      return (\n        <Box\n          p={5}\n          style={{\n            border: \"3px\",\n            boxSizing: \"border-box\",\n            maxHeight: \"550px\",\n            overflowY: \"auto\",\n          }}\n        >\n          <Preview {...props} />{\" \"}\n        </Box>\n      );\n  }\n\n  return <div> </div>;\n}\nconst MapStateToprops = (store) => {\n  return { ...store };\n};\nexport default connect(MapStateToprops)(Index);\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Report/Registration/Owner.js",["493","494"],"import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport { Link, useHistory } from \"react-router-dom\";\nconst style = {\n  maxWidth: 300,\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nfunction Owner({ formData, setForm, navigation }) {\n  const { name, email, phone, plateno, location } = formData;\n  let history = useHistory();\n\n  async function handle() {\n    let responsecode = \"1234\";\n    if (responsecode) {\n      navigation.next();\n    }\n  }\n\n  return (\n    <Container maxWidth=\"xs\">\n      <Card variant=\"outlined\" style={style}>\n        <h3> OWNER INFORMATION </h3>{\" \"}\n        <TextField\n          label=\"Full Name\"\n          value={name}\n          onChange={setForm}\n          name=\"name\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Location\"\n          value={location}\n          onChange={setForm}\n          name=\"location\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Email\"\n          value={email}\n          onChange={setForm}\n          name=\"email\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Phone\"\n          value={phone}\n          onChange={setForm}\n          name=\"phone\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <div style={{ marginTop: \"1rem\" }}>\n          {\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"2px\" }}\n            onClick={() => history.push(\"/dashboard/reports\")}\n          >\n            Back{\" \"}\n          </Button>{\" \"}\n          <Button\n            variant=\"contained\"\n            width=\"sm\"\n            color=\"primary\"\n            onClick={handle}\n          >\n            Next{\" \"}\n          </Button>{\" \"}\n        </div>{\" \"}\n      </Card>{\" \"}\n    </Container>\n  );\n}\n\nexport default Owner;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Report/Registration/VehicleInformatin.js",["495","496","497","498","499","500","501","502"],"import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\n\nconst style = {\n  maxWidth: 300,\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nfunction VehicleInfo({ formData, setForm, navigation }) {\n  const {\n    newInstallation,\n    periodic,\n    afterAccident,\n    ownername,\n    vihecleRegno,\n    manYear,\n    make,\n    model,\n    chasisno,\n    engineno,\n    milliege,\n  } = formData;\n\n  async function handle() {\n    let responsecode = \"1234\";\n    if (responsecode) {\n      navigation.next();\n    }\n  }\n  const Default = {\n    newInstallation: \"\",\n    periodic: \"\",\n    afterAccident: \"\",\n    ownername: \"\",\n    vihecleRegno,\n    manYear: \"\",\n    make: \"\",\n    model: \"\",\n    chasisno: \"\",\n    engineno: \"\",\n    milliege: \"\",\n  };\n  return (\n    <Container maxWidth=\"xs\">\n      <Card variant=\"outlined\" style={style}>\n        <h3> VEHICLE INFORMATION </h3>{\" \"}\n        <TextField\n          label=\"Name of Owner\"\n          value={ownername}\n          onChange={setForm}\n          name=\"ownername\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Vehicle Reg No\"\n          value={vihecleRegno}\n          onChange={setForm}\n          name=\"vihecleRegno\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Year of Man.\"\n          value={manYear}\n          onChange={setForm}\n          type=\"date\"\n          name=\"manYear\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Make\"\n          value={make}\n          onChange={setForm}\n          name=\"make\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <div style={{ marginTop: \"1rem\" }}>\n          {\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"2px\" }}\n            onClick={() => navigation.previous()}\n          >\n            Back{\" \"}\n          </Button>{\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"1rem\" }}\n            onClick={handle}\n          >\n            Next{\" \"}\n          </Button>{\" \"}\n        </div>{\" \"}\n      </Card>{\" \"}\n    </Container>\n  );\n}\n\nexport default VehicleInfo;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Report/Registration/InspectionForm.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Report/Registration/EngineType.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Report/Registration/VehicleInfoCont.js",["503","504","505","506","507","508","509"],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Report/Registration/CgnCylinderInfoCont.js",["510"],"import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\n\nconst style = {\n  display: \"flex\",\n  flexDirection: \"row\",\n};\nconst stylemain = {\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n\n  width: \"800px\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nfunction CgnCylinderInfoCont({ formData, setForm, navigation }) {\n  const {\n    servicepressure1,\n    cmanufacturedDate1,\n    waterVolume1,\n    tbscertificate1,\n    servicepressure2,\n    cmanufacturedDate2,\n    waterVolume2,\n    cexpiryDate1,\n    cexpiryDate2,\n    cexpiryDate3,\n    tbscertificate2,\n    servicepressure3,\n    cmanufacturedDate3,\n    waterVolume3,\n    tbscertificate3,\n  } = formData;\n\n  async function handle() {\n    let responsecode = \"1234\";\n    if (responsecode) {\n      navigation.next();\n    }\n  }\n\n  return (\n    <Container>\n      <Card style={stylemain}>\n        <h3> CNG CYLINDERS INFORMATION Cont... </h3>{\" \"}\n        <Card fullWidth style={style}>\n          <Card>\n            <TextField\n              label=\"Service Pressure(MPa)\"\n              value={servicepressure1}\n              onChange={setForm}\n              name=\"servicepressure1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n            />\n            <TextField\n              value={cmanufacturedDate1}\n              id=\"date\"\n              onChange={setForm}\n              name=\"cmanufacturedDate1\"\n              label=\"Manufactured Date\"\n              margin=\"normal\"\n              type=\"date\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              defaultValue=\"0000-00-00\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />{\" \"}\n            <TextField\n              label=\"Water volume(litres)\"\n              value={waterVolume1}\n              onChange={setForm}\n              name=\"waterVolume1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n            />\n            <TextField\n              value={cexpiryDate1}\n              id=\"date\"\n              onChange={setForm}\n              type=\"date\"\n              name=\"cexpiryDate1\"\n              label=\"Expiry Date\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              defaultValue=\"0000-00-00\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <TextField\n              label=\"TBS certificare\"\n              value={tbscertificate1}\n              onChange={setForm}\n              name=\"tbscertificate1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n            />\n          </Card>{\" \"}\n          <Card>\n            <TextField\n              label=\"Service Pressure(MPa)\"\n              value={servicepressure2}\n              onChange={setForm}\n              name=\"servicepressure2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n            />\n            <TextField\n              value={cmanufacturedDate2}\n              id=\"date\"\n              onChange={setForm}\n              type=\"date\"\n              name=\"cmanufacturedDate2\"\n              label=\"Manufactured Date\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              defaultValue=\"0000-00-00\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />{\" \"}\n            <TextField\n              label=\"Water volume(litres)\"\n              value={waterVolume2}\n              onChange={setForm}\n              name=\"waterVolume2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n            />\n            <TextField\n              value={cexpiryDate2}\n              id=\"date\"\n              onChange={setForm}\n              type=\"date\"\n              name=\"cexpiryDate2\"\n              label=\"Expiry Date\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              defaultValue=\"0000-00-00\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <TextField\n              label=\"TBS certificare\"\n              value={tbscertificate2}\n              onChange={setForm}\n              name=\"tbscertificate2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n            />\n          </Card>{\" \"}\n          <Card>\n            <TextField\n              label=\"Service Pressure(MPa)\"\n              value={servicepressure3}\n              onChange={setForm}\n              name=\"servicepressure3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              fullWidth\n            />\n            <TextField\n              value={cmanufacturedDate3}\n              id=\"date\"\n              onChange={setForm}\n              name=\"cmanufacturedDate3\"\n              type=\"date\"\n              label=\"Manufactured Date\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              defaultValue=\"0000-00-00\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />{\" \"}\n            <TextField\n              label=\"Water volume(litres)\"\n              value={waterVolume3}\n              onChange={setForm}\n              name=\"waterVolume3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              fullWidth\n            />\n            <TextField\n              value={cexpiryDate3}\n              id=\"date\"\n              onChange={setForm}\n              name=\"cexpiryDate3\"\n              label=\"Expiry Date\"\n              type=\"date\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              defaultValue=\"0000-00-00\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <TextField\n              label=\"TBS certificare\"\n              value={tbscertificate3}\n              onChange={setForm}\n              name=\"tbscertificate3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              fullWidth\n            />\n          </Card>{\" \"}\n        </Card>{\" \"}\n        <div style={{ marginTop: \"1rem\" }}>\n          {\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"2px\" }}\n            onClick={() => navigation.previous()}\n          >\n            Back{\" \"}\n          </Button>{\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"1rem\" }}\n            onClick={() => navigation.next()}\n          >\n            Next{\" \"}\n          </Button>{\" \"}\n        </div>{\" \"}\n      </Card>{\" \"}\n    </Container>\n  );\n}\n\nexport default CgnCylinderInfoCont;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Report/Registration/ConversionKitInfo.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Report/Registration/CgnCylinderInfo.js",["511"],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Report/Registration/Preview.js",["512","513","514","515"],"import React, { useRef, useState, useEffect } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport RenderAccordion from \"./RenderAccordion\";\nimport { postVehicleInfo, EditReport } from \"../../../../client/client\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Spinner from \"../../../Spinner/Spiner\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nconst style = {\n  maxWidth: 300,\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nconst spinerStyle = {\n  display: \"flex\",\n  flexDirection: \"rows\",\n  gap: \"12px\",\n};\n\nfunction Preview(data) {\n  let history = useHistory();\n  const { formData, navigation, nameid, reportdata } = data;\n  const {\n    name,\n    email,\n    phone,\n    location,\n    validfrom,\n    newInstallation,\n    periodic,\n    afterAccident,\n    ownername,\n    vihecleRegno,\n    manYear,\n    make,\n    model,\n    chasisno,\n    engineno,\n    milliege,\n    biFuel,\n    Dedicated,\n    DualFuel,\n    type,\n    manufacturer,\n    serialno,\n    installername,\n    cylinderno1,\n    cylinderposition1,\n    cylindertype1,\n    cmanufacturer1,\n    cmanuContact1,\n    servicepressure1,\n    cmanufacturedDate1,\n    waterVolume1,\n    cexpiryDate1,\n    tbscertificate1,\n    cylinderno2,\n    cylinderposition2,\n    cylindertype2,\n    cmanufacturer2,\n    cmanuContact2,\n    servicepressure2,\n    cmanufacturedDate2,\n    cylinderSerialNo1,\n    cylinderSerialNo2,\n    cylinderSerialNo3,\n    waterVolume2,\n    cexpiryDate2,\n    tbscertificate2,\n    cylinderno3,\n    cylinderposition3,\n    cylindertype3,\n    cmanufacturer3,\n    cmanuContact3,\n    servicepressure3,\n    cmanufacturedDate3,\n    waterVolume3,\n    cexpiryDate3,\n    tbscertificate3,\n  } = formData;\n\n  const { addToast } = useToasts();\n  const [loading, setLoading] = useState(false);\n  const { id } = reportdata;\n  async function handle() {\n    try {\n      setLoading(true);\n      const response = await EditReport({ ...formData, id });\n\n      if (response) {\n        setLoading(false);\n        addToast(\"... was updated successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n        history.location.push(\"/dashboard/reports\");\n        return;\n      }\n      setLoading(false);\n      addToast(\"Wrong Credentials!\", { appearance: \"error\" });\n    } catch (error) {\n      setLoading(false);\n      addToast(\"Failed\", { appearance: \"error\" });\n    }\n  }\n  const { go } = navigation;\n  return (\n    <Container maxWidth=\"sm\" style={{ height: \"90%\" }}>\n      <h3> Review </h3>{\" \"}\n      <RenderAccordion\n        summary=\"OWNER DETAILS\"\n        details={[\n          { nameid: \"Owner\" },\n          { \"Full Name\": name },\n          { Email: email },\n          { Phone: phone },\n          { Location: location },\n        ]}\n        go={go}\n        nameid={nameid}\n      />{\" \"}\n      <RenderAccordion\n        summary=\"INSPECTION TYPE\"\n        details={[\n          { nameid: \"Inspection-type\" },\n          { \"New installation\": newInstallation },\n          { Periodic: periodic },\n          { \"After Accident\": afterAccident },\n          { \"Valid From\": validfrom },\n        ]}\n        go={go}\n        nameid={nameid}\n      />{\" \"}\n      <RenderAccordion\n        summary=\"VEHICLE INFORMATION\"\n        details={[\n          { nameid: \"Vehicle-information\" },\n          { \"Name of Owner\": ownername },\n          { \"Vehicle Reg No\": vihecleRegno },\n          { \"Year of Man\": manYear },\n          { Make: make },\n          { Model: model },\n          { \"Chasis No or VIN\": chasisno },\n          { \"Engine No / Type\": engineno },\n          { \"Milleage at Inspection(km)\": milliege },\n        ]}\n        go={go}\n      />{\" \"}\n      <RenderAccordion\n        summary=\"TYPE OF NGV\"\n        details={[\n          { nameid: \"Type-of-ngv\" },\n          { \"Bi-Fuel\": biFuel },\n          { Dedicated: Dedicated },\n          { \"Dual Fuel\": DualFuel },\n        ]}\n        go={go}\n      />{\" \"}\n      <RenderAccordion\n        summary=\"CONVERSION KIT INFORMATION\"\n        details={[\n          { nameid: \"Conversion-kit-information\" },\n          { Type: type },\n          { Manufacturer: manufacturer },\n          { \"Serial No\": serialno },\n          { \"Name of Installer\": installername },\n        ]}\n        go={go}\n      />{\" \"}\n      <RenderAccordion\n        summary=\"CNG CYLINDER INFORMATION 1\"\n        details={[\n          { nameid: \"Cng-cylinders-information\" },\n          { \"Cylinder No\": cylinderno1 },\n          { \"Cylinder Position\": cylinderposition1 },\n          { \"Cylinder Type\": cylindertype1 },\n          { \"Cylinder Serial No\": cylinderSerialNo1 },\n          { \"Manufacture Name\": cmanufacturer1 },\n          { \"Manufacturer Address\": cmanuContact1 },\n          { \"Service Presssure(MPa)\": servicepressure1 },\n          { \"Manufactured Date\": cmanufacturedDate1 },\n          { \"Water volume(Ltr)\": waterVolume1 },\n          { \"Expiry Date\": cexpiryDate1 },\n          { \"TBS Certificate\": tbscertificate1 },\n        ]}\n        go={go}\n      />{\" \"}\n      <RenderAccordion\n        summary=\"CNG CYLINDER INFORMATION 2\"\n        details={[\n          { nameid: \"Cng-cylinders-information\" },\n          { \"Cylinder No\": cylinderno2 },\n          { \"Cylinder Position\": cylinderposition2 },\n          { \"Cylinder Type\": cylindertype2 },\n          { \"Cylinder Serial No\": cylinderSerialNo2 },\n          { \"Manufacture Name\": cmanufacturer2 },\n          { \"Manufacturer Address\": cmanuContact2 },\n          { \"Service Presssure(MPa)\": servicepressure2 },\n          { \"Manufactured Date\": cmanufacturedDate2 },\n          { \"Water volume(Ltr)\": waterVolume2 },\n          { \"Expiry Date\": cexpiryDate2 },\n          { \"TBS Certificate\": tbscertificate2 },\n        ]}\n        go={go}\n      />{\" \"}\n      <RenderAccordion\n        summary=\"CNG CYLINDER INFORMATION 3\"\n        details={[\n          { nameid: \"Cng-cylinders-information\" },\n          { \"Cylinder No\": cylinderno3 },\n          { \"Cylinder Position\": cylinderposition3 },\n          { \"Cylinder Type\": cylindertype3 },\n          { \"Cylinder Serial No\": cylinderSerialNo3 },\n          { \"Manufacture Name\": cmanufacturer3 },\n          { \"Manufacturer Address\": cmanuContact3 },\n          { \"Service Presssure(MPa)\": servicepressure3 },\n          { \"Manufactured Date\": cmanufacturedDate3 },\n          { \"Water volume(Ltr)\": waterVolume3 },\n          { \"Expiry Date\": cexpiryDate3 },\n          { \"TBS Certificate\": tbscertificate3 },\n        ]}\n        go={go}\n      />{\" \"}\n      <div style={{ marginTop: \"1rem\" }}>\n        {\" \"}\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          style={{ marginRight: \"2px\" }}\n          onClick={() => history.push(\"/dashboard/reports\")}\n        >\n          Back{\" \"}\n        </Button>{\" \"}\n        <Button variant=\"contained\" width=\"md\" color=\"primary\" onClick={handle}>\n          {loading ? (\n            <div style={spinerStyle}>\n              <Spinner loading={loading} /> Loading...{\" \"}\n            </div>\n          ) : (\n            \"Update\"\n          )}{\" \"}\n        </Button>{\" \"}\n      </div>{\" \"}\n    </Container>\n  );\n}\nconst MapStateToprops = (store) => {\n  return { ...store };\n};\nexport default connect(MapStateToprops)(Preview);\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Report/Registration/RenderAccordion.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Spinner/Loader.js",[],{"ruleId":"516","replacedBy":"517"},{"ruleId":"518","replacedBy":"519"},{"ruleId":"520","severity":1,"message":"521","line":11,"column":8,"nodeType":"522","messageId":"523","endLine":11,"endColumn":12},{"ruleId":"520","severity":1,"message":"524","line":16,"column":10,"nodeType":"522","messageId":"523","endLine":16,"endColumn":18},{"ruleId":"520","severity":1,"message":"525","line":16,"column":20,"nodeType":"522","messageId":"523","endLine":16,"endColumn":30},{"ruleId":"520","severity":1,"message":"526","line":3,"column":8,"nodeType":"522","messageId":"523","endLine":3,"endColumn":12},{"ruleId":"520","severity":1,"message":"527","line":11,"column":7,"nodeType":"522","messageId":"523","endLine":11,"endColumn":12},{"ruleId":"520","severity":1,"message":"528","line":12,"column":7,"nodeType":"522","messageId":"523","endLine":12,"endColumn":13},{"ruleId":"529","severity":1,"message":"530","line":6,"column":3,"nodeType":"531","messageId":"532","endLine":12,"endColumn":4},{"ruleId":"516","replacedBy":"533"},{"ruleId":"518","replacedBy":"534"},{"ruleId":"516","replacedBy":"535"},{"ruleId":"518","replacedBy":"536"},{"ruleId":"520","severity":1,"message":"537","line":1,"column":10,"nodeType":"522","messageId":"523","endLine":1,"endColumn":19},{"ruleId":"520","severity":1,"message":"538","line":2,"column":10,"nodeType":"522","messageId":"523","endLine":2,"endColumn":15},{"ruleId":"520","severity":1,"message":"539","line":4,"column":10,"nodeType":"522","messageId":"523","endLine":4,"endColumn":20},{"ruleId":"520","severity":1,"message":"540","line":5,"column":10,"nodeType":"522","messageId":"523","endLine":5,"endColumn":15},{"ruleId":"520","severity":1,"message":"541","line":85,"column":15,"nodeType":"522","messageId":"523","endLine":85,"endColumn":23},{"ruleId":"542","severity":1,"message":"543","line":104,"column":9,"nodeType":"544","messageId":"545","endLine":104,"endColumn":46},{"ruleId":"520","severity":1,"message":"546","line":117,"column":17,"nodeType":"522","messageId":"523","endLine":117,"endColumn":28},{"ruleId":"547","severity":1,"message":"548","line":118,"column":28,"nodeType":"549","messageId":"550","endLine":118,"endColumn":30},{"ruleId":"520","severity":1,"message":"551","line":478,"column":23,"nodeType":"522","messageId":"523","endLine":478,"endColumn":29},{"ruleId":"520","severity":1,"message":"552","line":14,"column":25,"nodeType":"522","messageId":"523","endLine":14,"endColumn":32},{"ruleId":"520","severity":1,"message":"553","line":14,"column":34,"nodeType":"522","messageId":"523","endLine":14,"endColumn":41},{"ruleId":"520","severity":1,"message":"554","line":2,"column":5,"nodeType":"522","messageId":"523","endLine":2,"endColumn":18},{"ruleId":"520","severity":1,"message":"555","line":4,"column":5,"nodeType":"522","messageId":"523","endLine":4,"endColumn":20},{"ruleId":"520","severity":1,"message":"556","line":23,"column":5,"nodeType":"522","messageId":"523","endLine":23,"endColumn":15},{"ruleId":"520","severity":1,"message":"557","line":23,"column":17,"nodeType":"522","messageId":"523","endLine":23,"endColumn":29},{"ruleId":"558","severity":1,"message":"559","line":1,"column":1,"nodeType":"544","messageId":"560","endLine":1,"endColumn":14,"fix":"561"},{"ruleId":"558","severity":1,"message":"559","line":1,"column":1,"nodeType":"544","messageId":"560","endLine":1,"endColumn":14,"fix":"562"},{"ruleId":"520","severity":1,"message":"538","line":4,"column":10,"nodeType":"522","messageId":"523","endLine":4,"endColumn":15},{"ruleId":"520","severity":1,"message":"563","line":9,"column":44,"nodeType":"522","messageId":"523","endLine":9,"endColumn":54},{"ruleId":"564","severity":1,"message":"565","line":62,"column":8,"nodeType":"566","endLine":62,"endColumn":64,"suggestions":"567"},{"ruleId":"564","severity":1,"message":"565","line":114,"column":8,"nodeType":"566","endLine":114,"endColumn":51,"suggestions":"568"},{"ruleId":"564","severity":1,"message":"569","line":159,"column":8,"nodeType":"566","endLine":159,"endColumn":23,"suggestions":"570"},{"ruleId":"520","severity":1,"message":"571","line":5,"column":8,"nodeType":"522","messageId":"523","endLine":5,"endColumn":14},{"ruleId":"520","severity":1,"message":"572","line":13,"column":8,"nodeType":"522","messageId":"523","endLine":13,"endColumn":15},{"ruleId":"520","severity":1,"message":"573","line":14,"column":8,"nodeType":"522","messageId":"523","endLine":14,"endColumn":17},{"ruleId":"520","severity":1,"message":"574","line":21,"column":3,"nodeType":"522","messageId":"523","endLine":21,"endColumn":11},{"ruleId":"520","severity":1,"message":"575","line":23,"column":3,"nodeType":"522","messageId":"523","endLine":23,"endColumn":8},{"ruleId":"520","severity":1,"message":"552","line":32,"column":25,"nodeType":"522","messageId":"523","endLine":32,"endColumn":32},{"ruleId":"520","severity":1,"message":"553","line":32,"column":34,"nodeType":"522","messageId":"523","endLine":32,"endColumn":41},{"ruleId":"564","severity":1,"message":"576","line":58,"column":6,"nodeType":"566","endLine":58,"endColumn":12,"suggestions":"577"},{"ruleId":"547","severity":1,"message":"548","line":18,"column":15,"nodeType":"549","messageId":"550","endLine":18,"endColumn":17},{"ruleId":"520","severity":1,"message":"578","line":1,"column":17,"nodeType":"522","messageId":"523","endLine":1,"endColumn":25},{"ruleId":"579","severity":2,"message":"580","line":9,"column":21,"nodeType":"522","messageId":"581","endLine":9,"endColumn":28},{"ruleId":"579","severity":2,"message":"582","line":10,"column":47,"nodeType":"522","messageId":"581","endLine":10,"endColumn":58},{"ruleId":"583","severity":1,"message":"584","line":19,"column":3,"nodeType":"585","messageId":"586","endLine":24,"endColumn":4},{"ruleId":"520","severity":1,"message":"587","line":5,"column":10,"nodeType":"522","messageId":"523","endLine":5,"endColumn":17},{"ruleId":"520","severity":1,"message":"588","line":21,"column":18,"nodeType":"522","messageId":"523","endLine":21,"endColumn":22},{"ruleId":"520","severity":1,"message":"589","line":21,"column":24,"nodeType":"522","messageId":"523","endLine":21,"endColumn":31},{"ruleId":"520","severity":1,"message":"590","line":1,"column":35,"nodeType":"522","messageId":"523","endLine":1,"endColumn":44},{"ruleId":"520","severity":1,"message":"591","line":2,"column":16,"nodeType":"522","messageId":"523","endLine":2,"endColumn":26},{"ruleId":"520","severity":1,"message":"592","line":3,"column":8,"nodeType":"522","messageId":"523","endLine":3,"endColumn":17},{"ruleId":"583","severity":1,"message":"584","line":19,"column":3,"nodeType":"585","messageId":"586","endLine":24,"endColumn":4},{"ruleId":"520","severity":1,"message":"593","line":1,"column":17,"nodeType":"522","messageId":"523","endLine":1,"endColumn":23},{"ruleId":"520","severity":1,"message":"590","line":1,"column":35,"nodeType":"522","messageId":"523","endLine":1,"endColumn":44},{"ruleId":"520","severity":1,"message":"552","line":23,"column":10,"nodeType":"522","messageId":"523","endLine":23,"endColumn":17},{"ruleId":"520","severity":1,"message":"588","line":24,"column":18,"nodeType":"522","messageId":"523","endLine":24,"endColumn":22},{"ruleId":"520","severity":1,"message":"589","line":24,"column":24,"nodeType":"522","messageId":"523","endLine":24,"endColumn":31},{"ruleId":"520","severity":1,"message":"593","line":1,"column":17,"nodeType":"522","messageId":"523","endLine":1,"endColumn":23},{"ruleId":"520","severity":1,"message":"590","line":1,"column":35,"nodeType":"522","messageId":"523","endLine":1,"endColumn":44},{"ruleId":"520","severity":1,"message":"552","line":23,"column":10,"nodeType":"522","messageId":"523","endLine":23,"endColumn":17},{"ruleId":"520","severity":1,"message":"594","line":4,"column":10,"nodeType":"522","messageId":"523","endLine":4,"endColumn":21},{"ruleId":"520","severity":1,"message":"595","line":5,"column":13,"nodeType":"522","messageId":"523","endLine":5,"endColumn":20},{"ruleId":"520","severity":1,"message":"596","line":6,"column":13,"nodeType":"522","messageId":"523","endLine":6,"endColumn":20},{"ruleId":"520","severity":1,"message":"597","line":7,"column":13,"nodeType":"522","messageId":"523","endLine":7,"endColumn":20},{"ruleId":"520","severity":1,"message":"598","line":13,"column":9,"nodeType":"522","messageId":"523","endLine":13,"endColumn":20},{"ruleId":"520","severity":1,"message":"595","line":2,"column":13,"nodeType":"522","messageId":"523","endLine":2,"endColumn":20},{"ruleId":"520","severity":1,"message":"599","line":14,"column":15,"nodeType":"522","messageId":"523","endLine":14,"endColumn":23},{"ruleId":"520","severity":1,"message":"600","line":19,"column":9,"nodeType":"522","messageId":"523","endLine":19,"endColumn":18},{"ruleId":"520","severity":1,"message":"601","line":20,"column":13,"nodeType":"522","messageId":"523","endLine":20,"endColumn":20},{"ruleId":"520","severity":1,"message":"602","line":76,"column":13,"nodeType":"522","messageId":"523","endLine":76,"endColumn":24},{"ruleId":"583","severity":1,"message":"584","line":154,"column":5,"nodeType":"585","messageId":"586","endLine":308,"endColumn":6},{"ruleId":"520","severity":1,"message":"603","line":21,"column":5,"nodeType":"522","messageId":"523","endLine":21,"endColumn":20},{"ruleId":"520","severity":1,"message":"604","line":22,"column":5,"nodeType":"522","messageId":"523","endLine":22,"endColumn":13},{"ruleId":"520","severity":1,"message":"605","line":23,"column":5,"nodeType":"522","messageId":"523","endLine":23,"endColumn":18},{"ruleId":"520","severity":1,"message":"606","line":28,"column":5,"nodeType":"522","messageId":"523","endLine":28,"endColumn":10},{"ruleId":"520","severity":1,"message":"607","line":29,"column":5,"nodeType":"522","messageId":"523","endLine":29,"endColumn":13},{"ruleId":"520","severity":1,"message":"608","line":30,"column":5,"nodeType":"522","messageId":"523","endLine":30,"endColumn":13},{"ruleId":"520","severity":1,"message":"609","line":31,"column":5,"nodeType":"522","messageId":"523","endLine":31,"endColumn":13},{"ruleId":"520","severity":1,"message":"610","line":40,"column":9,"nodeType":"522","messageId":"523","endLine":40,"endColumn":16},{"ruleId":"520","severity":1,"message":"603","line":21,"column":5,"nodeType":"522","messageId":"523","endLine":21,"endColumn":20},{"ruleId":"520","severity":1,"message":"604","line":22,"column":5,"nodeType":"522","messageId":"523","endLine":22,"endColumn":13},{"ruleId":"520","severity":1,"message":"605","line":23,"column":5,"nodeType":"522","messageId":"523","endLine":23,"endColumn":18},{"ruleId":"520","severity":1,"message":"611","line":24,"column":5,"nodeType":"522","messageId":"523","endLine":24,"endColumn":14},{"ruleId":"520","severity":1,"message":"612","line":26,"column":5,"nodeType":"522","messageId":"523","endLine":26,"endColumn":12},{"ruleId":"520","severity":1,"message":"613","line":27,"column":5,"nodeType":"522","messageId":"523","endLine":27,"endColumn":9},{"ruleId":"520","severity":1,"message":"610","line":40,"column":9,"nodeType":"522","messageId":"523","endLine":40,"endColumn":16},{"ruleId":"520","severity":1,"message":"614","line":43,"column":18,"nodeType":"522","messageId":"523","endLine":43,"endColumn":24},{"ruleId":"520","severity":1,"message":"614","line":46,"column":18,"nodeType":"522","messageId":"523","endLine":46,"endColumn":24},{"ruleId":"520","severity":1,"message":"593","line":1,"column":17,"nodeType":"522","messageId":"523","endLine":1,"endColumn":23},{"ruleId":"520","severity":1,"message":"590","line":1,"column":35,"nodeType":"522","messageId":"523","endLine":1,"endColumn":44},{"ruleId":"520","severity":1,"message":"615","line":10,"column":7,"nodeType":"522","messageId":"523","endLine":10,"endColumn":12},{"ruleId":"520","severity":1,"message":"616","line":29,"column":7,"nodeType":"522","messageId":"523","endLine":29,"endColumn":14},{"ruleId":"520","severity":1,"message":"617","line":5,"column":7,"nodeType":"522","messageId":"523","endLine":5,"endColumn":14},{"ruleId":"520","severity":1,"message":"618","line":20,"column":31,"nodeType":"522","messageId":"523","endLine":20,"endColumn":38},{"ruleId":"520","severity":1,"message":"619","line":3,"column":10,"nodeType":"522","messageId":"523","endLine":3,"endColumn":17},{"ruleId":"520","severity":1,"message":"620","line":5,"column":8,"nodeType":"522","messageId":"523","endLine":5,"endColumn":22},{"ruleId":"520","severity":1,"message":"600","line":39,"column":5,"nodeType":"522","messageId":"523","endLine":39,"endColumn":14},{"ruleId":"520","severity":1,"message":"621","line":42,"column":5,"nodeType":"522","messageId":"523","endLine":42,"endColumn":9},{"ruleId":"520","severity":1,"message":"622","line":43,"column":5,"nodeType":"522","messageId":"523","endLine":43,"endColumn":10},{"ruleId":"520","severity":1,"message":"623","line":44,"column":5,"nodeType":"522","messageId":"523","endLine":44,"endColumn":10},{"ruleId":"520","severity":1,"message":"624","line":45,"column":5,"nodeType":"522","messageId":"523","endLine":45,"endColumn":13},{"ruleId":"520","severity":1,"message":"602","line":97,"column":5,"nodeType":"522","messageId":"523","endLine":97,"endColumn":16},{"ruleId":"547","severity":1,"message":"548","line":103,"column":17,"nodeType":"549","messageId":"550","endLine":103,"endColumn":19},{"ruleId":"547","severity":1,"message":"548","line":106,"column":17,"nodeType":"549","messageId":"550","endLine":106,"endColumn":19},{"ruleId":"547","severity":1,"message":"548","line":109,"column":17,"nodeType":"549","messageId":"550","endLine":109,"endColumn":19},{"ruleId":"547","severity":1,"message":"548","line":144,"column":39,"nodeType":"549","messageId":"550","endLine":144,"endColumn":41},{"ruleId":"547","severity":1,"message":"548","line":151,"column":37,"nodeType":"549","messageId":"550","endLine":151,"endColumn":39},{"ruleId":"625","severity":1,"message":"626","line":415,"column":23,"nodeType":"627","messageId":"550","endLine":415,"endColumn":34},{"ruleId":"628","severity":1,"message":"629","line":698,"column":13,"nodeType":"630","endLine":698,"endColumn":81},{"ruleId":"520","severity":1,"message":"631","line":3,"column":10,"nodeType":"522","messageId":"523","endLine":3,"endColumn":16},{"ruleId":"520","severity":1,"message":"590","line":1,"column":35,"nodeType":"522","messageId":"523","endLine":1,"endColumn":44},{"ruleId":"520","severity":1,"message":"632","line":3,"column":10,"nodeType":"522","messageId":"523","endLine":3,"endColumn":19},{"ruleId":"520","severity":1,"message":"633","line":9,"column":10,"nodeType":"522","messageId":"523","endLine":9,"endColumn":16},{"ruleId":"520","severity":1,"message":"634","line":22,"column":7,"nodeType":"522","messageId":"523","endLine":22,"endColumn":16},{"ruleId":"520","severity":1,"message":"635","line":34,"column":9,"nodeType":"522","messageId":"523","endLine":34,"endColumn":19},{"ruleId":"520","severity":1,"message":"636","line":38,"column":41,"nodeType":"522","messageId":"523","endLine":38,"endColumn":49},{"ruleId":"520","severity":1,"message":"637","line":74,"column":9,"nodeType":"522","messageId":"523","endLine":74,"endColumn":13},{"ruleId":"625","severity":1,"message":"638","line":179,"column":13,"nodeType":"627","messageId":"550","endLine":179,"endColumn":25},{"ruleId":"520","severity":1,"message":"639","line":1,"column":17,"nodeType":"522","messageId":"523","endLine":1,"endColumn":24},{"ruleId":"520","severity":1,"message":"640","line":5,"column":10,"nodeType":"522","messageId":"523","endLine":5,"endColumn":18},{"ruleId":"520","severity":1,"message":"590","line":1,"column":35,"nodeType":"522","messageId":"523","endLine":1,"endColumn":44},{"ruleId":"520","severity":1,"message":"640","line":11,"column":10,"nodeType":"522","messageId":"523","endLine":11,"endColumn":18},{"ruleId":"520","severity":1,"message":"615","line":21,"column":9,"nodeType":"522","messageId":"523","endLine":21,"endColumn":14},{"ruleId":"520","severity":1,"message":"641","line":31,"column":9,"nodeType":"522","messageId":"523","endLine":31,"endColumn":18},{"ruleId":"625","severity":1,"message":"638","line":103,"column":9,"nodeType":"627","messageId":"550","endLine":103,"endColumn":21},{"ruleId":"520","severity":1,"message":"639","line":3,"column":3,"nodeType":"522","messageId":"523","endLine":3,"endColumn":10},{"ruleId":"520","severity":1,"message":"590","line":4,"column":3,"nodeType":"522","messageId":"523","endLine":4,"endColumn":12},{"ruleId":"520","severity":1,"message":"593","line":6,"column":3,"nodeType":"522","messageId":"523","endLine":6,"endColumn":9},{"ruleId":"520","severity":1,"message":"642","line":10,"column":10,"nodeType":"522","messageId":"523","endLine":10,"endColumn":15},{"ruleId":"520","severity":1,"message":"643","line":10,"column":17,"nodeType":"522","messageId":"523","endLine":10,"endColumn":25},{"ruleId":"520","severity":1,"message":"644","line":10,"column":36,"nodeType":"522","messageId":"523","endLine":10,"endColumn":43},{"ruleId":"520","severity":1,"message":"633","line":21,"column":10,"nodeType":"522","messageId":"523","endLine":21,"endColumn":16},{"ruleId":"520","severity":1,"message":"552","line":40,"column":26,"nodeType":"522","messageId":"523","endLine":40,"endColumn":33},{"ruleId":"520","severity":1,"message":"553","line":40,"column":35,"nodeType":"522","messageId":"523","endLine":40,"endColumn":42},{"ruleId":"520","severity":1,"message":"645","line":42,"column":10,"nodeType":"522","messageId":"523","endLine":42,"endColumn":20},{"ruleId":"564","severity":1,"message":"646","line":75,"column":5,"nodeType":"566","endLine":75,"endColumn":7,"suggestions":"647"},{"ruleId":"547","severity":1,"message":"548","line":150,"column":35,"nodeType":"549","messageId":"550","endLine":150,"endColumn":37},{"ruleId":"547","severity":1,"message":"548","line":153,"column":35,"nodeType":"549","messageId":"550","endLine":153,"endColumn":37},{"ruleId":"520","severity":1,"message":"574","line":3,"column":3,"nodeType":"522","messageId":"523","endLine":3,"endColumn":11},{"ruleId":"520","severity":1,"message":"648","line":10,"column":8,"nodeType":"522","messageId":"523","endLine":10,"endColumn":17},{"ruleId":"520","severity":1,"message":"649","line":11,"column":8,"nodeType":"522","messageId":"523","endLine":11,"endColumn":11},{"ruleId":"520","severity":1,"message":"650","line":15,"column":9,"nodeType":"522","messageId":"523","endLine":15,"endColumn":14},{"ruleId":"520","severity":1,"message":"651","line":16,"column":9,"nodeType":"522","messageId":"523","endLine":16,"endColumn":17},{"ruleId":"520","severity":1,"message":"652","line":17,"column":9,"nodeType":"522","messageId":"523","endLine":17,"endColumn":17},{"ruleId":"520","severity":1,"message":"639","line":3,"column":3,"nodeType":"522","messageId":"523","endLine":3,"endColumn":10},{"ruleId":"520","severity":1,"message":"633","line":19,"column":10,"nodeType":"522","messageId":"523","endLine":19,"endColumn":16},{"ruleId":"520","severity":1,"message":"653","line":22,"column":8,"nodeType":"522","messageId":"523","endLine":22,"endColumn":15},{"ruleId":"520","severity":1,"message":"640","line":30,"column":3,"nodeType":"522","messageId":"523","endLine":30,"endColumn":11},{"ruleId":"520","severity":1,"message":"654","line":32,"column":3,"nodeType":"522","messageId":"523","endLine":32,"endColumn":21},{"ruleId":"520","severity":1,"message":"643","line":39,"column":17,"nodeType":"522","messageId":"523","endLine":39,"endColumn":25},{"ruleId":"520","severity":1,"message":"644","line":39,"column":36,"nodeType":"522","messageId":"523","endLine":39,"endColumn":43},{"ruleId":"520","severity":1,"message":"655","line":52,"column":9,"nodeType":"522","messageId":"523","endLine":52,"endColumn":16},{"ruleId":"520","severity":1,"message":"656","line":53,"column":9,"nodeType":"522","messageId":"523","endLine":53,"endColumn":15},{"ruleId":"520","severity":1,"message":"657","line":54,"column":10,"nodeType":"522","messageId":"523","endLine":54,"endColumn":14},{"ruleId":"520","severity":1,"message":"658","line":55,"column":10,"nodeType":"522","messageId":"523","endLine":55,"endColumn":16},{"ruleId":"520","severity":1,"message":"645","line":59,"column":10,"nodeType":"522","messageId":"523","endLine":59,"endColumn":20},{"ruleId":"520","severity":1,"message":"659","line":65,"column":9,"nodeType":"522","messageId":"523","endLine":65,"endColumn":25},{"ruleId":"520","severity":1,"message":"660","line":69,"column":7,"nodeType":"522","messageId":"523","endLine":69,"endColumn":11},{"ruleId":"520","severity":1,"message":"661","line":75,"column":5,"nodeType":"522","messageId":"523","endLine":75,"endColumn":10},{"ruleId":"520","severity":1,"message":"662","line":80,"column":14,"nodeType":"522","messageId":"523","endLine":80,"endColumn":28},{"ruleId":"520","severity":1,"message":"663","line":81,"column":18,"nodeType":"522","messageId":"523","endLine":81,"endColumn":36},{"ruleId":"520","severity":1,"message":"664","line":83,"column":23,"nodeType":"522","messageId":"523","endLine":83,"endColumn":46},{"ruleId":"520","severity":1,"message":"665","line":84,"column":19,"nodeType":"522","messageId":"523","endLine":84,"endColumn":38},{"ruleId":"520","severity":1,"message":"666","line":85,"column":21,"nodeType":"522","messageId":"523","endLine":85,"endColumn":42},{"ruleId":"520","severity":1,"message":"667","line":86,"column":14,"nodeType":"522","messageId":"523","endLine":86,"endColumn":28},{"ruleId":"520","severity":1,"message":"668","line":92,"column":5,"nodeType":"522","messageId":"523","endLine":92,"endColumn":16},{"ruleId":"520","severity":1,"message":"669","line":94,"column":5,"nodeType":"522","messageId":"523","endLine":94,"endColumn":21},{"ruleId":"520","severity":1,"message":"670","line":95,"column":5,"nodeType":"522","messageId":"523","endLine":95,"endColumn":17},{"ruleId":"520","severity":1,"message":"671","line":96,"column":5,"nodeType":"522","messageId":"523","endLine":96,"endColumn":19},{"ruleId":"520","severity":1,"message":"553","line":98,"column":5,"nodeType":"522","messageId":"523","endLine":98,"endColumn":12},{"ruleId":"564","severity":1,"message":"672","line":144,"column":5,"nodeType":"566","endLine":144,"endColumn":7,"suggestions":"673"},{"ruleId":"564","severity":1,"message":"674","line":174,"column":5,"nodeType":"566","endLine":174,"endColumn":7,"suggestions":"675"},{"ruleId":"520","severity":1,"message":"676","line":250,"column":9,"nodeType":"522","messageId":"523","endLine":250,"endColumn":27},{"ruleId":"564","severity":1,"message":"677","line":282,"column":6,"nodeType":"566","endLine":282,"endColumn":66,"suggestions":"678"},{"ruleId":"547","severity":1,"message":"548","line":513,"column":41,"nodeType":"549","messageId":"550","endLine":513,"endColumn":43},{"ruleId":"547","severity":1,"message":"548","line":516,"column":41,"nodeType":"549","messageId":"550","endLine":516,"endColumn":43},{"ruleId":"547","severity":1,"message":"548","line":637,"column":41,"nodeType":"549","messageId":"550","endLine":637,"endColumn":43},{"ruleId":"547","severity":1,"message":"548","line":640,"column":41,"nodeType":"549","messageId":"550","endLine":640,"endColumn":43},{"ruleId":"520","severity":1,"message":"617","line":5,"column":7,"nodeType":"522","messageId":"523","endLine":5,"endColumn":14},{"ruleId":"520","severity":1,"message":"679","line":5,"column":10,"nodeType":"522","messageId":"523","endLine":5,"endColumn":14},{"ruleId":"520","severity":1,"message":"591","line":5,"column":16,"nodeType":"522","messageId":"523","endLine":5,"endColumn":26},{"ruleId":"520","severity":1,"message":"680","line":5,"column":28,"nodeType":"522","messageId":"523","endLine":5,"endColumn":38},{"ruleId":"520","severity":1,"message":"681","line":7,"column":7,"nodeType":"522","messageId":"523","endLine":7,"endColumn":14},{"ruleId":"520","severity":1,"message":"617","line":16,"column":7,"nodeType":"522","messageId":"523","endLine":16,"endColumn":14},{"ruleId":"520","severity":1,"message":"624","line":32,"column":22,"nodeType":"522","messageId":"523","endLine":32,"endColumn":30},{"ruleId":"520","severity":1,"message":"600","line":20,"column":5,"nodeType":"522","messageId":"523","endLine":20,"endColumn":14},{"ruleId":"520","severity":1,"message":"601","line":21,"column":5,"nodeType":"522","messageId":"523","endLine":21,"endColumn":12},{"ruleId":"520","severity":1,"message":"602","line":77,"column":5,"nodeType":"522","messageId":"523","endLine":77,"endColumn":16},{"ruleId":"583","severity":1,"message":"584","line":156,"column":3,"nodeType":"585","messageId":"586","endLine":301,"endColumn":4},{"ruleId":"520","severity":1,"message":"679","line":6,"column":10,"nodeType":"522","messageId":"523","endLine":6,"endColumn":14},{"ruleId":"520","severity":1,"message":"618","line":20,"column":31,"nodeType":"522","messageId":"523","endLine":20,"endColumn":38},{"ruleId":"520","severity":1,"message":"603","line":21,"column":5,"nodeType":"522","messageId":"523","endLine":21,"endColumn":20},{"ruleId":"520","severity":1,"message":"604","line":22,"column":5,"nodeType":"522","messageId":"523","endLine":22,"endColumn":13},{"ruleId":"520","severity":1,"message":"605","line":23,"column":5,"nodeType":"522","messageId":"523","endLine":23,"endColumn":18},{"ruleId":"520","severity":1,"message":"606","line":28,"column":5,"nodeType":"522","messageId":"523","endLine":28,"endColumn":10},{"ruleId":"520","severity":1,"message":"607","line":29,"column":5,"nodeType":"522","messageId":"523","endLine":29,"endColumn":13},{"ruleId":"520","severity":1,"message":"608","line":30,"column":5,"nodeType":"522","messageId":"523","endLine":30,"endColumn":13},{"ruleId":"520","severity":1,"message":"609","line":31,"column":5,"nodeType":"522","messageId":"523","endLine":31,"endColumn":13},{"ruleId":"520","severity":1,"message":"610","line":40,"column":9,"nodeType":"522","messageId":"523","endLine":40,"endColumn":16},{"ruleId":"520","severity":1,"message":"603","line":21,"column":5,"nodeType":"522","messageId":"523","endLine":21,"endColumn":20},{"ruleId":"520","severity":1,"message":"604","line":22,"column":5,"nodeType":"522","messageId":"523","endLine":22,"endColumn":13},{"ruleId":"520","severity":1,"message":"605","line":23,"column":5,"nodeType":"522","messageId":"523","endLine":23,"endColumn":18},{"ruleId":"520","severity":1,"message":"611","line":24,"column":5,"nodeType":"522","messageId":"523","endLine":24,"endColumn":14},{"ruleId":"520","severity":1,"message":"612","line":26,"column":5,"nodeType":"522","messageId":"523","endLine":26,"endColumn":12},{"ruleId":"520","severity":1,"message":"613","line":27,"column":5,"nodeType":"522","messageId":"523","endLine":27,"endColumn":9},{"ruleId":"520","severity":1,"message":"610","line":40,"column":9,"nodeType":"522","messageId":"523","endLine":40,"endColumn":16},{"ruleId":"520","severity":1,"message":"614","line":43,"column":18,"nodeType":"522","messageId":"523","endLine":43,"endColumn":24},{"ruleId":"520","severity":1,"message":"614","line":46,"column":18,"nodeType":"522","messageId":"523","endLine":46,"endColumn":24},{"ruleId":"520","severity":1,"message":"593","line":1,"column":17,"nodeType":"522","messageId":"523","endLine":1,"endColumn":23},{"ruleId":"520","severity":1,"message":"590","line":1,"column":35,"nodeType":"522","messageId":"523","endLine":1,"endColumn":44},{"ruleId":"520","severity":1,"message":"682","line":5,"column":10,"nodeType":"522","messageId":"523","endLine":5,"endColumn":25},{"ruleId":"520","severity":1,"message":"615","line":11,"column":7,"nodeType":"522","messageId":"523","endLine":11,"endColumn":12},"no-native-reassign",["683"],"no-negated-in-lhs",["684"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'userData' is defined but never used.","'getProfile' is defined but never used.","'Card' is defined but never used.","'login' is assigned a value but never used.","'forgot' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["683"],["684"],["683"],["684"],"'stringify' is defined but never used.","'store' is defined but never used.","'SAVE_TOKEN' is defined but never used.","'merge' is defined but never used.","'repsonse' is assigned a value but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'accessToken' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'plural' is assigned a value but never used.","'loading' is assigned a value but never used.","'refresh' is assigned a value but never used.","'ACTIVATE_USER' is defined but never used.","'DEACTIVATE_USER' is defined but never used.","'removeUser' is defined but never used.","'registerUser' is defined but never used.","strict","'use strict' is unnecessary inside of modules.","module",{"range":"685","text":"686"},{"range":"687","text":"686"},"'useContext' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'addToast', 'onGet', and 'params'. Either include them or remove the dependency array. If 'onGet' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["688"],["689"],"React Hook useEffect has missing dependencies: 'addToast', 'id', and 'onGet'. Either include them or remove the dependency array. If 'onGet' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["690"],"'Footer' is defined but never used.","'Regform' is defined but never used.","'Printform' is defined but never used.","'Redirect' is defined but never used.","'Route' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'email', 'fname', 'initial', 'lname', 'phone', 'signature', 'userRole', and 'username'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["691"],"'useState' is defined but never used.","no-undef","'sidebar' is not defined.","undef","'showsidebar' is not defined.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'getCode' is defined but never used.","'code' is assigned a value but never used.","'newpass' is assigned a value but never used.","'useEffect' is defined but never used.","'useHistory' is defined but never used.","'Container' is defined but never used.","'useRef' is defined but never used.","'SidebarData' is defined but never used.","'FaIcons' is defined but never used.","'AiIcons' is defined but never used.","'IoIcons' is defined but never used.","'showsidebar' is assigned a value but never used.","'setColor' is assigned a value but never used.","'createdAt' is assigned a value but never used.","'validto' is assigned a value but never used.","'inspectorID' is assigned a value but never used.","'newInstallation' is assigned a value but never used.","'periodic' is assigned a value but never used.","'afterAccident' is assigned a value but never used.","'model' is assigned a value but never used.","'chasisno' is assigned a value but never used.","'engineno' is assigned a value but never used.","'milliege' is assigned a value but never used.","'Default' is assigned a value but never used.","'ownername' is assigned a value but never used.","'manYear' is assigned a value but never used.","'make' is assigned a value but never used.","'handle' is defined but never used.","'style' is assigned a value but never used.","'history' is assigned a value but never used.","'thStyle' is assigned a value but never used.","'plateno' is assigned a value but never used.","'borders' is defined but never used.","'BootstrapTable' is defined but never used.","'name' is assigned a value but never used.","'email' is assigned a value but never used.","'phone' is assigned a value but never used.","'location' is assigned a value but never used.","no-dupe-keys","Duplicate key 'borderRight'.","ObjectExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'render' is defined but never used.","'getUserId' is defined but never used.","'useGet' is defined but never used.","'Editstyle' is assigned a value but never used.","'putProfile' is assigned a value but never used.","'username' is assigned a value but never used.","'edit' is assigned a value but never used.","Duplicate key 'borderRadius'.","'useMemo' is defined but never used.","'ADD_USER' is defined but never used.","'signature' is assigned a value but never used.","'FaEye' is defined but never used.","'FaRegEye' is defined but never used.","'FaPrint' is defined but never used.","'loadingdel' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'dispatch' and 'handledelete'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["692"],"'PrintForm' is defined but never used.","'Pdf' is defined but never used.","'table' is assigned a value but never used.","'editdata' is assigned a value but never used.","'viewdata' is assigned a value but never used.","'AddIcon' is defined but never used.","'CLEAR_PROFILE_DATA' is defined but never used.","'formref' is assigned a value but never used.","'fsname' is assigned a value but never used.","'date' is assigned a value but never used.","'status' is assigned a value but never used.","'handleChangedate' is assigned a value but never used.","'pgno' is defined but never used.","'query' is assigned a value but never used.","'historyloading' is assigned a value but never used.","'historycurrentPage' is assigned a value but never used.","'historyhavePreviousPage' is assigned a value but never used.","'historyhaveNextPage' is assigned a value but never used.","'historysetCurrentPage' is assigned a value but never used.","'historyrefresh' is assigned a value but never used.","'currentPage' is assigned a value but never used.","'havePreviousPage' is assigned a value but never used.","'haveNextPage' is assigned a value but never used.","'setCurrentPage' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'dispatch', 'handledelete', and 'history'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["693"],"React Hook useCallback has missing dependencies: 'dispatch', 'handledeletehistory', and 'history'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["694"],"'handleChangestatus' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'params' and 'setTotal'. Either include them or remove the dependency array.",["695"],"'Link' is defined but never used.","'withRouter' is defined but never used.","'viewpdf' is assigned a value but never used.","'postVehicleInfo' is defined but never used.","no-global-assign","no-unsafe-negation",[0,13],"",[0,13],{"desc":"696","fix":"697"},{"desc":"698","fix":"699"},{"desc":"700","fix":"701"},{"desc":"702","fix":"703"},{"desc":"704","fix":"705"},{"desc":"706","fix":"707"},{"desc":"708","fix":"709"},{"desc":"710","fix":"711"},"Update the dependencies array to be: [currentPage, sort, filters, searchQuery, shouldRefresh, onGet, params, addToast]",{"range":"712","text":"713"},"Update the dependencies array to be: [sort, filters, searchQuery, shouldRefresh, onGet, params, addToast]",{"range":"714","text":"715"},"Update the dependencies array to be: [addToast, id, onGet, shouldRefresh]",{"range":"716","text":"717"},"Update the dependencies array to be: [dispatch, email, fname, initial, lname, phone, signature, user, userRole, username]",{"range":"718","text":"719"},"Update the dependencies array to be: [dispatch, handledelete]",{"range":"720","text":"721"},"Update the dependencies array to be: [dispatch, handledelete, history]",{"range":"722","text":"723"},"Update the dependencies array to be: [dispatch, handledeletehistory, history]",{"range":"724","text":"725"},"Update the dependencies array to be: [paramsDate, paramsSearch, paramsStatus, page, historytable, params, setTotal]",{"range":"726","text":"727"},[2187,2243],"[currentPage, sort, filters, searchQuery, shouldRefresh, onGet, params, addToast]",[3713,3756],"[sort, filters, searchQuery, shouldRefresh, onGet, params, addToast]",[4877,4892],"[addToast, id, onGet, shouldRefresh]",[1632,1638],"[dispatch, email, fname, initial, lname, phone, signature, user, userRole, username]",[2122,2124],"[dispatch, handledelete]",[4109,4111],"[dispatch, handledelete, history]",[4799,4801],"[dispatch, handledeletehistory, history]",[9431,9491],"[paramsDate, paramsSearch, paramsStatus, page, historytable, params, setTotal]"]