[{"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/index.js":"1","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/App.js":"2","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/index.js":"3","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Head/index.js":"4","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Auth/Login.js":"5","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Auth/Register.js":"6","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Auth/Forgot.js":"7","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Head/Home.js":"8","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Head/Dashboard.js":"9","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/ProtectRoute.js":"10","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dashboard/index.js":"11","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/client/index.js":"12","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/client/client.js":"13","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Profile/index.js":"14","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dashboard/Cards.js":"15","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/reducer.js":"16","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/actions.js":"17","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Auth/Adduser.js":"18","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dashboard/Carditem.js":"19","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dashboard/ViewUser.js":"20","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Auth/Edituser.js":"21","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dashboard/EditUsr.js":"22","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/store.js":"23","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/config/axiosConfig.js":"24","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/hooks/index.js":"25","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/index.js":"26","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Navibar/index.js":"27","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Menubar/sidebarData.js":"28","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Menubar/index.js":"29","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Forms/Stepform/ForgotPassword/ForgotPasswordForm.js":"30","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Forms/Stepform/ForgotPassword/ForgotPass.js":"31","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Forms/Stepform/ForgotPassword/ResetPass.js":"32","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Forms/Login.js":"33","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Forms/ForgotPassword/ForgotPasswordForm.js":"34","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Forms/ForgotPassword/ForgotPass.js":"35","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Forms/ForgotPassword/ResetPass.js":"36","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Navibar/Navbar.js":"37","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Navibar/Menubar/sidebarData.js":"38","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Footer/Footer.js":"39"},{"size":171,"mtime":1614415531164,"results":"40","hashOfConfig":"41"},{"size":1500,"mtime":1614548328848,"results":"42","hashOfConfig":"41"},{"size":925,"mtime":1614634119803,"results":"43","hashOfConfig":"41"},{"size":250,"mtime":1609344225763,"results":"44","hashOfConfig":"41"},{"size":1446,"mtime":1614415530988,"results":"45","hashOfConfig":"41"},{"size":843,"mtime":1609945301778,"results":"46","hashOfConfig":"41"},{"size":2869,"mtime":1614425035729,"results":"47","hashOfConfig":"41"},{"size":302,"mtime":1609343793693,"results":"48","hashOfConfig":"41"},{"size":495,"mtime":1614415531116,"results":"49","hashOfConfig":"41"},{"size":517,"mtime":1614415531132,"results":"50","hashOfConfig":"41"},{"size":995,"mtime":1610246461085,"results":"51","hashOfConfig":"41"},{"size":396,"mtime":1614415530748,"results":"52","hashOfConfig":"41"},{"size":12244,"mtime":1614425495507,"results":"53","hashOfConfig":"41"},{"size":1380,"mtime":1614415531132,"results":"54","hashOfConfig":"41"},{"size":1220,"mtime":1610247701169,"results":"55","hashOfConfig":"41"},{"size":2677,"mtime":1614422665071,"results":"56","hashOfConfig":"41"},{"size":571,"mtime":1614420694057,"results":"57","hashOfConfig":"41"},{"size":1782,"mtime":1610246498053,"results":"58","hashOfConfig":"41"},{"size":1209,"mtime":1610250486933,"results":"59","hashOfConfig":"41"},{"size":1279,"mtime":1610221289325,"results":"60","hashOfConfig":"41"},{"size":100,"mtime":1610192386634,"results":"61","hashOfConfig":"41"},{"size":3752,"mtime":1610246475889,"results":"62","hashOfConfig":"41"},{"size":366,"mtime":1614415531192,"results":"63","hashOfConfig":"41"},{"size":2598,"mtime":1614415531140,"results":"64","hashOfConfig":"41"},{"size":5335,"mtime":1614415531164,"results":"65","hashOfConfig":"41"},{"size":287,"mtime":1614385103937,"results":"66","hashOfConfig":"41"},{"size":1257,"mtime":1614385230733,"results":"67","hashOfConfig":"41"},{"size":981,"mtime":1614379558633,"results":"68","hashOfConfig":"41"},{"size":95,"mtime":1614385153969,"results":"69","hashOfConfig":"41"},{"size":719,"mtime":1614585039537,"results":"70","hashOfConfig":"41"},{"size":1369,"mtime":1614612303807,"results":"71","hashOfConfig":"41"},{"size":1800,"mtime":1614608609902,"results":"72","hashOfConfig":"41"},{"size":1655,"mtime":1614640841054,"results":"73","hashOfConfig":"41"},{"size":719,"mtime":1614613242248,"results":"74","hashOfConfig":"41"},{"size":1414,"mtime":1614640796099,"results":"75","hashOfConfig":"41"},{"size":1845,"mtime":1614640495305,"results":"76","hashOfConfig":"41"},{"size":1259,"mtime":1614632285927,"results":"77","hashOfConfig":"41"},{"size":572,"mtime":1614632136225,"results":"78","hashOfConfig":"41"},{"size":163,"mtime":1614639737187,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"86wbd6",{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"82"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"139","usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"142","usedDeprecatedRules":"82"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"148"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"154","messages":"155","errorCount":2,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"82"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/index.js",[],["177","178"],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/App.js",["179","180"],"import React from \"react\";\nimport {\n  Redirect,\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport { ProtectRoute } from \"./components/ProtectRoute\";\n\nimport Home from \"./components/Home\";\nimport Form from \"./components/Forms/Stepform/ForgotPassword/ForgotPasswordForm\";\nimport Dashboard from \"./components/Dashboard\";\n// import Dashboard from \"./components/Dash_board\"; for testing only\nimport { Provider } from \"react-redux\";\nimport { ToastProvider } from \"react-toast-notifications\";\nimport { userData, getProfile } from \"./client/index\";\nimport { store } from \"./store\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ToastProvider placement=\"top-center\">\n        <div className=\"site\">\n          <Router>\n            <Switch>\n              <Route exact path=\"/login\">\n                <Home />\n              </Route>{\" \"}\n              <Route exact path=\"/form\">\n                <Form />\n              </Route>{\" \"}\n              <ProtectRoute\n                path=\"/dashboard\"\n                component={Dashboard}\n              ></ProtectRoute>{\" \"}\n              <ProtectRoute path=\"/\" component={Dashboard}>\n                {\" \"}\n              </ProtectRoute>{\" \"}\n              <Redirect exact to=\"/\" />\n              <Route path=\"*\" component={() => <h2> 404 Not Found </h2>} />\n            </Switch>{\" \"}\n          </Router>{\" \"}\n        </div>{\" \"}\n      </ToastProvider>{\" \"}\n    </Provider>\n  );\n}\n\nexport default App;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/index.js",["181","182","183"],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Head/index.js",["184"],"import React from \"react\";\nimport Home from \"./Home\";\nimport Dashboard from \"./Dashboard\";\nconst login = false;\nfunction index() {\n  {\n    if (login) {\n      return <Dashboard />;\n    } else {\n      return <Home />;\n    }\n  }\n}\nexport default index;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Auth/Login.js",["185","186"],"import React, { useState, useRef } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { login } from \"../../client/index\";\n\nfunction Login() {\n  const [isLoged, setIsLoged] = useState(false);\n  const history = useHistory();\n  const email = useRef(\"\");\n  const password = useRef(\"\");\n  const hundleSubmit = (e) => {\n    e.preventDefault();\n    login({\n      username: email.current.value,\n      password: password.current.value,\n    });\n  };\n\n  return (\n    <>\n      {\" \"}\n      {isLoged ? (\n        <div className=\"form-wrapper-login\"> Logged in </div>\n      ) : (\n        <div className=\"form-wrapper-login\">\n          <form className=\"form\" action=\"\">\n            <input\n              type=\"email\"\n              name=\"username\"\n              ref={email}\n              placeholder=\"username/email\"\n            />\n            <input\n              type=\"password\"\n              name=\"password\"\n              ref={password}\n              placeholder=\"password\"\n            />\n            <button className=\"btn\" type=\"submit\" onClick={hundleSubmit}>\n              Login{\" \"}\n            </button>{\" \"}\n            <h4>\n              Not a member yet ? <Link to=\"/register\"> Sign up now </Link>{\" \"}\n            </h4>{\" \"}\n            <h4>\n              <Link to=\"/reset-password\"> Forgot password ? </Link>{\" \"}\n            </h4>{\" \"}\n          </form>{\" \"}\n        </div>\n      )}{\" \"}\n    </>\n  );\n}\n\nexport default Login;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Auth/Register.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Auth/Forgot.js",["187","188","189"],"import { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { SAVE_FORM_DATA } from \"../../actions\";\nimport { getCode } from \"../../client\";\nimport { postCode } from \"../../client\";\n\nfunction Forgot({ formdata, dispatch }) {\n  const [data, setData] = useState(null);\n  const [code, setCode] = useState(null);\n  const [showcode, setShowcode] = useState(null);\n\n  const formRef = useRef();\n\n  let email = useRef(\"\");\n  let usercode = useRef(\"\");\n  let newpassword = useRef(\"\");\n\n  let fdata;\n\n  const handleSubmitf = async (e) => {\n    e.preventDefault();\n    fdata = { email: email.current.value };\n    dispatch({ type: SAVE_FORM_DATA, payload: { ...fdata } });\n    let responsecode = await getCode(fdata);\n    formRef.current.reset();\n    setCode(responsecode.code);\n    setShowcode(true);\n    setData(formdata);\n  };\n\n  const handleSubmits = async (e) => {\n    e.preventDefault();\n    fdata = {\n      newpassword: newpassword.current.value,\n      usercode: usercode.current.value,\n    };\n\n    fdata.email = formdata.email;\n    let responsecode = await postCode(fdata);\n    formRef.current.reset();\n    // setCode(responsecode.code);\n    // setShowcode(true);\n    // setData(email);\n  };\n  // useEffect(() => {\n  //   (async function () {\n  //     let responsecode = await getCode(formdata);\n  //   })();\n  // }, [code]);\n\n  return (\n    <div className=\"form-wrapper-forgot\">\n      {!data ? (\n        <form className=\"form\" action=\"\" ref={formRef}>\n          <input\n            type=\"email\"\n            placeholder=\"phone / email\"\n            name=\"email\"\n            ref={email}\n          />\n          <button className=\"btn\" onClick={handleSubmitf}>\n            Submit\n          </button>\n        </form>\n      ) : code ? (\n        <form className=\"form\" action=\"\" ref={formRef}>\n          <input\n            type=\"text\"\n            placeholder=\"Enter code\"\n            name=\"code\"\n            ref={usercode}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"New password\"\n            name=\"newpassword\"\n            ref={newpassword}\n          />\n          <button className=\"btn\" onClick={handleSubmits}>\n            Submit{\" \"}\n          </button>\n          {code\n            ? showcode && <h4>Your code is: {code}</h4>\n            : showcode && <h4>email is incorrect</h4>}\n        </form>\n      ) : (\n        <form className=\"form\" action=\"\">\n          <input type=\"text\" name=\"code\" value={usercode} />\n          <input type=\"text\" name=\"newpassword\" value={newpassword} />\n\n          {code\n            ? showcode && <h4>Your code is: {code}</h4>\n            : showcode && <h4>email is incorrect</h4>}\n        </form>\n      )}\n    </div>\n  );\n}\nfunction mapStateToprops(store) {\n  return { ...store };\n}\nexport default connect(mapStateToprops)(Forgot);\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Head/Home.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Head/Dashboard.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/ProtectRoute.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dashboard/index.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/client/index.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/client/client.js",["190","191","192","193","194","195","196"],"import { stringify } from \"query-string\";\nimport { store } from \"../store\";\nimport instance from \"../config/axiosConfig\";\nimport { SAVE_TOKEN } from \"../actions\";\nimport { merge, forEach } from \"lodash\";\nimport isEmpty from \"lodash/isEmpty\";\nimport { singularize, pluralize } from \"inflection\";\nimport camelCase from \"lodash/camelCase\";\nimport jwtDecode from \"jwt-decode\";\n\nlet access_token;\nlet userId;\nlet tokenPayload;\n\nconst logged = localStorage.getItem(\"islogged\");\nconst token = localStorage.getItem(\"token\");\n\n//..................start..................\n// ............. auth functions........\n\n/**\n * @function\n * @name getTokenPayload\n * @description Return decoded token payload\n * @param {string} token jwt token base64 url encoded token\n * @returns {object} Jwt token content\n * @version 0.1.0\n * @since 0.1.0\n */\nexport const getTokenPayload = (token) => {\n    if (isEmpty(tokenPayload)) {\n        try {\n            tokenPayload = jwtDecode(token);\n        } catch (error) {\n            // eslint-disable-next-line no-console\n            console.log(error);\n        }\n    }\n\n    return tokenPayload;\n};\n\nexport const fetchAccessToken = async() => {\n    try {\n        access_token = await instance.post(\"/refresh_token\");\n        const { AccessToken } = access_token.data;\n        localStorage.setItem(\"token\", AccessToken);\n        return access_token;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const isLogged = () => {\n    if (!logged) {\n        console.log(\"not loged\", logged);\n        return false;\n    }\n    if (!token) {\n        console.log(\"no token\");\n        return false;\n    }\n    return logged;\n    // return true;  ............ uncomment for change only\n};\n\nexport const login = async(payload) => {\n    try {\n        const authRes = await instance.post(\"/auth/login\", {...payload });\n        const { accessToken } = authRes;\n        if (accessToken) {\n            localStorage.setItem(\"token\", accessToken);\n            localStorage.setItem(\"islogged\", true);\n            window.location.replace(`/dashboard`);\n        }\n    } catch (error) {\n        console.log(\"error in login\", error);\n    }\n\n    return false;\n};\n\nexport const logout = async() => {\n    localStorage.clear();\n    window.location.replace(`/`);\n    try {\n        const authRes = await instance.post(\"/auth/logout\", {\n            token: token,\n        });\n        const { accessToken } = authRes.data;\n        if (authRes.status == \"200\") {}\n    } catch (error) {\n        console.log(\"error in login\", error);\n    }\n\n    return false;\n};\n\nexport const getCode = async(data) => {\n    try {\n        const { email } = data;\n        const code = await instance.post(\"/auth/forgot-password\", { email });\n        return code;\n    } catch (error) {\n        return {};\n    }\n};\n\nexport const postCode = async(data) => {\n    try {\n        const { email, usercode: code, newpassword } = data;\n\n        const isSuccessful = await instance.post(\"/auth/reset-password\", {\n            email,\n            code,\n            newpassword,\n        });\n        if (isSuccessful) {\n            return { isSuccessful: true };\n        }\n        return { isSuccessful: false };\n    } catch (error) {\n        return { isSuccessful: false };\n    }\n};\n//..................end..................\n// ............. auth functions..........\n\n/**\n * @function prepareParams\n * @name prepareParams\n * @description convert api query params as per API filtering specifications\n * @param {object} params api call query params\n * @returns {object} http params to be sent to server\n * @since 0.1.0\n * @version 0.1.0\n * @static\n * @public\n * @example\n */\nexport const prepareParams = (params) => {\n    const normalizedParams = {};\n    const { sort, page, pageSize, ...otherParams } = params || {};\n\n    if (sort) {\n        forEach(params.sort, (value, key) => {\n            normalizedParams.sortBy = key;\n            normalizedParams.sortOrder = value;\n        });\n    }\n\n    if (page) {\n        normalizedParams.page = params.page;\n    }\n\n    if (pageSize) {\n        normalizedParams.pageSize = params.pageSize;\n    }\n\n    if (otherParams) {\n        forEach(otherParams, (value, key) => {\n            normalizedParams[key] = value;\n        });\n    }\n\n    return normalizedParams;\n};\n\n/**\n * @function get\n * @name get\n * @description issue http get request to specified url.\n * @param {string} url valid http path.\n * @param {object} [params] params that will be encoded into url query params.\n * @returns {Promise} promise resolve with data on success or error on failure.\n * @since 0.1.0\n * @version 0.1.0\n */\nexport const get = (url, params) => {\n    const options = prepareParams(params);\n    return instance.get(url, { params: options });\n};\n\n/**\n * @function post\n * @name post\n * @description issue http post request to specified url.\n * @param {string} url valid http path.\n * @param {object} data request payload to be encoded on http request body\n * @returns {Promise} promise resolve with data on success or error on failure.\n * @since 0.1.0\n * @version 0.1.0\n * @example\n * import { post } from './client';\n *\n * const postUser = post('/users', { age: 14 });\n * postUser.then(user => { ... }).catch(error => { ... });\n */\nexport const post = (url, data) => {\n    if (isEmpty(data)) {\n        return Promise.reject(new Error(\"Missing Payload\"));\n    }\n\n    return instance.post(url, data);\n};\n\n/**\n * @function put\n * @name put\n * @description issue http put request to specified url.\n * @param {string} url valid http path.\n * @param {object} data request payload to be encoded on http request body\n * @returns {Promise} promise resolve with data on success or error on failure.\n * @since 0.1.0\n * @version 0.1.0\n * @example\n */\nexport const put = (url, data) => {\n    if (isEmpty(data)) {\n        return Promise.reject(new Error(\"Missing Payload\"));\n    }\n\n    return instance.put(url, data);\n};\n\n/**\n * @function patch\n * @name patch\n * @description issue http patch request to specified url.\n * @param {string} url valid http path.\n * @param {object} data request payload to be encoded on http request body\n * @returns {Promise} promise resolve with data on success or error on failure.\n * @since 0.1.0\n * @version 0.1.0\n * @example\n */\nexport const patch = (url, data) => {\n    if (isEmpty(data)) {\n        return Promise.reject(new Error(\"Missing Payload\"));\n    }\n\n    return instance.patch(url, data);\n};\n\n/**\n * @function del\n * @name del\n * @description issue http delete request to specified url.\n * @param {string} url valid http path.\n * @returns {Promise} promise resolve with data on success or error on failure.\n * @since 0.1.0\n * @version 0.1.0\n * @example\n */\nexport const del = (url) => {\n    return instance.delete(url);\n};\n\n/**\n * @function\n * @name normalizeResource\n * @description Normalize resource by adding singular and plural\n * names to it\n * @param {string} resource valid api resource name\n * @returns {object} Object contains singular and plural names for resource\n *\n * @version 0.1.0\n * @since 0.1.0\n */\nexport const normalizeResource = (resource) => {\n    const singular = singularize(resource.name);\n    const plural = pluralize(resource.name);\n\n    return { singular, plural };\n};\n\n/**\n * @function\n * @name variableNameFor\n * @description Generate camel cased variable name based on provided strings\n * @param  {...string} names array of names to be used in variable name\n * @returns {string} camel cased name\n *\n * @version 0.1.0\n * @since 0.1.0\n */\nconst variableNameFor = (...names) => camelCase([...names]);\n\n/**\n * @function\n * @name createGetListHttpAction\n * @param {string} resource Api resource name\n * @returns {object} http actions to interact with a resource\n *\n * @version 0.1.0\n * @since 0.1.0\n */\nexport const createGetListHttpAction = (resource) => {\n    const { plural } = normalizeResource(resource);\n\n    const methodName = variableNameFor(\"get\", plural);\n\n    return {\n        [methodName]: (params) => {\n            const endpoint = `/${plural}`;\n\n            return get(endpoint, params);\n        },\n    };\n};\n\n/**\n * @function\n * @name createGetSingleHttpAction\n * @param {string} resource Api resource name\n * @returns {object} http actions to interact with a resource\n *\n * @version 0.1.0\n * @since 0.1.0\n */\nexport const createGetSingleHttpAction = (resource) => {\n    const { singular, plural } = normalizeResource(resource);\n\n    const methodName = variableNameFor(\"get\", singular);\n\n    return {\n        [methodName]: (id) => {\n            const endpoint = `/api/${singular}/${id}`;\n\n            return get(endpoint);\n        },\n    };\n};\n\n/**\n * @function\n * @name createPostHttpAction\n * @param {string} resource Api resource name\n * @returns {object} http actions to interact with a resource\n *\n * @version 0.1.0\n * @since 0.1.0\n */\nexport const createPostHttpAction = (resource) => {\n    const { singular, plural } = normalizeResource(resource);\n\n    const methodName = variableNameFor(\"post\", singular);\n\n    return {\n        [methodName]: (payload) => {\n            const endpoint = `/${plural}`;\n\n            return post(endpoint, payload);\n        },\n    };\n};\n\n/**\n * @function\n * @name createPutHttpAction\n * @param {string} resource Api resource name\n * @returns {object} http actions to interact with a resource\n *\n * @version 0.1.0\n * @since 0.1.0\n */\nexport const createPutHttpAction = (resource) => {\n    const { singular, plural } = normalizeResource(resource);\n\n    const methodName = variableNameFor(\"put\", singular);\n\n    return {\n        [methodName]: (payload) => {\n            const endpoint = `/${plural}/${payload.id}`;\n\n            return put(endpoint, payload);\n        },\n    };\n};\n\n/**\n * @function\n * @name createPatchHttpAction\n * @param {string} resource Api resource name\n * @returns {object} http actions to interact with a resource\n *\n * @version 0.1.0\n * @since 0.1.0\n */\nexport const createPatchHttpAction = (resource) => {\n    const { singular, plural } = normalizeResource(resource);\n\n    const methodName = variableNameFor(\"patch\", singular);\n\n    return {\n        [methodName]: (payload) => {\n            const endpoint = `/${plural}/${payload.id}`;\n\n            return patch(endpoint, payload);\n        },\n    };\n};\n\n/**\n * @function\n * @name createDeleteHttpAction\n * @param {string} resource Api resource name\n * @returns {object} http actions to interact with a resource\n *\n * @version 0.1.0\n * @since 0.1.0\n */\nexport const createDeleteHttpAction = (resource) => {\n    const { singular, plural } = normalizeResource(resource);\n\n    const methodName = variableNameFor(\"delete\", singular);\n\n    return {\n        [methodName]: (id) => {\n            const endpoint = `/${plural}/${id}`;\n\n            return del(endpoint);\n        },\n    };\n};\n\n/**\n * @function createHttpActionsFor\n * @name createHttpActionsFor\n * @description generate http actions to interact with resource\n * @param {string} resource valid http resource\n * @returns {object} http actions to interact with a resource\n * @since 0.1.0\n * @version 0.1.0\n * @example\n * import { createHttpActionsFor } from './client';\n *\n * const { deleteUser } = createHttpActionsFor('user');\n * deleteUser('5c176624').then(user => { ... }).catch(error => { ... });\n */\nexport const createHttpActionsFor = (resource) => {\n    const getResources = createGetListHttpAction(resource);\n    const getResource = createGetSingleHttpAction(resource);\n    const postResource = createPostHttpAction(resource);\n    const putResource = createPutHttpAction(resource);\n    const patchResource = createPatchHttpAction(resource);\n    const deleteResource = createDeleteHttpAction(resource);\n\n    return {\n        ...getResources,\n        ...getResource,\n        ...postResource,\n        ...putResource,\n        ...patchResource,\n        ...deleteResource,\n    };\n};\n\n/**\n * @function\n * @name getUserId\n * @description retrieve userId from local storage if not set\n *\n * @returns {string |undefined} user id\n * @since 0.1.0\n * @version 0.1.0\n */\nexport const getUserId = () => {\n    if (isEmpty(userId)) {\n        const payload = getTokenPayload(token);\n        const { id } = payload;\n\n        // userId = localStorage.getItem(\"userId\"); // eslint-disable-line\n        userId = id;\n    }\n\n    return userId;\n};","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Profile/index.js",["197","198"],"import React from \"react\";\nimport avatar from \"../../assets/logo512r.png\";\nimport { connect } from \"react-redux\";\nimport { ImPencil } from \"react-icons/im\";\nimport { EDIT_USER } from \"../../actions\";\nimport { httpActions, getUserId } from \"../../client\";\nimport { useGet } from \"../../hooks\";\n\nconst { getProfile } = httpActions;\n\nfunction Index({ data, profile, dispatch }) {\n  const id = getUserId();\n\n  const { result: user, loading, refresh } = useGet(id, getProfile);\n\n  return user ? (\n    <div className=\"profile\">\n      <div className=\"avatar\">\n        <img className=\"aimg\" src={avatar} alt=\"\" />\n      </div>\n      <div className=\"details\">\n        <div className=\"pencil\" onClick={() => dispatch({ type: EDIT_USER })}>\n          <ImPencil />\n        </div>\n        {console.log(\"ttttttttttttttt\", user)}\n        <div className=\"pdetails\">\n          <h3 className=\"h3span\">First name:</h3> <h3>{user.fname}</h3>\n        </div>\n        <div className=\"pdetails\">\n          <h3 className=\"h3span\">Last name:</h3> <h3>{user.lname}</h3>\n        </div>\n        <div className=\"pdetails\">\n          <h3 className=\"h3span\">Email:</h3> <h3>{user.email}</h3>\n        </div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\nconst mapStateToprops = (store) => {\n  const { profile } = store;\n  return { ...store, profile: profile };\n};\n\nexport default connect(mapStateToprops)(Index);\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dashboard/Cards.js",["199","200","201","202","203","204","205"],"import React, { useState } from \"react\";\nimport avatar from \"../../assets/logo512r.png\";\nimport { connect } from \"react-redux\";\nimport { ADD_USER, ADD_USER_FORM, REMOVE_USER } from \"../../actions\";\nimport { FaEye, FaRegEye, FaTrash } from \"react-icons/fa\";\nimport Carditem from \"./Carditem\";\n\nfunction Cards({\n  user = [],\n  adduser,\n  dispatch,\n  children,\n  remove,\n  edituser,\n  viewuser,\n  adduserbtn,\n}) {\n  return (\n    <div className=\"cards\">\n      {!(user.length === 0) ? (\n        user.map((item) => <Carditem {...item} key={item.id} />)\n      ) : (\n        <div className=\"nouser\">\n          <h3> No user yet </h3>\n        </div>\n      )}\n      {adduser && children} {viewuser && children} {edituser && children}\n      {adduserbtn && (\n        <div className=\"cbtn\">\n          <button\n            className=\"btn\"\n            onClick={(e) => {\n              e.preventDefault();\n              dispatch({ type: ADD_USER_FORM });\n            }}\n          >\n            Add User\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction mapStateToprops(store) {\n  const { data, adduser } = store;\n  return { ...store, user: data, adduser: adduser };\n}\n\nexport default connect(mapStateToprops)(Cards);\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/reducer.js",["206","207","208"],"import {\n    ACTIVATE_USER,\n    ADD_USER,\n    DEACTIVATE_USER,\n    REMOVE_USER,\n    EDIT_USER,\n    EXIT_ADD_FORM,\n    EXIT_EDIT_USER,\n    ADD_USER_FORM,\n    VIEW_USER,\n    EXIT_VEW_USER,\n    SAVE_UPDATES,\n    SAVE_TOKEN,\n    SAVE_FORM_DATA,\n} from \"./actions\";\n// import { removeUser, registerUser } from \"./client/\";\nlet removeUser, registerUser;\n\nfunction reducer(state, action) {\n    /*forms*/\n    if (action.type === EXIT_ADD_FORM) {\n        return {...state, adduser: false };\n    }\n    if (action.type === ADD_USER_FORM) {\n        return {...state, adduser: true };\n    }\n\n    /*user data*/\n    if (action.type === ADD_USER) {\n        if (action.payload) {\n            registerUser(action.payload);\n        }\n        return {...state, adduser: false };\n    }\n\n    if (action.type === REMOVE_USER) {\n        // return {...state, data: removeUser(action.payload), viewuser: false };\n    }\n\n    if (action.type === VIEW_USER) {\n        return {\n            ...state,\n            adduser: false,\n            viewuser: true,\n            viewdata: action.payload,\n            viewusr: true,\n            adduserbtn: false,\n        };\n    }\n    if (action.type === EXIT_VEW_USER) {\n        return {\n            ...state,\n            viewuser: false,\n            viewdata: null,\n            adduserbtn: true,\n        };\n    }\n    if (action.type === EDIT_USER) {\n        return {...state, edituser: true, viewuser: false };\n    }\n    if (action.type === EXIT_EDIT_USER) {\n        return {...state, edituser: false, viewdata: null, adduserbtn: true };\n    }\n    if (action.type === SAVE_UPDATES) {\n        let { data } = state;\n        const { payload } = action;\n\n        for (let i = 0; i < data.length; i++) {\n            if (data[i].id === payload.id) {\n                data[i] = payload;\n                if (payload.role === \"admin\") {\n                    state.profile = payload;\n                }\n            }\n        }\n\n        return {\n            ...state,\n            edituser: false,\n            data,\n            viewdata: null,\n            adduserbtn: true,\n        };\n    }\n\n    //................. AUTH\n\n    if (action.type === SAVE_TOKEN) {\n        if (action.payload) {\n            const { access_token } = action.payload;\n            console.log(\"token from login\", access_token);\n            return {...state, token: access_token };\n        }\n    }\n\n    //......... form data\n\n    if (action.type === SAVE_FORM_DATA) {\n        if (action.payload) {\n            const { email } = action.payload;\n            console.log(\"token from login\", email);\n            return {...state, formdata: { email } };\n        }\n    }\n    return state;\n}\n\nexport default reducer;","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/actions.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Auth/Adduser.js",["209"],"import React, { useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { EXIT_ADD_FORM, ADD_USER } from \"../../actions\";\n\nfunction Adduser({ data, adduser, dispatch }) {\n  const fname = useRef(\"\");\n  const lname = useRef(\"\");\n  const email = useRef(\"\");\n  const phone = useRef(\"\");\n  const password = useRef(\"\");\n\n  const hundleSubmit = (e) => {\n    e.preventDefault();\n    dispatch({\n      type: ADD_USER,\n      payload: {\n        fname: fname.current.value,\n        lname: lname.current.value,\n        email: email.current.value,\n        phone: phone.current.value,\n        password: password.current.value,\n      },\n    });\n  };\n\n  return (\n    <div className=\"form-adduser\">\n      <h4 className=\"add-user-title\">Add New User</h4>\n      <form className=\"form\" action=\"\">\n        <input type=\"text\" name=\"fname\" ref={fname} placeholder=\"First Name\" />\n        <input type=\"text\" name=\"lname\" ref={lname} placeholder=\"Last Name\" />\n        <input type=\"email\" name=\"email\" ref={email} placeholder=\"Email\" />\n        <input type=\"text\" name=\"phone\" ref={phone} placeholder=\"Phone\" />\n        <input\n          type=\"text\"\n          name=\"password\"\n          ref={password}\n          placeholder=\"Password\"\n        />\n        <button className=\"btn\" onClick={(e) => hundleSubmit(e)}>\n          Save\n        </button>\n        <button\n          className=\"btn\"\n          onClick={(e) => {\n            e.preventDefault();\n            dispatch({ type: EXIT_ADD_FORM });\n          }}\n        >\n          Exit\n        </button>\n      </form>\n    </div>\n  );\n}\nfunction mapStateToprops(store) {\n  const { data, adduser } = store;\n  return { ...store, data: data, adduser: adduser };\n}\n\nexport default connect(mapStateToprops)(Adduser);\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dashboard/Carditem.js",["210","211","212"],"import React from \"react\";\nimport { ADD_USER, ADD_USER_FORM, REMOVE_USER, VIEW_USER } from \"../../actions\";\nimport avatar from \"../../assets/logo512r.png\";\nimport { FaEye, FaRegEye, FaTrash } from \"react-icons/fa\";\nimport { connect } from \"react-redux\";\n\nfunction Carditem(item) {\n  return (\n    <div className=\"card-items\" key={item.id} onClick={() => item.view()}>\n      <div className=\"eye\">\n        <FaRegEye />\n      </div>\n      <div className=\"delete\" onClick={() => item.remove()} key={item.id}>\n        <FaTrash />\n      </div>\n      <div className=\"username\">\n        <h3 className=\"h3span\">User Name:</h3>\n        <h3>{item.fname + \" \" + item.lname}</h3>\n      </div>\n      <div className=\"status\">\n        <h3 className=\"h3span\">Status:</h3> <h3>{item.status}</h3>\n      </div>\n      <div className=\"cavatar\">\n        <img className=\"cardimg\" src={avatar} alt=\"\" />\n      </div>\n    </div>\n  );\n}\nconst mapDispatchToprops = (dispatch, ownProps) => {\n  const { id } = ownProps;\n  return {\n    remove: () => dispatch({ type: REMOVE_USER, payload: { id } }),\n    view: () => dispatch({ type: VIEW_USER, payload: { ...ownProps } }),\n  };\n};\nexport default connect(null, mapDispatchToprops)(Carditem);\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dashboard/ViewUser.js",["213","214","215","216"],"import React, { useRef, useState } from \"react\";\nimport avatar from \"../../assets/logo512r.png\";\nimport { connect } from \"react-redux\";\nimport { EXIT_VEW_USER, EDIT_USER } from \"../../actions\";\n\nfunction ViewUser({ viewdata, dispatch, viewuser, edituser, viewusr }) {\n  const { id, fname, lname, email, status, role, phone } = viewdata;\n  const [value, setValue] = useState(viewdata);\n\n  return (\n    <div className=\"view\">\n      <div className=\"uavatar\">\n        <img className=\"uimg\" src={avatar} alt=\"\" />\n      </div>\n      <div className=\"udetails\">\n        <h4>\n          User name : {fname}-{lname}\n        </h4>\n        <h4>Email : {email}</h4>\n        <h4>Status : {status}</h4>\n        <h4>Role : {role}</h4>\n        <h4>Phone : {phone}</h4>\n      </div>\n      <div className=\"vbuttons\">\n        <button\n          className=\"btn\"\n          onClick={() => dispatch({ type: EXIT_VEW_USER })}\n        >\n          Exit\n        </button>\n        <button\n          className=\"btn\"\n          onClick={() =>\n            dispatch({ type: EDIT_USER, payload: { edit: \"profile\" } })\n          }\n        >\n          Edit\n        </button>\n      </div>\n    </div>\n  );\n}\nfunction mapStateToprops(store) {\n  return { ...store };\n}\n\nexport default connect(mapStateToprops)(ViewUser);\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Auth/Edituser.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dashboard/EditUsr.js",["217","218","219","220","221","222","223","224","225","226","227"],"import React, { useRef, useState } from \"react\";\nimport avatar from \"../../assets/logo512r.png\";\nimport { connect } from \"react-redux\";\nimport {\n  EXIT_VEW_USER,\n  EDIT_USER,\n  EXIT_EDIT_USER,\n  SAVE_UPDATES,\n} from \"../../actions\";\nimport Edituser from \"../Auth/Edituser\";\n\nfunction EditUsr({ viewdata, dispatch, viewuser, edituser, profile, viewusr }) {\n  const { id, fname, lname, email, status, role, phone } = viewdata || profile;\n  const initial = viewdata || profile;\n  const [value, setValue] = useState(initial);\n\n  return (\n    <div className=\"view\">\n      <div className=\"uavatar\">\n        <img className=\"uimg\" src={avatar} alt=\"\" />\n      </div>\n      {edituser && (\n        <form action=\"\" className=\"edetails\">\n          <div className=\"einput\">\n            <label className=\"elabel\" htmlFor=\"fname\">\n              First Name:\n            </label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={value.fname}\n              id=\"\"\n              onChange={(e) => setValue({ ...value, fname: e.target.value })}\n            />\n          </div>\n          <div className=\"einput\">\n            <label className=\"elabel\" htmlFor=\"lname\">\n              Last Name:\n            </label>\n            <input\n              type=\"text\"\n              name=\"lname\"\n              value={value.lname}\n              id=\"\"\n              onChange={(e) => setValue({ ...value, lname: e.target.value })}\n            />\n          </div>\n          <div className=\"einput\">\n            <label className=\"elabel\" htmlFor=\"email\">\n              Email:\n            </label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={value.email}\n              id=\"\"\n              onChange={(e) => setValue({ ...value, email: e.target.value })}\n            />\n          </div>\n          <div className=\"einput\">\n            <label className=\"elabel\" htmlFor=\"Status\">\n              Status:\n            </label>\n            <select\n              className=\"btn\"\n              name=\"\"\n              id=\"\"\n              onChange={(e) => setValue({ ...value, status: e.target.value })}\n            >\n              <option value=\"Active\">Activate</option>\n              <option value=\"Inactive\">Deactivate</option>\n            </select>\n          </div>\n          <div className=\"einput\">\n            <label className=\"elabel\" htmlFor=\"role\">\n              Role:\n            </label>\n            <input\n              type=\"text\"\n              name=\"role\"\n              value={value.role}\n              id=\"\"\n              onChange={(e) => setValue({ ...value, role: e.target.value })}\n            />\n          </div>\n          <div className=\"einput\">\n            <label className=\"elabel\" htmlFor=\"phone\">\n              Phone:\n            </label>\n            <input\n              type=\"text\"\n              name=\"phone\"\n              value={value.phone}\n              id=\"\"\n              onChange={(e) => setValue({ ...value, phone: e.target.value })}\n            />\n          </div>\n          <div className=\"vbuttons\">\n            <button\n              className=\"btn\"\n              onClick={(e) => {\n                e.preventDefault();\n                dispatch({ type: EXIT_EDIT_USER });\n              }}\n            >\n              Exit\n            </button>\n            <button\n              className=\"btn\"\n              onClick={(e) => {\n                e.preventDefault();\n                dispatch({ type: SAVE_UPDATES, payload: value });\n              }}\n            >\n              Save\n            </button>\n          </div>\n        </form>\n      )}\n    </div>\n  );\n}\n\nfunction mapStateToprops(store) {\n  return { ...store };\n}\n\nexport default connect(mapStateToprops)(EditUsr);\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/store.js",["228"],"\"use strict\";\nimport { createStore } from \"redux\";\nimport reducer from \"./reducer\";\n\nlet store;\nconst initstore = {\n    data: [],\n    formdata: {},\n    adduser: false,\n    edituser: false,\n    profile: {},\n    viewuser: false,\n    viewusr: false,\n    adduserbtn: true,\n    token: \"\",\n};\nif (!store) {\n    store = createStore(reducer, initstore);\n}\n\nexport { store };","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/config/axiosConfig.js",["229","230","231"],"\"use strict\";\n\nimport axios from \"axios\";\nimport { store } from \"../store\";\nimport { fetchAccessToken } from \"../client\";\n\nlet instance;\nlet BASE_URL;\nlet isAlreadyFetchingAccessToken = false;\nlet subscribers = [];\n\nconst token = localStorage.getItem(\"token\");\n\nBASE_URL = process.env.REACT_APP_NECBOT_API_URL;\n\nconst defaultOptions = {\n    baseURL: BASE_URL,\n    withCredentials: true,\n    headers: {\n        \"Content-Type\": \"application/json\",\n    },\n};\n\nif (!instance) {\n    instance = axios.create(defaultOptions);\n    instance.interceptors.request.use(function(config) {\n        if (token) {\n            config.headers.Authorization = token ? `Bearer ${token}` : \"\";\n        }\n        return config;\n    });\n\n    function onAccessTokenFetched(access_token) {\n        subscribers = subscribers.filter((callback) => callback(access_token));\n    }\n\n    function addSubscriber(callback) {\n        subscribers.push(callback);\n    }\n\n    instance.interceptors.response.use(\n        function(response) {\n            return response.data;\n        },\n        function(error) {\n            const {\n                config,\n                response: { status },\n            } = error;\n            let originalRequest = config;\n\n            if (originalRequest.url == \"/auth/login\") {} else {\n                if (status === 403) {\n                    if (!isAlreadyFetchingAccessToken) {\n                        isAlreadyFetchingAccessToken = true;\n\n                        fetchAccessToken().then((access_token) => {\n                            const { AccessToken } = access_token.data;\n                            isAlreadyFetchingAccessToken = false;\n                            onAccessTokenFetched(AccessToken);\n                        });\n                    }\n\n                    const retryOriginalRequest = new Promise((resolve) => {\n                        addSubscriber((AccessToken) => {\n                            const newtoken = \"Bearer \" + AccessToken;\n                            const newheaders = {\n                                ...originalRequest.headers,\n                                Authorization: newtoken,\n                            };\n                            const newrequest = {...originalRequest, headers: newheaders };\n                            const newinstance = axios.create();\n                            resolve(newinstance(newrequest));\n                        });\n                    });\n\n                    return retryOriginalRequest;\n                }\n            }\n\n            return Promise.reject(error);\n        }\n    );\n}\nexport default instance;","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/hooks/index.js",["232","233","234","235"],"/**\n * Custom hooks\n *\n * @author Benson Maruchu<benmaruchu@gmail.com>\n * @since 0.1.0\n */\n\n/* dependencies */\nimport { useEffect, useState, useCallback, useContext } from \"react\";\nimport { useToasts } from \"react-toast-notifications\";\n//import { ConfigsContext, LocaleContext, RolesContext } from \"../../configs\";\n\n/**\n * @function\n * @name useGetList\n * @description Custom hook for fetching results from the web\n * @param {Function} onGet Function to be called on fetch data event\n * @param {object} params Additional Params to be passed\n * @returns {*[]} Array which have data, functions\n * @version 0.1.0\n * @since 0.2.0\n */\nexport const useGetList = (onGet, params) => {\n    const { addToast } = useToasts();\n    const [loading, setLoading] = useState(false);\n    const [results, setResults] = useState([]);\n    const [pages, setPages] = useState(0);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [haveNextPage, setHaveNextPage] = useState(false);\n    const [havePreviousPage, setHavePreviousPage] = useState(false);\n    const [sort, sortBy] = useState(null);\n    const [searchQuery, searchBy] = useState(undefined);\n    const [shouldRefresh, setShouldRefresh] = useState(false);\n    const [filters, filterBy] = useState(null);\n\n    useEffect(() => {\n        setLoading(true);\n        onGet({ page: currentPage, sort, q: searchQuery, ...filters, ...params })\n            .then((response) => {\n                setResults(response.data);\n                setPages(response.pagination.totalPages);\n                if (currentPage > 1) {\n                    setHavePreviousPage(true);\n                } else {\n                    setHavePreviousPage(false);\n                }\n\n                if (currentPage < response.pagination.totalPages) {\n                    setHaveNextPage(true);\n                } else {\n                    setHaveNextPage(false);\n                }\n\n                setLoading(false);\n            })\n            .catch((error) => {\n                setLoading(false);\n                addToast(error.message, { appearance: \"error\" });\n            });\n    }, [currentPage, sort, filters, searchQuery, shouldRefresh]);\n\n    const refresh = useCallback(() => setShouldRefresh(!shouldRefresh), [\n        shouldRefresh,\n    ]);\n\n    return {\n        results,\n        pages,\n        currentPage,\n        havePreviousPage,\n        haveNextPage,\n        loading,\n        setCurrentPage,\n        sortBy,\n        searchBy,\n        refresh,\n        filterBy,\n    };\n};\n\n/**\n * @function\n * @name useGets\n * @description Custom hook for fetching results from the web\n * @param {Function} onGet Function to be called on fetch data event\n * @param {object} params Additional Params to be passed\n * @returns {*[]} Array which have data, functions\n * @version 0.1.0\n * @since 0.2.0\n */\nexport const useGets = (onGet, params) => {\n    const { addToast } = useToasts();\n    const [loading, setLoading] = useState(false);\n    const [results, setResults] = useState([]);\n    const [sort, sortBy] = useState(null);\n    const [searchQuery, searchBy] = useState(undefined);\n    const [shouldRefresh, setShouldRefresh] = useState(false);\n    const [filters, filterBy] = useState(null);\n\n    useEffect(() => {\n        setLoading(true);\n        onGet({ sort, q: searchQuery, ...filters, ...params })\n            .then((response) => {\n                setResults(response);\n                setLoading(false);\n            })\n            .catch((error) => {\n                setLoading(false);\n                addToast(error.message, { appearance: \"error\" });\n            });\n    }, [sort, filters, searchQuery, shouldRefresh]);\n\n    const refresh = useCallback(() => setShouldRefresh(!shouldRefresh), [\n        shouldRefresh,\n    ]);\n\n    return {\n        results,\n        loading,\n        sortBy,\n        searchBy,\n        refresh,\n        filterBy,\n    };\n};\n\n/**\n * @function\n * @name useGet\n * @description Custom hook for getting a single result from server\n *\n * @param {string} id Resource Id\n * @param {Function} onGet Client function invoked for retrieving data\n * @returns {*[]} Array for Result and loading state\n * @version 0.2.0\n * @since 0.1.0\n */\nexport const useGet = (id, onGet) => {\n    const { addToast } = useToasts();\n    const [loading, setLoading] = useState(false);\n    const [result, setResult] = useState(null);\n    const [shouldRefresh, setShouldRefresh] = useState(false);\n\n    useEffect(() => {\n        setLoading(true);\n\n        onGet(id)\n            .then((response) => {\n                setResult(response);\n                setLoading(false);\n            })\n            .catch((error) => {\n                setLoading(false);\n                addToast(error.message, { appearance: \"error\" });\n            });\n    }, [shouldRefresh]);\n\n    const refresh = useCallback(() => setShouldRefresh(!shouldRefresh), [\n        shouldRefresh,\n    ]);\n\n    return { result, loading, refresh };\n};\n\n/**\n * @function\n * @name useConfigs\n * @description Configs context hooks\n *\n * @returns {object} Configs Context\n *\n * @version 0.1.0\n * @since 0.1.0\n */\n// export const useConfigs = () => {\n//     return useContext(ConfigsContext);\n// };\n\n// export const useLocale = () => {\n//     return useContext(LocaleContext);\n// };\n\n// export const useRole = () => {\n//     return useContext(RolesContext);\n// };","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/index.js",[],["236","237"],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Navibar/index.js",["238"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { SidebarData } from \"../Menubar/sidebarData\";\nimport * as FaIcons from \"react-icons/fa\";\nimport * as AiIcons from \"react-icons/ai\";\nimport * as IoIcons from \"react-icons/io\";\nimport \"../Navibar/navbar.css\";\n\nfunction Index() {\n  const [sidebar, setSidebar] = useState(true);\n  const showsidebar = () => setSidebar(!sidebar);\n  return (\n    <>\n      <div className=\"navbar\">\n        <Link to=\"#\" className=\"menu-bars\">\n          <FaIcons.FaBars onClick={showsidebar} />\n        </Link>\n      </div>\n      <nav className={sidebar ? \"nav-menu active\" : \"nav-menu\"}>\n        <ul className=\"nav-menu-items\" onClick={showsidebar}>\n          <li className=\"navbar-toggle\">\n            <Link to=\"#\" className=\"menu-bars\">\n              <AiIcons.AiOutlineClose />\n            </Link>\n          </li>\n          {SidebarData.map((item, index) => {\n            return (\n              <li key={index} className={item.cName}>\n                <Link to={item.path} className=\"menu-bar\">\n                  {item.icon} <span> {item.title} </span>\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </nav>\n    </>\n  );\n}\n\nexport default Index;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Menubar/sidebarData.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Menubar/index.js",["239","240","241"],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Forms/Stepform/ForgotPassword/ForgotPasswordForm.js",["242"],"import React from \"react\";\nimport { useForm, useStep } from \"react-hooks-helper\";\nimport ForgotPass from \"./ForgotPass\";\nimport ResetPass from \"./ResetPass\";\n\nfunction StepForm() {\n  const Default = {\n    email: \"\",\n    code: \"\",\n    newpass: \"\",\n    confirmpass: \"\",\n  };\n\n  const steps = [{ id: \"forgotPassword\" }, { id: \"resetpassword\" }];\n  const [formData, setForm] = useForm(Default);\n  const { step, navigation } = useStep({ steps, initialStep: 0 });\n  const props = { formData, setForm, navigation };\n\n  switch (step.id) {\n    case \"forgotPassword\":\n      return <ForgotPass {...props} />;\n    case \"resetpassword\":\n      return <ResetPass {...props} />;\n  }\n\n  return <div> </div>;\n}\n\nexport default StepForm;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Forms/Stepform/ForgotPassword/ForgotPass.js",["243","244","245"],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Forms/Stepform/ForgotPassword/ResetPass.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Forms/Login.js",["246","247","248"],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Forms/ForgotPassword/ForgotPasswordForm.js",["249"],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Forms/ForgotPassword/ForgotPass.js",["250","251","252"],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Forms/ForgotPassword/ResetPass.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Navibar/Navbar.js",["253"],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Navibar/Menubar/sidebarData.js",["254"],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Footer/Footer.js",[],{"ruleId":"255","replacedBy":"256"},{"ruleId":"257","replacedBy":"258"},{"ruleId":"259","severity":1,"message":"260","line":16,"column":10,"nodeType":"261","messageId":"262","endLine":16,"endColumn":18},{"ruleId":"259","severity":1,"message":"263","line":16,"column":20,"nodeType":"261","messageId":"262","endLine":16,"endColumn":30},{"ruleId":"259","severity":1,"message":"264","line":3,"column":8,"nodeType":"261","messageId":"262","endLine":3,"endColumn":12},{"ruleId":"259","severity":1,"message":"265","line":10,"column":7,"nodeType":"261","messageId":"262","endLine":10,"endColumn":12},{"ruleId":"259","severity":1,"message":"266","line":11,"column":7,"nodeType":"261","messageId":"262","endLine":11,"endColumn":13},{"ruleId":"267","severity":1,"message":"268","line":6,"column":3,"nodeType":"269","messageId":"270","endLine":12,"endColumn":4},{"ruleId":"259","severity":1,"message":"271","line":6,"column":19,"nodeType":"261","messageId":"262","endLine":6,"endColumn":29},{"ruleId":"259","severity":1,"message":"272","line":7,"column":9,"nodeType":"261","messageId":"262","endLine":7,"endColumn":16},{"ruleId":"259","severity":1,"message":"273","line":1,"column":20,"nodeType":"261","messageId":"262","endLine":1,"endColumn":29},{"ruleId":"259","severity":1,"message":"274","line":3,"column":10,"nodeType":"261","messageId":"262","endLine":3,"endColumn":14},{"ruleId":"259","severity":1,"message":"275","line":40,"column":9,"nodeType":"261","messageId":"262","endLine":40,"endColumn":21},{"ruleId":"259","severity":1,"message":"276","line":1,"column":10,"nodeType":"261","messageId":"262","endLine":1,"endColumn":19},{"ruleId":"259","severity":1,"message":"277","line":2,"column":10,"nodeType":"261","messageId":"262","endLine":2,"endColumn":15},{"ruleId":"259","severity":1,"message":"278","line":4,"column":10,"nodeType":"261","messageId":"262","endLine":4,"endColumn":20},{"ruleId":"259","severity":1,"message":"279","line":5,"column":10,"nodeType":"261","messageId":"262","endLine":5,"endColumn":15},{"ruleId":"259","severity":1,"message":"280","line":90,"column":17,"nodeType":"261","messageId":"262","endLine":90,"endColumn":28},{"ruleId":"281","severity":1,"message":"282","line":91,"column":28,"nodeType":"283","messageId":"284","endLine":91,"endColumn":30},{"ruleId":"259","severity":1,"message":"285","line":322,"column":23,"nodeType":"261","messageId":"262","endLine":322,"endColumn":29},{"ruleId":"259","severity":1,"message":"286","line":14,"column":25,"nodeType":"261","messageId":"262","endLine":14,"endColumn":32},{"ruleId":"259","severity":1,"message":"287","line":14,"column":34,"nodeType":"261","messageId":"262","endLine":14,"endColumn":41},{"ruleId":"259","severity":1,"message":"288","line":1,"column":17,"nodeType":"261","messageId":"262","endLine":1,"endColumn":25},{"ruleId":"259","severity":1,"message":"289","line":2,"column":8,"nodeType":"261","messageId":"262","endLine":2,"endColumn":14},{"ruleId":"259","severity":1,"message":"290","line":4,"column":10,"nodeType":"261","messageId":"262","endLine":4,"endColumn":18},{"ruleId":"259","severity":1,"message":"291","line":4,"column":35,"nodeType":"261","messageId":"262","endLine":4,"endColumn":46},{"ruleId":"259","severity":1,"message":"292","line":5,"column":10,"nodeType":"261","messageId":"262","endLine":5,"endColumn":15},{"ruleId":"259","severity":1,"message":"293","line":5,"column":17,"nodeType":"261","messageId":"262","endLine":5,"endColumn":25},{"ruleId":"259","severity":1,"message":"294","line":5,"column":27,"nodeType":"261","messageId":"262","endLine":5,"endColumn":34},{"ruleId":"259","severity":1,"message":"295","line":2,"column":5,"nodeType":"261","messageId":"262","endLine":2,"endColumn":18},{"ruleId":"259","severity":1,"message":"296","line":4,"column":5,"nodeType":"261","messageId":"262","endLine":4,"endColumn":20},{"ruleId":"259","severity":1,"message":"297","line":17,"column":5,"nodeType":"261","messageId":"262","endLine":17,"endColumn":15},{"ruleId":"259","severity":1,"message":"274","line":2,"column":10,"nodeType":"261","messageId":"262","endLine":2,"endColumn":14},{"ruleId":"259","severity":1,"message":"290","line":2,"column":10,"nodeType":"261","messageId":"262","endLine":2,"endColumn":18},{"ruleId":"259","severity":1,"message":"298","line":2,"column":20,"nodeType":"261","messageId":"262","endLine":2,"endColumn":33},{"ruleId":"259","severity":1,"message":"292","line":4,"column":10,"nodeType":"261","messageId":"262","endLine":4,"endColumn":15},{"ruleId":"259","severity":1,"message":"299","line":1,"column":17,"nodeType":"261","messageId":"262","endLine":1,"endColumn":23},{"ruleId":"259","severity":1,"message":"300","line":7,"column":11,"nodeType":"261","messageId":"262","endLine":7,"endColumn":13},{"ruleId":"259","severity":1,"message":"301","line":8,"column":10,"nodeType":"261","messageId":"262","endLine":8,"endColumn":15},{"ruleId":"259","severity":1,"message":"302","line":8,"column":17,"nodeType":"261","messageId":"262","endLine":8,"endColumn":25},{"ruleId":"259","severity":1,"message":"299","line":1,"column":17,"nodeType":"261","messageId":"262","endLine":1,"endColumn":23},{"ruleId":"259","severity":1,"message":"303","line":5,"column":3,"nodeType":"261","messageId":"262","endLine":5,"endColumn":16},{"ruleId":"259","severity":1,"message":"304","line":6,"column":3,"nodeType":"261","messageId":"262","endLine":6,"endColumn":12},{"ruleId":"259","severity":1,"message":"305","line":10,"column":8,"nodeType":"261","messageId":"262","endLine":10,"endColumn":16},{"ruleId":"259","severity":1,"message":"300","line":13,"column":11,"nodeType":"261","messageId":"262","endLine":13,"endColumn":13},{"ruleId":"259","severity":1,"message":"306","line":13,"column":15,"nodeType":"261","messageId":"262","endLine":13,"endColumn":20},{"ruleId":"259","severity":1,"message":"307","line":13,"column":22,"nodeType":"261","messageId":"262","endLine":13,"endColumn":27},{"ruleId":"259","severity":1,"message":"308","line":13,"column":29,"nodeType":"261","messageId":"262","endLine":13,"endColumn":34},{"ruleId":"259","severity":1,"message":"309","line":13,"column":36,"nodeType":"261","messageId":"262","endLine":13,"endColumn":42},{"ruleId":"259","severity":1,"message":"310","line":13,"column":44,"nodeType":"261","messageId":"262","endLine":13,"endColumn":48},{"ruleId":"259","severity":1,"message":"311","line":13,"column":50,"nodeType":"261","messageId":"262","endLine":13,"endColumn":55},{"ruleId":"312","severity":1,"message":"313","line":1,"column":1,"nodeType":"314","messageId":"315","endLine":1,"endColumn":14,"fix":"316"},{"ruleId":"312","severity":1,"message":"313","line":1,"column":1,"nodeType":"314","messageId":"315","endLine":1,"endColumn":14,"fix":"317"},{"ruleId":"259","severity":1,"message":"277","line":4,"column":10,"nodeType":"261","messageId":"262","endLine":4,"endColumn":15},{"ruleId":"281","severity":1,"message":"282","line":52,"column":37,"nodeType":"283","messageId":"284","endLine":52,"endColumn":39},{"ruleId":"259","severity":1,"message":"318","line":9,"column":44,"nodeType":"261","messageId":"262","endLine":9,"endColumn":54},{"ruleId":"319","severity":1,"message":"320","line":60,"column":8,"nodeType":"321","endLine":60,"endColumn":64,"suggestions":"322"},{"ruleId":"319","severity":1,"message":"320","line":111,"column":8,"nodeType":"321","endLine":111,"endColumn":51,"suggestions":"323"},{"ruleId":"319","severity":1,"message":"324","line":156,"column":8,"nodeType":"321","endLine":156,"endColumn":23,"suggestions":"325"},{"ruleId":"255","replacedBy":"326"},{"ruleId":"257","replacedBy":"327"},{"ruleId":"259","severity":1,"message":"328","line":6,"column":13,"nodeType":"261","messageId":"262","endLine":6,"endColumn":20},{"ruleId":"259","severity":1,"message":"288","line":1,"column":17,"nodeType":"261","messageId":"262","endLine":1,"endColumn":25},{"ruleId":"329","severity":2,"message":"330","line":9,"column":21,"nodeType":"261","messageId":"331","endLine":9,"endColumn":28},{"ruleId":"329","severity":2,"message":"332","line":10,"column":47,"nodeType":"261","messageId":"331","endLine":10,"endColumn":58},{"ruleId":"333","severity":1,"message":"334","line":19,"column":3,"nodeType":"335","messageId":"336","endLine":24,"endColumn":4},{"ruleId":"259","severity":1,"message":"337","line":5,"column":10,"nodeType":"261","messageId":"262","endLine":5,"endColumn":17},{"ruleId":"259","severity":1,"message":"338","line":21,"column":18,"nodeType":"261","messageId":"262","endLine":21,"endColumn":22},{"ruleId":"259","severity":1,"message":"339","line":21,"column":24,"nodeType":"261","messageId":"262","endLine":21,"endColumn":31},{"ruleId":"259","severity":1,"message":"288","line":1,"column":25,"nodeType":"261","messageId":"262","endLine":1,"endColumn":33},{"ruleId":"259","severity":1,"message":"273","line":1,"column":35,"nodeType":"261","messageId":"262","endLine":1,"endColumn":44},{"ruleId":"259","severity":1,"message":"340","line":2,"column":16,"nodeType":"261","messageId":"262","endLine":2,"endColumn":26},{"ruleId":"333","severity":1,"message":"334","line":19,"column":3,"nodeType":"335","messageId":"336","endLine":24,"endColumn":4},{"ruleId":"259","severity":1,"message":"337","line":5,"column":10,"nodeType":"261","messageId":"262","endLine":5,"endColumn":17},{"ruleId":"259","severity":1,"message":"338","line":21,"column":18,"nodeType":"261","messageId":"262","endLine":21,"endColumn":22},{"ruleId":"259","severity":1,"message":"339","line":21,"column":24,"nodeType":"261","messageId":"262","endLine":21,"endColumn":31},{"ruleId":"259","severity":1,"message":"328","line":6,"column":13,"nodeType":"261","messageId":"262","endLine":6,"endColumn":20},{"ruleId":"259","severity":1,"message":"341","line":2,"column":13,"nodeType":"261","messageId":"262","endLine":2,"endColumn":20},"no-native-reassign",["342"],"no-negated-in-lhs",["343"],"no-unused-vars","'userData' is defined but never used.","Identifier","unusedVar","'getProfile' is defined but never used.","'Card' is defined but never used.","'login' is assigned a value but never used.","'forgot' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'setIsLoged' is assigned a value but never used.","'history' is assigned a value but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'responsecode' is assigned a value but never used.","'stringify' is defined but never used.","'store' is defined but never used.","'SAVE_TOKEN' is defined but never used.","'merge' is defined but never used.","'accessToken' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'plural' is assigned a value but never used.","'loading' is assigned a value but never used.","'refresh' is assigned a value but never used.","'useState' is defined but never used.","'avatar' is defined but never used.","'ADD_USER' is defined but never used.","'REMOVE_USER' is defined but never used.","'FaEye' is defined but never used.","'FaRegEye' is defined but never used.","'FaTrash' is defined but never used.","'ACTIVATE_USER' is defined but never used.","'DEACTIVATE_USER' is defined but never used.","'removeUser' is defined but never used.","'ADD_USER_FORM' is defined but never used.","'useRef' is defined but never used.","'id' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'EXIT_VEW_USER' is defined but never used.","'EDIT_USER' is defined but never used.","'Edituser' is defined but never used.","'fname' is assigned a value but never used.","'lname' is assigned a value but never used.","'email' is assigned a value but never used.","'status' is assigned a value but never used.","'role' is assigned a value but never used.","'phone' is assigned a value but never used.","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"344","text":"345"},{"range":"346","text":"345"},"'useContext' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'addToast', 'onGet', and 'params'. Either include them or remove the dependency array. If 'onGet' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["347"],["348"],"React Hook useEffect has missing dependencies: 'addToast', 'id', and 'onGet'. Either include them or remove the dependency array. If 'onGet' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["349"],["342"],["343"],"'IoIcons' is defined but never used.","no-undef","'sidebar' is not defined.","undef","'showsidebar' is not defined.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'getCode' is defined but never used.","'code' is assigned a value but never used.","'newpass' is assigned a value but never used.","'useHistory' is defined but never used.","'FaIcons' is defined but never used.","no-global-assign","no-unsafe-negation",[0,13],"",[0,13],{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},"Update the dependencies array to be: [currentPage, sort, filters, searchQuery, shouldRefresh, onGet, params, addToast]",{"range":"356","text":"357"},"Update the dependencies array to be: [sort, filters, searchQuery, shouldRefresh, onGet, params, addToast]",{"range":"358","text":"359"},"Update the dependencies array to be: [addToast, id, onGet, shouldRefresh]",{"range":"360","text":"361"},[2102,2158],"[currentPage, sort, filters, searchQuery, shouldRefresh, onGet, params, addToast]",[3596,3639],"[sort, filters, searchQuery, shouldRefresh, onGet, params, addToast]",[4760,4775],"[addToast, id, onGet, shouldRefresh]"]