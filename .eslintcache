[{"/home/support1/gas_inspection_portal/src/index.js":"1","/home/support1/gas_inspection_portal/src/App.js":"2","/home/support1/gas_inspection_portal/src/store.js":"3","/home/support1/gas_inspection_portal/src/components/ProtectRoute.js":"4","/home/support1/gas_inspection_portal/src/client/index.js":"5","/home/support1/gas_inspection_portal/src/components/Pdf/Pdf.js":"6","/home/support1/gas_inspection_portal/src/components/Forms/Stepform/ForgotPassword/ForgotPasswordForm.js":"7","/home/support1/gas_inspection_portal/src/components/Dash_board/index.js":"8","/home/support1/gas_inspection_portal/src/reducer.js":"9","/home/support1/gas_inspection_portal/src/client/client.js":"10","/home/support1/gas_inspection_portal/src/components/Home/index.js":"11","/home/support1/gas_inspection_portal/src/components/Dash_board/Printform/Printform.js":"12","/home/support1/gas_inspection_portal/src/components/Forms/Stepform/ForgotPassword/ResetPass.js":"13","/home/support1/gas_inspection_portal/src/components/Forms/Stepform/ForgotPassword/ForgotPass.js":"14","/home/support1/gas_inspection_portal/src/actions.js":"15","/home/support1/gas_inspection_portal/src/components/Dash_board/Navibar/index.js":"16","/home/support1/gas_inspection_portal/src/components/Footer/Footer.js":"17","/home/support1/gas_inspection_portal/src/components/Dash_board/Team/Index.js":"18","/home/support1/gas_inspection_portal/src/components/Dash_board/Profile/Profile.js":"19","/home/support1/gas_inspection_portal/src/components/Dash_board/Charts/Spline.js":"20","/home/support1/gas_inspection_portal/src/components/Dash_board/Report/Report.js":"21","/home/support1/gas_inspection_portal/src/config/axiosConfig.js":"22","/home/support1/gas_inspection_portal/src/components/Home/Forms/ForgotPassword/ForgotPasswordForm.js":"23","/home/support1/gas_inspection_portal/src/components/Home/Navibar/Navbar.js":"24","/home/support1/gas_inspection_portal/src/components/Home/Forms/Login.js":"25","/home/support1/gas_inspection_portal/src/hooks/index.js":"26","/home/support1/gas_inspection_portal/src/components/Dash_board/Registration/index.js":"27","/home/support1/gas_inspection_portal/src/components/Dash_board/Team/Regteam.js":"28","/home/support1/gas_inspection_portal/src/components/Dash_board/Report/View.js":"29","/home/support1/gas_inspection_portal/src/components/Dash_board/Menubar/sidebarData.js":"30","/home/support1/gas_inspection_portal/src/components/Dash_board/Team/Table/Table.js":"31","/home/support1/gas_inspection_portal/src/components/Spinner/Spiner.js":"32","/home/support1/gas_inspection_portal/src/components/Dash_board/Report/Table/Table.js":"33","/home/support1/gas_inspection_portal/src/components/Dash_board/Report/Registration/index.js":"34","/home/support1/gas_inspection_portal/src/components/Home/Forms/ForgotPassword/ForgotPass.js":"35","/home/support1/gas_inspection_portal/src/components/Home/Forms/ForgotPassword/ResetPass.js":"36","/home/support1/gas_inspection_portal/src/components/Home/Navibar/Menubar/sidebarData.js":"37","/home/support1/gas_inspection_portal/src/components/Dash_board/Registration/InspectionForm.js":"38","/home/support1/gas_inspection_portal/src/components/Dash_board/Registration/Owner.js":"39","/home/support1/gas_inspection_portal/src/components/Dash_board/Registration/VehicleInformatin.js":"40","/home/support1/gas_inspection_portal/src/components/Dash_board/Registration/VehicleInfoCont.js":"41","/home/support1/gas_inspection_portal/src/components/Dash_board/Registration/EngineType.js":"42","/home/support1/gas_inspection_portal/src/components/Dash_board/Registration/ConversionKitInfo.js":"43","/home/support1/gas_inspection_portal/src/components/Dash_board/Registration/CgnCylinderInfo.js":"44","/home/support1/gas_inspection_portal/src/components/Dash_board/Registration/CgnCylinderInfoCont.js":"45","/home/support1/gas_inspection_portal/src/components/Dash_board/Registration/Preview.js":"46","/home/support1/gas_inspection_portal/src/components/Spinner/Loader.js":"47","/home/support1/gas_inspection_portal/src/components/Dash_board/Report/Registration/Preview.js":"48","/home/support1/gas_inspection_portal/src/components/Dash_board/Report/Registration/CgnCylinderInfoCont.js":"49","/home/support1/gas_inspection_portal/src/components/Dash_board/Report/Registration/CgnCylinderInfo.js":"50","/home/support1/gas_inspection_portal/src/components/Dash_board/Report/Registration/ConversionKitInfo.js":"51","/home/support1/gas_inspection_portal/src/components/Dash_board/Report/Registration/EngineType.js":"52","/home/support1/gas_inspection_portal/src/components/Dash_board/Report/Registration/VehicleInfoCont.js":"53","/home/support1/gas_inspection_portal/src/components/Dash_board/Report/Registration/VehicleInformatin.js":"54","/home/support1/gas_inspection_portal/src/components/Dash_board/Report/Registration/InspectionForm.js":"55","/home/support1/gas_inspection_portal/src/components/Dash_board/Report/Registration/Owner.js":"56","/home/support1/gas_inspection_portal/src/components/Dash_board/Registration/RenderAccordion.js":"57","/home/support1/gas_inspection_portal/src/components/Dash_board/Report/Registration/RenderAccordion.js":"58"},{"size":149,"mtime":1640836844992,"results":"59","hashOfConfig":"60"},{"size":1562,"mtime":1640836844983,"results":"61","hashOfConfig":"60"},{"size":431,"mtime":1640836844992,"results":"62","hashOfConfig":"60"},{"size":517,"mtime":1640836844992,"results":"63","hashOfConfig":"60"},{"size":396,"mtime":1640836844983,"results":"64","hashOfConfig":"60"},{"size":658,"mtime":1640836844987,"results":"65","hashOfConfig":"60"},{"size":719,"mtime":1640836844987,"results":"66","hashOfConfig":"60"},{"size":2786,"mtime":1640852879148,"results":"67","hashOfConfig":"60"},{"size":3593,"mtime":1640836844992,"results":"68","hashOfConfig":"60"},{"size":16124,"mtime":1640852490359,"results":"69","hashOfConfig":"60"},{"size":920,"mtime":1640847088805,"results":"70","hashOfConfig":"60"},{"size":32021,"mtime":1640836844987,"results":"71","hashOfConfig":"60"},{"size":1852,"mtime":1640836844987,"results":"72","hashOfConfig":"60"},{"size":1369,"mtime":1640836844987,"results":"73","hashOfConfig":"60"},{"size":933,"mtime":1640836844983,"results":"74","hashOfConfig":"60"},{"size":1105,"mtime":1640853324158,"results":"75","hashOfConfig":"60"},{"size":216,"mtime":1640836844987,"results":"76","hashOfConfig":"60"},{"size":433,"mtime":1640836844987,"results":"77","hashOfConfig":"60"},{"size":7511,"mtime":1640836844987,"results":"78","hashOfConfig":"60"},{"size":938,"mtime":1640836844983,"results":"79","hashOfConfig":"60"},{"size":744,"mtime":1640836844987,"results":"80","hashOfConfig":"60"},{"size":2785,"mtime":1640836844992,"results":"81","hashOfConfig":"60"},{"size":719,"mtime":1640836844987,"results":"82","hashOfConfig":"60"},{"size":946,"mtime":1640836844987,"results":"83","hashOfConfig":"60"},{"size":3703,"mtime":1640852076884,"results":"84","hashOfConfig":"60"},{"size":5452,"mtime":1640836844992,"results":"85","hashOfConfig":"60"},{"size":9303,"mtime":1640836844987,"results":"86","hashOfConfig":"60"},{"size":5660,"mtime":1640836844987,"results":"87","hashOfConfig":"60"},{"size":1623,"mtime":1640836844987,"results":"88","hashOfConfig":"60"},{"size":872,"mtime":1640836844983,"results":"89","hashOfConfig":"60"},{"size":6119,"mtime":1640836844987,"results":"90","hashOfConfig":"60"},{"size":543,"mtime":1640836844992,"results":"91","hashOfConfig":"60"},{"size":27598,"mtime":1640836844987,"results":"92","hashOfConfig":"60"},{"size":7155,"mtime":1640836844987,"results":"93","hashOfConfig":"60"},{"size":2022,"mtime":1640836844987,"results":"94","hashOfConfig":"60"},{"size":2684,"mtime":1640836844987,"results":"95","hashOfConfig":"60"},{"size":568,"mtime":1640836844987,"results":"96","hashOfConfig":"60"},{"size":2587,"mtime":1640836844987,"results":"97","hashOfConfig":"60"},{"size":2476,"mtime":1640836844987,"results":"98","hashOfConfig":"60"},{"size":2769,"mtime":1640836844987,"results":"99","hashOfConfig":"60"},{"size":2788,"mtime":1640836844987,"results":"100","hashOfConfig":"60"},{"size":2133,"mtime":1640836844987,"results":"101","hashOfConfig":"60"},{"size":2441,"mtime":1640836844987,"results":"102","hashOfConfig":"60"},{"size":15452,"mtime":1640836844987,"results":"103","hashOfConfig":"60"},{"size":14818,"mtime":1640836844987,"results":"104","hashOfConfig":"60"},{"size":7173,"mtime":1640836844987,"results":"105","hashOfConfig":"60"},{"size":470,"mtime":1640836844992,"results":"106","hashOfConfig":"60"},{"size":7417,"mtime":1640836844987,"results":"107","hashOfConfig":"60"},{"size":7293,"mtime":1640836844987,"results":"108","hashOfConfig":"60"},{"size":7608,"mtime":1640836844987,"results":"109","hashOfConfig":"60"},{"size":2441,"mtime":1640836844987,"results":"110","hashOfConfig":"60"},{"size":2133,"mtime":1640836844987,"results":"111","hashOfConfig":"60"},{"size":2788,"mtime":1640836844987,"results":"112","hashOfConfig":"60"},{"size":2791,"mtime":1640836844987,"results":"113","hashOfConfig":"60"},{"size":2588,"mtime":1640836844987,"results":"114","hashOfConfig":"60"},{"size":2439,"mtime":1640836844987,"results":"115","hashOfConfig":"60"},{"size":1492,"mtime":1640836844987,"results":"116","hashOfConfig":"60"},{"size":1492,"mtime":1640836844987,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"17nkspv",{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"120"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"126","usedDeprecatedRules":"120"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"120"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"120"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"120"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"120"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"120"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"120"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"120"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"120"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"120"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"174","usedDeprecatedRules":"120"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"120"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"120"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"120"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"120"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"120"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"120"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"120"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"120"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"120"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"120"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"120"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"120"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"120"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"120"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"120"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"120"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"120"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"120"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"120"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"120"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"120"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"120"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"120"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"120"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"120"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"/home/support1/gas_inspection_portal/src/index.js",[],["270","271"],"/home/support1/gas_inspection_portal/src/App.js",["272","273","274"],"import React from \"react\";\nimport {\n  Redirect,\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport { ProtectRoute } from \"./components/ProtectRoute\";\n\nimport Home from \"./components/Home\";\nimport Form from \"./components/Forms/Stepform/ForgotPassword/ForgotPasswordForm\";\n// import Dashboard from \"./components/Dashboard\";\nimport Dashboard from \"./components/Dash_board\";\nimport { Provider } from \"react-redux\";\nimport { ToastProvider } from \"react-toast-notifications\";\nimport { userData, getProfile } from \"./client/index\";\nimport { store } from \"./store\";\nimport Pdf from \"./components/Pdf/Pdf\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ToastProvider placement=\"top-center\">\n        <div className=\"site\">\n          <Router>\n            <Switch>\n              <Route exact path=\"/login\">\n                <Home />\n              </Route>{\" \"}\n              <Route exact path=\"/form\">\n                <Pdf />\n              </Route>{\" \"}\n              <ProtectRoute\n                path=\"/dashboard\"\n                exact\n                component={Dashboard}\n              ></ProtectRoute>{\" \"}\n              <ProtectRoute path=\"/dashboard\" component={Dashboard}>\n                {\" \"}\n              </ProtectRoute>{\" \"}\n              <Redirect exact to=\"/dashboard\" />\n              <Route path=\"*\" component={() => <h2> 404 Not Found </h2>} />\n            </Switch>{\" \"}\n          </Router>{\" \"}\n        </div>{\" \"}\n      </ToastProvider>{\" \"}\n    </Provider>\n  );\n}\n\nexport default App;\n","/home/support1/gas_inspection_portal/src/store.js",["275"],"\"use strict\";\nimport { createStore } from \"redux\";\nimport reducer from \"./reducer\";\n\nlet store;\nconst initstore = {\n    data: [],\n    adduser: false,\n    edituser: false,\n    profile: {},\n    viewuser: false,\n    showProfile: false,\n    adduserbtn: true,\n    token: \"\",\n    reportdata: {},\n    teamdata: {},\n    historytable: false,\n    pdf: false,\n};\nif (!store) {\n    store = createStore(reducer, initstore);\n}\n\nexport { store };","/home/support1/gas_inspection_portal/src/components/ProtectRoute.js",[],"/home/support1/gas_inspection_portal/src/client/index.js",[],"/home/support1/gas_inspection_portal/src/components/Pdf/Pdf.js",["276"],"import React from \"react\";\nimport ReactToPrint from \"react-to-print\";\nimport Regform from \"../Dash_board/Printform/Printform\";\n\nconst thStyle = {\n  fontFamily: \"Anton\",\n  fontWeight: \"normal\",\n  fontStyle: \"normal\",\n};\n\nclass ComponentToPrint extends React.Component {\n  render() {\n    return <Regform />;\n  }\n}\n\nclass Example extends React.Component {\n  render() {\n    return (\n      <div>\n        <ReactToPrint\n          trigger={() => <button> Print this out! </button>}\n          content={() => this.componentRef}\n        />{\" \"}\n        <ComponentToPrint ref={(el) => (this.componentRef = el)} />{\" \"}\n      </div>\n    );\n  }\n}\n\nexport default Example;\n","/home/support1/gas_inspection_portal/src/components/Forms/Stepform/ForgotPassword/ForgotPasswordForm.js",["277"],"import React from \"react\";\nimport { useForm, useStep } from \"react-hooks-helper\";\nimport ForgotPass from \"./ForgotPass\";\nimport ResetPass from \"./ResetPass\";\n\nfunction StepForm() {\n  const Default = {\n    email: \"\",\n    code: \"\",\n    newpass: \"\",\n    confirmpass: \"\",\n  };\n\n  const steps = [{ id: \"forgotPassword\" }, { id: \"resetpassword\" }];\n  const [formData, setForm] = useForm(Default);\n  const { step, navigation } = useStep({ steps, initialStep: 0 });\n  const props = { formData, setForm, navigation };\n\n  switch (step.id) {\n    case \"forgotPassword\":\n      return <ForgotPass {...props} />;\n    case \"resetpassword\":\n      return <ResetPass {...props} />;\n  }\n\n  return <div> </div>;\n}\n\nexport default StepForm;\n","/home/support1/gas_inspection_portal/src/components/Dash_board/index.js",["278","279","280","281","282","283","284","285","286","287"],"/home/support1/gas_inspection_portal/src/reducer.js",["288","289","290","291"],"import {\n    ACTIVATE_USER,\n    ADD_USER,\n    DEACTIVATE_USER,\n    REMOVE_USER,\n    EDIT_USER,\n    EXIT_ADD_FORM,\n    EXIT_EDIT_USER,\n    ADD_USER_FORM,\n    CLEAR_PROFILE_DATA,\n    VIEW_USER,\n    EXIT_VEW_USER,\n    SAVE_UPDATES,\n    SAVE_TOKEN,\n    SAVE_INITIAL_DATA,\n    SAVE_REPORT_DATA,\n    SAVE_FORM_DATA,\n    SAVE_PROFILE_DATA,\n    CLEAR_REPORT_DATA,\n    SHOW_HISTORY_TABLE,\n    SHOW_PDF,\n} from \"./actions\";\n// import { removeUser, registerUser } from \"./client/\";\nlet removeUser, registerUser;\n\nfunction reducer(state, action) {\n    /*forms*/\n    if (action.type === EXIT_ADD_FORM) {\n        return {...state, adduser: false };\n    }\n    if (action.type === ADD_USER_FORM) {\n        return {...state, adduser: true };\n    }\n\n    /*user data*/\n    if (action.type === ADD_USER) {\n        return {...state, adduser: true };\n    }\n\n    if (action.type === REMOVE_USER) {\n        // return {...state, data: removeUser(action.payload), viewuser: false };\n    }\n\n    if (action.type === VIEW_USER) {\n        if (action.payload) {\n            const { modalShown } = action.payload;\n            return {\n                ...state,\n                showProfile: modalShown,\n            };\n        }\n        return {...state };\n    }\n    if (action.type === SAVE_INITIAL_DATA) {\n        if (action.payload) {\n            return {\n                ...state,\n                profile: {...action.payload },\n            };\n        }\n        return {...state };\n    }\n\n    if (action.type === EXIT_VEW_USER) {\n        return {\n            ...state,\n            showProfile: false,\n        };\n    }\n    if (action.type === EDIT_USER) {\n        return {...state, edituser: true };\n    }\n    if (action.type === EXIT_EDIT_USER) {\n        return {...state, edituser: false };\n    }\n    if (action.type === SAVE_UPDATES) {\n        let { data } = state;\n        const { payload } = action;\n\n        for (let i = 0; i < data.length; i++) {\n            if (data[i].id === payload.id) {\n                data[i] = payload;\n                if (payload.role === \"admin\") {\n                    state.profile = payload;\n                }\n            }\n        }\n\n        return {\n            ...state,\n            edituser: false,\n            data,\n            viewdata: null,\n            adduserbtn: true,\n        };\n    }\n\n    //................. AUTH\n\n    if (action.type === SAVE_TOKEN) {\n        if (action.payload) {\n            const { access_token } = action.payload;\n            console.log(\"token from login\", access_token);\n            return {...state, token: access_token };\n        }\n    }\n\n    //......... form data\n\n    if (action.type === SAVE_FORM_DATA) {\n        if (action.payload) {\n            const { email } = action.payload;\n            console.log(\"token from login\", email);\n            return {...state, formdata: { email } };\n        }\n    }\n    if (action.type === CLEAR_REPORT_DATA) {\n        return {...state, reportdata: {} };\n    }\n    if (action.type === SAVE_REPORT_DATA) {\n        if (action.payload) {\n            return {...state, reportdata: {...action.payload } };\n        }\n    }\n    if (action.type === SAVE_PROFILE_DATA) {\n        if (action.payload) {\n            return {...state, teamdata: {...action.payload } };\n        }\n    }\n    if (action.type === CLEAR_PROFILE_DATA) {\n        return {...state, teamdata: {} };\n    }\n    if (action.type === SHOW_PDF) {\n        return {...state, pdf: !state.pdf };\n    }\n    if (action.type === SHOW_HISTORY_TABLE) {\n        return {...state, historytable: !state.historytable };\n    }\n\n    return state;\n}\n\nexport default reducer;","/home/support1/gas_inspection_portal/src/client/client.js",["292","293","294","295","296","297","298","299","300"],"/home/support1/gas_inspection_portal/src/components/Home/index.js",["301","302","303","304","305"],"/home/support1/gas_inspection_portal/src/components/Dash_board/Printform/Printform.js",["306","307","308","309","310","311","312","313","314","315","316","317","318","319","320"],"import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport { borders } from \"@material-ui/system\";\nimport Box from \"@material-ui/core/Box\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport \"./print.css\";\nimport Masaka from \"../../../assets/signatures/masaka.jpg\";\nimport sign from \"../../../assets/signatures/sign.jpg\";\nimport Majengo from \"../../../assets/signatures/majengo.jpg\";\nimport Rajabu from \"../../../assets/signatures/rajabu.jpg\";\nimport { connect } from \"react-redux\";\n\nconst defaultProps = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  bgcolor: \"background.paper\",\n  style: {\n    width: \"705px\",\n    height: \"3rem\",\n    marginLeft: \"45px\",\n    gap: \"35px\",\n  },\n  borderColor: \"text.primary\",\n};\n\nfunction Printform({ reportdata, profile, dispatch }) {\n  const isValidDate = (strDate) => {\n    if (strDate) {\n      let myDatestr = new Date(strDate);\n      if (!isNaN(myDatestr.getMonth())) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  const {\n    createdAt = \"\",\n    validto = \"\",\n    validfrom = \"\",\n    name = \"\",\n    email = \"\",\n    phone = \"\",\n    location = \"\",\n    newInstallation = \"...v...\",\n    periodic = \".....\",\n    afterAccident = \"....\",\n    ownername = \"\",\n    vihecleRegno = \"\",\n    manYear = \"\",\n    make = \"\",\n    model = \"\",\n    chasisno = \"\",\n    engineno = \"\",\n    milliege = \"\",\n    biFuel = \"...\",\n    Dedicated = \"...V...\",\n    DualFuel = \"....\",\n    type = \"\",\n    manufacturer = \"\",\n    serialno = \"-\",\n    installername = \"\",\n    cylinderno3 = \"3\",\n    cylinderposition3 = \"\",\n    cylinderSerialNo3 = \"\",\n    cylindertype3 = \"\",\n    cmanufacturer3 = \"\",\n    cmanuContact3 = \"\",\n    servicepressure3 = \"\",\n    cmanufacturedDate3 = \"\",\n    waterVolume3 = \"\",\n    cexpiryDate3 = \"\",\n    tbscertificate3 = \"\",\n    cylinderno1 = \"1\",\n    cylinderposition1 = \"\",\n    cylindertype1 = \"\",\n    cylinderSerialNo1 = \"\",\n    cmanufacturer1 = \"\",\n    cmanuContact1 = \"\",\n    servicepressure1 = \"\",\n    cmanufacturedDate1 = \"\",\n    waterVolume1 = \"\",\n    cexpiryDate1 = \"\",\n    tbscertificate1 = \"\",\n    cylinderno2 = \"2\",\n    cylinderSerialNo2 = \"\",\n    cylinderposition2 = \"\",\n    cylindertype2 = \"\",\n    cmanufacturer2 = \"\",\n    cmanuContact2 = \"\",\n    servicepressure2 = \"\",\n    cmanufacturedDate2 = \"\",\n    waterVolume2 = \"\",\n    cexpiryDate2 = \"\",\n    tbscertificate2 = \"\",\n    inspectorID = \"\",\n  } = reportdata;\n\n  const signature = profile.signature;\n  let stamp = {};\n\n  if (signature == \"majengo\") {\n    stamp = { name: Majengo };\n  }\n  if (signature == \"masaka\") {\n    stamp = { name: Masaka };\n  }\n  if (signature == \"rajabu\") {\n    stamp = { name: Rajabu };\n  }\n  return (\n    <Container\n      style={{\n        height: \"100hv\",\n        width: \"21.8cm\",\n      }}\n    >\n      <div className=\"pdfform\">\n        <div className=\"pdftitle\">\n          <h4\n            className=\"title\"\n            style={{\n              width: \"fit-content\",\n              fontSize: \"12px\",\n              padding: \"30px 0px\",\n            }}\n          >\n            PILOT NGV PROGRAMME - TANZANIA{\" \"}\n          </h4>{\" \"}\n          <h2 className=\"title\" style={{ width: \"fit-content\" }}>\n            NGV INSPECTION CERTIFICATE{\" \"}\n          </h2>{\" \"}\n          <h4\n            className=\"title\"\n            style={{\n              width: \"fit-content\",\n              fontSize: \"14px\",\n              padding: \"20px 0px 0px 0px\",\n            }}\n          >\n            VALID FROM{\" \"}\n            <span style={{ fontStyle: \"italic\", fontWeight: \"bold\" }}>\n              {isValidDate(validfrom) == true\n                ? validfrom.slice(0, 10).replace(\"T\", \" \")\n                : \"\"}\n            </span>{\" \"}\n            <span> TO </span>{\" \"}\n            <span style={{ fontStyle: \"italic\", fontWeight: \"bold\" }}>\n              {\" \"}\n              {isValidDate(validto) == true\n                ? new Date(validto).toISOString().slice(0, 10).replace(\"T\", \" \")\n                : \"\"}\n            </span>{\" \"}\n          </h4>{\" \"}\n        </div>{\" \"}\n        <div className=\"inspectionType\">\n          <Box border={1} {...defaultProps}>\n            <h3\n              style={{ padding: \"0px 14px 0px 8px\", fontSize: \"14px\" }}\n              className=\"insp\"\n            >\n              INSPECTION TYPE:{\" \"}\n            </h3>{\" \"}\n            <h5 style={{ padding: \"0px 14px 0px 0px\" }} className=\"insp\">\n              New Installation {newInstallation}{\" \"}\n            </h5>{\" \"}\n            <h5 style={{ padding: \"0px 13px 0px 0px\" }} className=\"insp\">\n              Periodic {periodic}{\" \"}\n            </h5>{\" \"}\n            <h5 style={{ padding: \"0px 10px 0px 0px\" }} className=\"insp\">\n              After Accident {afterAccident}{\" \"}\n            </h5>{\" \"}\n          </Box>{\" \"}\n        </div>{\" \"}\n        <table className=\"vehicleinfo\">\n          <thead>\n            <tr>\n              <th colspan=\"7\" style={{ background: \"#646060\", color: \"#fff\" }}>\n                VEHICLE INFORMATION{\" \"}\n              </th>{\" \"}\n            </tr>{\" \"}\n          </thead>{\" \"}\n          <tbody>\n            <tr className=\"trow\" style={{ border: \"1px solid black\" }}>\n              <td\n                style={{\n                  width: \"145px\",\n                  borderRight: \"solid 1px black\",\n                }}\n              >\n                Name of Owner{\" \"}\n              </td>{\" \"}\n              <td\n                style={{\n                  width: \"80px\",\n                  borderRight: \"solid 1px black\",\n                }}\n              >\n                {\" \"}\n                Vehicle Reg.No{\" \"}\n              </td>{\" \"}\n              <td style={{ width: \"80px\", borderRight: \"solid 1px black\" }}>\n                {\" \"}\n                Year of man.{\" \"}\n              </td>{\" \"}\n              <td style={{ width: \"80px\", borderRight: \"solid 1px black\" }}>\n                {\" \"}\n                Make{\" \"}\n              </td>{\" \"}\n              <td style={{ width: \"80px\", borderRight: \"solid 1px black\" }}>\n                {\" \"}\n                Model{\" \"}\n              </td>{\" \"}\n              <td style={{ width: \"auto\", borderRight: \"solid 1px black\" }}>\n                Chassis No.or VIN Engine No / Type{\" \"}\n              </td>{\" \"}\n              <td style={{ width: \"80px\", borderRight: \"solid 1px black\" }}>\n                {\" \"}\n                Mileage at Inspection(km){\" \"}\n              </td>{\" \"}\n            </tr>{\" \"}\n            <tr className=\"trow\">\n              <td style={{ borderRight: \"solid 1px black\" }}>\n                {\" \"}\n                <span style={{ fontStyle: \"italic\" }}> {ownername} </span>{\" \"}\n              </td>{\" \"}\n              <td style={{ borderRight: \"solid 1px black\" }}>\n                <span style={{ fontStyle: \"italic\" }}> {vihecleRegno} </span>{\" \"}\n              </td>{\" \"}\n              <td style={{ borderRight: \"solid 1px black\" }}>\n                {\" \"}\n                <span style={{ fontStyle: \"italic\" }}>\n                  {\" \"}\n                  {manYear !== \"\" ? manYear.slice(0, 4).replace(\"T\", \" \") : \"\"}\n                </span>{\" \"}\n              </td>{\" \"}\n              <td style={{ borderRight: \"solid 1px black\" }}>\n                <span style={{ fontStyle: \"italic\" }}> {make} </span>{\" \"}\n              </td>{\" \"}\n              <td style={{ borderRight: \"solid 1px black\" }}>\n                {\" \"}\n                <span style={{ fontStyle: \"italic\" }}> {model} </span>{\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}>\n                <span style={{ fontStyle: \"italic\" }}> {chasisno} </span>{\" \"}\n                <div>\n                  <div id=\"span1\" class=\"t\">\n                    <span style={{ fontStyle: \"italic\", color: \"blue\" }}>\n                      {\" \"}\n                      {engineno}{\" \"}\n                    </span>{\" \"}\n                  </div>{\" \"}\n                </div>{\" \"}\n              </td>{\" \"}\n              <td style={{ borderLeft: \"solid 1px black\" }}>\n                {\" \"}\n                <span style={{ fontStyle: \"italic\" }}> {milliege} </span>{\" \"}\n              </td>{\" \"}\n            </tr>{\" \"}\n          </tbody>{\" \"}\n        </table>{\" \"}\n        <table className=\"vehicleinfo\">\n          <thead>\n            <tr style={{ border: \"solid 1px black\" }}>\n              <th colspan=\"7\" style={{ background: \"#646060\", color: \"#fff\" }}>\n                TYPE OF NGV{\" \"}\n              </th>{\" \"}\n            </tr>{\" \"}\n          </thead>{\" \"}\n          <tbody>\n            <tr className=\"trow\" style={{ border: \"solid 1px black\" }}>\n              <td style={{ width: \"235px\", borderRight: \"solid 1px black\" }}>\n                {\" \"}\n                Bi - fuel {biFuel}{\" \"}\n              </td>{\" \"}\n              <td style={{ width: \"235px\", borderRight: \"solid 1px black\" }}>\n                {\" \"}\n                Dedicated {Dedicated}{\" \"}\n              </td>{\" \"}\n              <td style={{ width: \"235px\", borderRight: \"solid 1px black\" }}>\n                {\" \"}\n                Dual fuel {DualFuel}{\" \"}\n              </td>{\" \"}\n            </tr>{\" \"}\n          </tbody>{\" \"}\n        </table>{\" \"}\n        <table className=\"converkit\">\n          <thead>\n            <tr style={{ border: \"1px solid black\" }}>\n              <th\n                colspan=\"2\"\n                style={{\n                  background: \"#646060\",\n                  color: \"#fff\",\n                  border: \"1px solid black\",\n                }}\n              >\n                CONVERSION KIT INFORMATION{\" \"}\n              </th>{\" \"}\n            </tr>{\" \"}\n          </thead>{\" \"}\n          <tbody>\n            <tr style={{ border: \"1px solid black\" }}>\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                  border: \"solid 1px black\",\n                }}\n              >\n                Type{\" \"}\n              </td>{\" \"}\n              <td\n                style={{\n                  border: \"solid 1px black\",\n                  textAlign: \"start\",\n                }}\n              >\n                <span> {type} </span>{\" \"}\n              </td>{\" \"}\n            </tr>{\" \"}\n            <tr style={{ border: \"solid 1px black\" }}>\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                  border: \"solid 1px black\",\n                }}\n              >\n                Manufacturer{\" \"}\n              </td>{\" \"}\n              <td\n                style={{\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                  border: \"solid 1px black\",\n                }}\n              >\n                <span> {manufacturer} </span>{\" \"}\n              </td>{\" \"}\n            </tr>{\" \"}\n            <tr className=\"\">\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                  border: \"solid 1px black\",\n                }}\n              >\n                Serial No{\" \"}\n              </td>{\" \"}\n              <td\n                style={{\n                  border: \"solid 1px black\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                }}\n              >\n                {\" \"}\n                <span> {serialno} </span>{\" \"}\n              </td>{\" \"}\n            </tr>{\" \"}\n            <tr className=\"\">\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                  border: \"solid 1px black\",\n                }}\n              >\n                Name of Installer{\" \"}\n              </td>{\" \"}\n              <td\n                style={{\n                  border: \"solid 1px black\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                }}\n              >\n                {\" \"}\n                <span> {installername} </span>{\" \"}\n              </td>{\" \"}\n            </tr>{\" \"}\n          </tbody>{\" \"}\n        </table>{\" \"}\n        <table className=\"cylinder\">\n          <thead>\n            <tr style={{ border: \"solid 1px black\" }}>\n              <th\n                colspan=\"4\"\n                style={{\n                  background: \"#646060\",\n                  color: \"#fff\",\n                }}\n              >\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                  }}\n                >\n                  <div\n                    style={{\n                      width: \"210px\",\n                      paddingLeft: \"3px\",\n                      borderRight: \"1px  solid black\",\n                      height: \"100%\",\n                      paddingTop: \"0px\",\n                      paddingBottom: \"0px\",\n                      borderRight: \"solid 1px black\",\n                    }}\n                  >\n                    CNG CYLINDERS INFROMATION{\" \"}\n                  </div>{\" \"}\n                  <div style={{ margin: \"auto\" }}> Cylinder No. </div>{\" \"}\n                </div>{\" \"}\n              </th>{\" \"}\n            </tr>{\" \"}\n          </thead>{\" \"}\n          <tbody>\n            <tr className=\"\" style={{ height: \"1px\" }}>\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                  border: \"solid 1px black\",\n                }}\n              >\n                Cylinder No.{\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}> {cylinderno1} </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}> {cylinderno2} </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}> {cylinderno3} </td>{\" \"}\n            </tr>{\" \"}\n            <tr className=\"\" style={{ height: \"1px\" }}>\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                  border: \"solid 1px black\",\n                }}\n              >\n                Cylinder Serial No.{\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}>\n                {\" \"}\n                {cylinderSerialNo1}{\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}>\n                {\" \"}\n                {cylinderSerialNo2}{\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}>\n                {\" \"}\n                {cylinderSerialNo3}{\" \"}\n              </td>{\" \"}\n            </tr>{\" \"}\n            <tr className=\"\">\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                  border: \"solid 1px black\",\n                }}\n              >\n                Cylinder position in the Vehicle{\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\", width: \"23.3%\" }}>\n                {\" \"}\n                {cylinderposition1}{\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\", width: \"23.3%\" }}>\n                {\" \"}\n                {cylinderposition2}{\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\", width: \"23.3%\" }}>\n                {\" \"}\n                {cylinderposition3}{\" \"}\n              </td>{\" \"}\n            </tr>{\" \"}\n            <tr className=\"\">\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                  border: \"solid 1px black\",\n                }}\n              >\n                Cylinder Type{\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}> {cylindertype1} </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}> {cylindertype2} </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}> {cylindertype3} </td>{\" \"}\n            </tr>{\" \"}\n            <tr className=\"\">\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                  border: \"solid 1px black\",\n                }}\n              >\n                Manufacture Name{\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}> {cmanufacturer1} </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}> {cmanufacturer2} </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}> {cmanufacturer3} </td>{\" \"}\n            </tr>{\" \"}\n            <tr className=\"\">\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                  border: \"solid 1px black\",\n                }}\n              >\n                Manufacturer Address / Contact{\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}> {cmanuContact1} </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}> {cmanuContact2} </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}> {cmanuContact3} </td>{\" \"}\n            </tr>{\" \"}\n            <tr className=\"\">\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                  border: \"solid 1px black\",\n                }}\n              >\n                Service Pressure(MPa){\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}>\n                {\" \"}\n                {servicepressure1}{\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}>\n                {\" \"}\n                {servicepressure2}{\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}>\n                {\" \"}\n                {servicepressure3}{\" \"}\n              </td>{\" \"}\n            </tr>{\" \"}\n            <tr className=\"\">\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                  border: \"solid 1px black\",\n                }}\n              >\n                Manufactured Date{\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}>\n                {\" \"}\n                {cmanufacturedDate1 !== \"\"\n                  ? new Date(cmanufacturedDate1)\n                      .toISOString()\n                      .slice(0, 10)\n                      .replace(\"T\", \" \")\n                  : \"\"}{\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}>\n                {\" \"}\n                {cmanufacturedDate2 && cmanufacturedDate2.search(\"2021\") !== -1\n                  ? new Date(cmanufacturedDate2)\n                      .toISOString()\n                      .slice(0, 10)\n                      .replace(\"T\", \" \")\n                  : \"\"}{\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}>\n                {cmanufacturedDate3 && cmanufacturedDate3.search(\"2021\") !== -1\n                  ? new Date(cmanufacturedDate3)\n                      .toISOString()\n                      .slice(0, 10)\n                      .replace(\"T\", \" \")\n                  : \"\"}{\" \"}\n              </td>{\" \"}\n            </tr>{\" \"}\n            <tr className=\"\">\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                  border: \"solid 1px black\",\n                }}\n              >\n                Water Volume(litres){\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}> {waterVolume1} </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}> {waterVolume2} </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}> {waterVolume3} </td>{\" \"}\n            </tr>{\" \"}\n            <tr className=\"\">\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                }}\n              >\n                Expiry Date{\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}>\n                {\" \"}\n                {cexpiryDate1 !== \"\"\n                  ? new Date(cexpiryDate1)\n                      .toISOString()\n                      .slice(0, 10)\n                      .replace(\"T\", \" \")\n                  : \"\"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}>\n                {\" \"}\n                {cexpiryDate2 && cexpiryDate2.search(\"2021\") !== -1\n                  ? new Date(cexpiryDate2)\n                      .toISOString()\n                      .slice(0, 10)\n                      .replace(\"T\", \" \")\n                  : \"\"}{\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}>\n                {\" \"}\n                {cexpiryDate3 && cexpiryDate3.search(\"2021\") !== -1\n                  ? new Date(cexpiryDate3)\n                      .toISOString()\n                      .slice(0, 10)\n                      .replace(\"T\", \" \")\n                  : \"\"}{\" \"}\n              </td>{\" \"}\n            </tr>{\" \"}\n            <tr className=\"\">\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                  border: \"solid 1px black\",\n                }}\n              >\n                Certificate of Conformity to Tanzania Standards(TBS){\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}> {tbscertificate1} </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}> {tbscertificate2} </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}> {tbscertificate3} </td>{\" \"}\n            </tr>{\" \"}\n          </tbody>{\" \"}\n        </table>{\" \"}\n        <div\n          style={{\n            width: \"705px\",\n            marginLeft: \"45px\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            marginTop: \"20px\",\n            gap: \"30px\",\n          }}\n        >\n          <div style={{ width: \"400px\", height: \"150px\" }}>\n            <div\n              style={{\n                width: \"320px\",\n                height: \"150px\",\n                border: \"1px solid black !important\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n                gap: \"20px\",\n              }}\n              src={sign}\n            >\n              {\" \"}\n              <span>Signature......................</span>\n              <span>Date..........................</span>\n              <span style={{ fontWeight: \"bold\", fontStyle: \"italic\" }}>\n                Certfied CNG Fuel System Inspector\n              </span>\n            </div>{\" \"}\n          </div>{\" \"}\n          <div style={{ width: \"200px\", height: \"120px\" }}>\n            <img style={{ width: \"200px\", height: \"150px\" }} src={stamp.name} />{\" \"}\n          </div>{\" \"}\n        </div>\n        <table className=\"tbs\">\n          <thead>\n            <tr>\n              <th\n                colspan=\"2\"\n                style={{\n                  background: \"#646060\",\n                  color: \"#fff\",\n\n                  textAlign: \"center !important\",\n                }}\n              >\n                INSPECTION STANDARD OR CODE OF PRACTICE USED{\" \"}\n              </th>{\" \"}\n            </tr>{\" \"}\n          </thead>{\" \"}\n          <tbody>\n            <tr className=\"\" style={{ height: \"1px\" }}>\n              <td style={{ border: \"solid 1px black\" }}>\n                <table className=\"inspectionstandards\">\n                  <thead>\n                    <tr>\n                      <th colspan=\"2\" style={{ border: \"1px solid black\" }}>\n                        <div\n                          style={{\n                            display: \"flex\",\n                            flexDirection: \"row\",\n                          }}\n                        >\n                          <div\n                            style={{\n                              paddingLeft: \"3px\",\n                              height: \"100%\",\n                              paddingTop: \"0px\",\n                              paddingBottom: \"0px\",\n                              fontStyle: \"italic\",\n                              fontWeight: \"bold\",\n                            }}\n                          >\n                            Item{\" \"}\n                          </div>{\" \"}\n                        </div>{\" \"}\n                      </th>{\" \"}\n                    </tr>{\" \"}\n                  </thead>{\" \"}\n                  <tbody>\n                    <tr className=\"\" style={{ height: \"1px\" }}>\n                      <td\n                        style={{\n                          width: \"213px\",\n                          textAlign: \"start\",\n                          paddingLeft: \"5px\",\n                          border: \"1px solid black\",\n                        }}\n                      >\n                        CNG cylinder mounting on the brackets{\" \"}\n                      </td>{\" \"}\n                    </tr>{\" \"}\n                    <tr className=\"\">\n                      <td\n                        style={{\n                          width: \"213px\",\n                          textAlign: \"start\",\n                          paddingLeft: \"5px\",\n                          border: \"1px solid black\",\n                        }}\n                      >\n                        CNG cylinder Condition{\" \"}\n                      </td>{\" \"}\n                    </tr>{\" \"}\n                    <tr className=\"\">\n                      <td\n                        style={{\n                          width: \"213px\",\n                          textAlign: \"start\",\n                          paddingLeft: \"5px\",\n                          border: \"1px solid black\",\n                        }}\n                      >\n                        PRD condition and vent line{\" \"}\n                      </td>{\" \"}\n                    </tr>{\" \"}\n                    <tr className=\"\">\n                      <td\n                        style={{\n                          width: \"213px\",\n                          textAlign: \"start\",\n                          paddingLeft: \"5px\",\n                          border: \"1px solid black\",\n                        }}\n                      >\n                        Fuel line from CNG cylinder to Pressure Regulator{\" \"}\n                      </td>{\" \"}\n                    </tr>{\" \"}\n                    <tr className=\"\">\n                      <td\n                        style={{\n                          width: \"213px\",\n                          textAlign: \"start\",\n                          paddingLeft: \"5px\",\n                          border: \"1px solid black\",\n                        }}\n                      >\n                        Pressure Regulator{\" \"}\n                      </td>{\" \"}\n                    </tr>{\" \"}\n                    <tr className=\"\">\n                      <td\n                        style={{\n                          width: \"213px\",\n                          textAlign: \"start\",\n                          paddingLeft: \"5px\",\n                          border: \"1px solid black\",\n                        }}\n                      >\n                        Refuelling connection and mounting{\" \"}\n                      </td>{\" \"}\n                    </tr>{\" \"}\n                    <tr className=\"\">\n                      <td\n                        style={{\n                          width: \"213px\",\n                          textAlign: \"start\",\n                          paddingLeft: \"5px\",\n                          border: \"1px solid black\",\n                        }}\n                      >\n                        Piping and hoses condition and connections under the\n                        bonnet{\" \"}\n                      </td>{\" \"}\n                    </tr>{\" \"}\n                    <tr className=\"\">\n                      <td\n                        style={{\n                          width: \"213px\",\n                          textAlign: \"start\",\n                          paddingLeft: \"5px\",\n                          border: \"1px solid black\",\n                        }}\n                      >\n                        Dressing of wiring{\" \"}\n                      </td>{\" \"}\n                    </tr>{\" \"}\n                  </tbody>{\" \"}\n                </table>{\" \"}\n              </td>{\" \"}\n              <td\n                style={{\n                  border: \"solid 1px black\",\n                  padding: \"0px!important\",\n                  margin: \"0px !important\",\n                }}\n              >\n                <div\n                  style={{\n                    width: \"377px\",\n                    height: \"225px\",\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    gap: \"55px\",\n                  }}\n                >\n                  <div\n                    style={{\n                      border: \"1px solid black\",\n                      height: \"23px\",\n                      fontWeight: \"bold\",\n                      textAlign: \"start\",\n                      padding: \"2px\",\n                      fontStyle: \"italic\",\n                      marginTop: \"0px !important\",\n                      paddingTop: \"0px !important\",\n                    }}\n                  >\n                    Inspection Procedure{\" \"}\n                  </div>{\" \"}\n                  <div style={{}}>\n                    <p\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        gap: \"15px\",\n                        paddingLeft: \"35px\",\n                        fontStyle: \"italic\",\n                        fontWeight: \"normal\",\n                      }}\n                    >\n                      <h5> &#8226;</h5>\n                      <h5\n                        style={{\n                          fontSize: \"12px\",\n                          width: \"400px\",\n                          textAlign: \"start\",\n                          fontWeight: \"normal\",\n                        }}\n                      >\n                        NFPA - 52: Vehicular Gaseous Fuel Systems Code .2010\n                        Edition{\" \"}\n                      </h5>{\" \"}\n                    </p>{\" \"}\n                    <p\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        gap: \"15px\",\n                        paddingLeft: \"35px\",\n                        fontStyle: \"italic\",\n                        fontWeight: \"normal\",\n                      }}\n                    >\n                      <h5> &#8226;</h5>\n                      <h5\n                        style={{\n                          fontSize: \"12px\",\n                          width: \"400px\",\n                          textAlign: \"start\",\n                          fontWeight: \"normal\",\n                        }}\n                      >\n                        CGA C - 6.4: Compressed Gas Association - Standards for\n                        Visual Inspection of Steel Compressed Gas Cylinders,\n                        2001{\" \"}\n                      </h5>{\" \"}\n                    </p>{\" \"}\n                  </div>{\" \"}\n                </div>{\" \"}\n              </td>{\" \"}\n            </tr>{\" \"}\n          </tbody>{\" \"}\n        </table>{\" \"}\n      </div>{\" \"}\n    </Container>\n  );\n}\nconst MapStateToprops = (store) => {\n  return { ...store };\n};\nexport default connect(MapStateToprops)(Printform);\n","/home/support1/gas_inspection_portal/src/components/Forms/Stepform/ForgotPassword/ResetPass.js",[],"/home/support1/gas_inspection_portal/src/components/Forms/Stepform/ForgotPassword/ForgotPass.js",["321","322","323"],"import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { getCode } from \"../../../../client\";\nimport Card from \"@material-ui/core/Card\";\n\nconst style = {\n  maxWidth: 300,\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nfunction ForgotPass({ formData, setForm, navigation }) {\n  const { email, code, newpass } = formData;\n\n  async function handle() {\n    let responsecode = \"1234\";\n    if (responsecode) {\n      navigation.next();\n    }\n  }\n\n  return (\n    <Container maxWidth=\"xs\">\n      <Card variant=\"outlined\" style={style}>\n        <h3>Forgot Password</h3>\n        <TextField\n          label=\"email / phone\"\n          value={email}\n          onChange={setForm}\n          name=\"email\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <Button\n          variant=\"contained\"\n          fullWidth\n          color=\"primary\"\n          style={{ marginTop: \"1rem\" }}\n          onClick={handle}\n        >\n          Submit\n        </Button>\n      </Card>\n    </Container>\n  );\n}\n\nexport default ForgotPass;\n","/home/support1/gas_inspection_portal/src/actions.js",[],"/home/support1/gas_inspection_portal/src/components/Dash_board/Navibar/index.js",["324","325","326","327","328","329","330","331","332","333","334","335","336"],"/home/support1/gas_inspection_portal/src/components/Footer/Footer.js",[],"/home/support1/gas_inspection_portal/src/components/Dash_board/Team/Index.js",["337","338"],"import React, { useMemo } from \"react\";\nimport Table from \"./Table/Table\";\nimport Adduser from \"./Regteam\";\nimport { connect } from \"react-redux\";\nimport { ADD_USER } from \"../../../actions\";\n\nfunction Index({ adduser }) {\n  return (\n    <div style={{ height: \"600px\" }}>{!adduser ? <Table /> : <Adduser />} </div>\n  );\n}\nconst MapStateToprops = (store) => {\n  return { ...store };\n};\nexport default connect(MapStateToprops)(Index);\n","/home/support1/gas_inspection_portal/src/components/Dash_board/Profile/Profile.js",["339","340","341","342","343","344","345","346"],"import React, { useRef, useState, useEffect } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport { getUserId, httpActions } from \"../../../client/index\";\nimport \"./profile.css\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { connect } from \"react-redux\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { useGet } from \"../../../hooks\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Spinner from \"../../Spinner/Spiner\";\nimport { EDIT_USER, EXIT_EDIT_USER, EXIT_VEW_USER } from \"../../../actions\";\nimport { editProfile } from \"../../../client\";\n\nconst spinerStyle = {\n  display: \"flex\",\n  flexDirection: \"rows\",\n  gap: \"12px\",\n};\n\nconst Editstyle = {\n  maxWidth: 300,\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nconst { putProfile } = httpActions;\n\nfunction Profile({ profile, edituser, dispatch }) {\n  const style = { display: \"flex\", flexDirection: \"row\", fontWeight: \"bold\" };\n  const { fname, initial, lname, email, username, phone, userRole } =\n    profile || {};\n  const { addToast } = useToasts();\n  const [loading, setLoading] = useState(false);\n  const formref = useRef();\n  const fsname = useRef(fname);\n  const lsname = useRef(lname);\n  const usrphone = useRef(phone);\n\n  async function handlesave() {\n    try {\n      setLoading(true);\n      // formref.current.reset();\n      const response = await editProfile({\n        firstname: fsname.current.value,\n        lastname: lsname.current.value,\n        phone: usrphone.current.value,\n      });\n\n      if (response) {\n        setLoading(false);\n        addToast(\"... was Updated successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n        window.location.replace(`/dashboard`);\n        return;\n      }\n      setLoading(false);\n      addToast(\"Updates saved!\", { appearance: \"warning\" });\n    } catch (error) {\n      setLoading(false);\n      addToast(\"Failed\", { appearance: \"error\" });\n    }\n  }\n\n  const edit = false;\n\n  return (\n    <>\n      {!edituser ? (\n        <Card\n          variant=\"outlined \"\n          style={{\n            marginTop: \"10px\",\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"50%\",\n            fontFamily: \"sans-serif\",\n            transform: \"translate(-50%, -50%)\",\n            width: \"35%\",\n            minWidth: \"300px\",\n            zIndex: \"1\",\n            height: \"500px\",\n            borderRadius: \"16px\",\n          }}\n        >\n          <div className=\"pavata\">\n            <div className=\"avata\">\n              <span className=\"initialzoomp\"> {initial} </span>{\" \"}\n            </div>{\" \"}\n          </div>{\" \"}\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                width: \"80%\",\n                margin: \"50px\",\n                gap: \"16px\",\n              }}\n            >\n              <span style={style}>\n                Name:{\" \"}\n                <span style={{ fontWeight: \"normal\" }}>\n                  {\" \"}\n                  {fname + \"   \" + lname}{\" \"}\n                </span>{\" \"}\n              </span>{\" \"}\n              <span style={style}>\n                Email: <span style={{ fontWeight: \"normal\" }}> {email} </span>{\" \"}\n              </span>{\" \"}\n              <span style={style}>\n                Phone: <span style={{ fontWeight: \"normal\" }}> {phone} </span>{\" \"}\n              </span>{\" \"}\n              <span style={style}>\n                Role: <span style={{ fontWeight: \"normal\" }}> {userRole} </span>{\" \"}\n              </span>{\" \"}\n            </div>{\" \"}\n            <IconButton\n              style={{\n                width: \"10%\",\n                height: \"50px\",\n                marginTop: \"78px\",\n                marginRight: \"30px\",\n              }}\n              color=\"primary\"\n              component=\"span\"\n              onClick={() => {\n                dispatch({ type: EDIT_USER });\n              }}\n            >\n              <Edit />\n            </IconButton>\n          </div>\n          <div style={{ display: \"flex \", justifyContent: \"center\" }}>\n            {\" \"}\n            <Button\n              variant=\"contained\"\n              width=\"sm\"\n              style={{ marginTop: \"1rem\", paddingLeft: \"0px\" }}\n              onClick={() => dispatch({ type: EXIT_VEW_USER })}\n            >\n              Close{\" \"}\n            </Button>{\" \"}\n          </div>\n        </Card>\n      ) : (\n        <Card\n          variant=\"outlined \"\n          style={{\n            marginTop: \"10px\",\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"50%\",\n            fontFamily: \"sans-serif\",\n            transform: \"translate(-50%, -50%)\",\n            width: \"35%\",\n            minWidth: \"300px\",\n            zIndex: \"1\",\n            height: \"400px\",\n            borderRadius: \"16px\",\n            maxWidth: 300,\n            padding: \"20px\",\n            borderRadius: \"16px\",\n            transition: \"0.3s\",\n            boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n            \"&:hover\": {\n              boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n            },\n          }}\n        >\n          {\" \"}\n          <TextField\n            label=\"First Name \"\n            defaultValue={fname}\n            margin=\"normal\"\n            inputRef={fsname}\n            variant=\"outlined\"\n            autoComplete=\"off\"\n            fullWidth\n            ref={formref}\n          />{\" \"}\n          <TextField\n            label=\"Last Name \"\n            margin=\"normal\"\n            inputRef={lsname}\n            variant=\"outlined\"\n            autoComplete=\"off\"\n            defaultValue={lname}\n            fullWidth\n            ref={formref}\n          />{\" \"}\n          <TextField\n            label=\"Phone\"\n            margin=\"normal\"\n            defaultValue={phone}\n            inputRef={usrphone}\n            variant=\"outlined\"\n            autoComplete=\"off\"\n            fullWidth\n            ref={formref}\n          />{\" \"}\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n              gap: \"10px\",\n            }}\n          >\n            {\" \"}\n            <Button\n              variant=\"contained\"\n              widht=\"sm\"\n              color=\"primary\"\n              style={{ marginTop: \"1rem\", paddingLeft: \"0px\" }}\n              onClick={handlesave}\n            >\n              {loading ? (\n                <div style={spinerStyle}>\n                  <Spinner loading={loading} /> Loading...{\" \"}\n                </div>\n              ) : (\n                \"Save\"\n              )}{\" \"}\n            </Button>{\" \"}\n            <Button\n              variant=\"contained\"\n              width=\"sm\"\n              style={{ marginTop: \"1rem\", paddingLeft: \"0px\" }}\n              onClick={() => dispatch({ type: EXIT_EDIT_USER })}\n            >\n              Close{\" \"}\n            </Button>{\" \"}\n          </div>\n          <h4> </h4>{\" \"}\n        </Card>\n      )}{\" \"}\n    </>\n  );\n}\nconst MapStateToprops = (store) => {\n  return { ...store };\n};\nexport default connect(MapStateToprops)(Profile);\n","/home/support1/gas_inspection_portal/src/components/Dash_board/Charts/Spline.js",["347"],"import { Chart } from \"react-google-charts\";\nimport * as React from \"react\";\nimport { render } from \"react-dom\";\n\nconst options = {\n  title: \"Months vs. Number of cars inspected\",\n  hAxis: { title: \"Months\", viewWindow: { min: 0, max: 12 } },\n  vAxis: {\n    title: \"Number of cars inspected\",\n    viewWindow: { min: 0, max: 120 },\n  },\n  legend: \"none\",\n};\nconst data = [\n  [\"Months\", \"Number of cars inspected\"],\n  [0, 0],\n  [1, 5],\n  [2, 14],\n  [3, 5],\n  [4, 3],\n  [5, 7],\n  [6, 7],\n  [7, 10],\n  [8, 7],\n  [9, 7],\n  [10, 7],\n  [11, 7],\n  [12, 7],\n];\n\nfunction Spline() {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        background: \"red\",\n\n        width: \"auto\",\n      }}\n    >\n      <Chart\n        chartType=\"LineChart\"\n        data={data}\n        options={options}\n        width=\"100%\"\n        height=\"500px\"\n        legendToggle\n      />\n    </div>\n  );\n}\n\nexport default Spline;\n","/home/support1/gas_inspection_portal/src/components/Dash_board/Report/Report.js",["348","349","350","351","352","353"],"import React from \"react\";\nimport {\n  Redirect,\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport Table from \"./Table/Table\";\nimport VehicleReg from \"./Registration/index\";\nimport PrintForm from \"../Printform/Printform\";\nimport Pdf from \"../../Pdf/Pdf\";\nimport View from \"./View\";\n\nfunction Report() {\n  const table = false;\n  const editdata = true;\n  const viewdata = false;\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/dashboard/reports\" exact component={Table} />{\" \"}\n        <Route path=\"/dashboard/reports/edit\" exact component={VehicleReg} />{\" \"}\n        <Route path=\"/dashboard/reports/view\" exact component={View} />{\" \"}\n      </Switch>{\" \"}\n    </Router>\n  );\n}\n\nexport default Report;\n","/home/support1/gas_inspection_portal/src/config/axiosConfig.js",["354","355"],"\"use strict\";\n\nimport axios from \"axios\";\nimport { store } from \"../store\";\nimport { fetchAccessToken } from \"../client\";\n\nlet instance;\nlet BASE_URL;\nlet isAlreadyFetchingAccessToken = false;\nlet subscribers = [];\n\nconst token = localStorage.getItem(\"token\");\n\nBASE_URL = process.env.REACT_APP_NECBOT_API_URL;\n\nconst defaultOptions = {\n    baseURL: BASE_URL,\n    withCredentials: true,\n    headers: {\n        \"Content-Type\": \"application/json\",\n    },\n};\n\nif (!instance) {\n    instance = axios.create(defaultOptions);\n    instance.interceptors.request.use(function(config) {\n        if (token) {\n            config.headers.Authorization = token ? `Bearer ${token}` : \"\";\n        }\n        return config;\n    });\n\n    function onAccessTokenFetched(access_token) {\n        subscribers = subscribers.filter((callback) => callback(access_token));\n    }\n\n    function addSubscriber(callback) {\n        subscribers.push(callback);\n    }\n\n    instance.interceptors.response.use(\n        function(response) {\n            return response.data;\n        },\n        function(error) {\n            const {\n                config,\n                response: { status },\n            } = error;\n            let originalRequest = config;\n\n            if (originalRequest.url === \"/auth/reset-password\") {\n                return;\n            } else {\n                if (status === 403) {\n                    if (!isAlreadyFetchingAccessToken) {\n                        isAlreadyFetchingAccessToken = true;\n\n                        fetchAccessToken().then((access_token) => {\n                            if (access_token) {\n                                const { AccessToken } = access_token.data;\n                                isAlreadyFetchingAccessToken = false;\n                                onAccessTokenFetched(AccessToken);\n                            }\n                        });\n                    }\n\n                    const retryOriginalRequest = new Promise((resolve) => {\n                        addSubscriber((AccessToken) => {\n                            const newtoken = \"Bearer \" + AccessToken;\n                            const newheaders = {\n                                ...originalRequest.headers,\n                                Authorization: newtoken,\n                            };\n                            const newrequest = {...originalRequest, headers: newheaders };\n                            const newinstance = axios.create();\n                            resolve(newinstance(newrequest));\n                        });\n                    });\n\n                    return retryOriginalRequest;\n                }\n            }\n            // window.location.replace(\"/login\");\n            return Promise.reject(error);\n        }\n    );\n}\n\nexport default instance;","/home/support1/gas_inspection_portal/src/components/Home/Forms/ForgotPassword/ForgotPasswordForm.js",["356"],"/home/support1/gas_inspection_portal/src/components/Home/Navibar/Navbar.js",["357","358","359","360","361"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\nimport { SidebarData } from \"./Menubar/sidebarData\";\nimport * as FaIcons from \"react-icons/fa\";\nimport * as AiIcons from \"react-icons/ai\";\nimport * as IoIcons from \"react-icons/io\";\nimport \"../Navibar/navbar.css\";\nimport \"../home.css\";\n\nfunction Navbar() {\n  const [sidebar, setSidebar] = useState(false);\n  const showsidebar = () => setSidebar(!sidebar);\n  return (\n    <>\n      <div className=\"navba\">\n        <Container className=\"navcontaine\">\n          <Link to=\"#\" className=\"navlinks1\">\n            Home{\" \"}\n          </Link>{\" \"}\n          <Link to=\"#\" className=\"navlinks1\">\n            Feeds{\" \"}\n          </Link>{\" \"}\n          <Link to=\"/login\" className=\"navlinks1\">\n            Login{\" \"}\n          </Link>{\" \"}\n        </Container>{\" \"}\n      </div>{\" \"}\n    </>\n  );\n}\n\nexport default Navbar;\n","/home/support1/gas_inspection_portal/src/components/Home/Forms/Login.js",["362","363","364","365","366","367","368"],"/home/support1/gas_inspection_portal/src/hooks/index.js",["369","370","371","372"],"/**\n * Custom hooks\n *\n * @author Benson Maruchu<benmaruchu@gmail.com>\n * @since 0.1.0\n */\n\n/* dependencies */\nimport { useEffect, useState, useCallback, useContext } from \"react\";\nimport { useToasts } from \"react-toast-notifications\";\n//import { ConfigsContext, LocaleContext, RolesContext } from \"../../configs\";\n\n/**\n * @function\n * @name useGetList\n * @description Custom hook for fetching results from the web\n * @param {Function} onGet Function to be called on fetch data event\n * @param {object} params Additional Params to be passed\n * @returns {*[]} Array which have data, functions\n * @version 0.1.0\n * @since 0.2.0\n */\nexport const useGetList = (onGet, params) => {\n    const { addToast } = useToasts();\n    const [loading, setLoading] = useState(false);\n    const [results, setResults] = useState([]);\n    const [pages, setPages] = useState(0);\n    const [total, setTotal] = useState(0);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [haveNextPage, setHaveNextPage] = useState(false);\n    const [havePreviousPage, setHavePreviousPage] = useState(false);\n    const [sort, sortBy] = useState(null);\n    const [searchQuery, searchBy] = useState(undefined);\n    const [shouldRefresh, setShouldRefresh] = useState(false);\n    const [filters, filterBy] = useState(null);\n\n    useEffect(() => {\n        setLoading(true);\n        onGet({ page: currentPage, sort, q: searchQuery, ...filters, ...params })\n            .then((response) => {\n                setResults(response.data);\n                setPages(response.pagination.totalPages);\n                setTotal(response.total);\n                if (currentPage > 1) {\n                    setHavePreviousPage(true);\n                } else {\n                    setHavePreviousPage(false);\n                }\n\n                if (currentPage < response.pagination.totalPages) {\n                    setHaveNextPage(true);\n                } else {\n                    setHaveNextPage(false);\n                }\n\n                setLoading(false);\n            })\n            .catch((error) => {\n                setLoading(false);\n                addToast(error.message, { appearance: \"error\" });\n            });\n    }, [currentPage, sort, filters, searchQuery, shouldRefresh]);\n\n    const refresh = useCallback(() => setShouldRefresh(!shouldRefresh), [\n        shouldRefresh,\n    ]);\n    return {\n        results,\n        pages,\n        currentPage,\n        havePreviousPage,\n        haveNextPage,\n        loading,\n        total,\n        setTotal,\n        setCurrentPage,\n        sortBy,\n        searchBy,\n        refresh,\n        filterBy,\n    };\n};\n\n/**\n * @function\n * @name useGets\n * @description Custom hook for fetching results from the web\n * @param {Function} onGet Function to be called on fetch data event\n * @param {object} params Additional Params to be passed\n * @returns {*[]} Array which have data, functions\n * @version 0.1.0\n * @since 0.2.0\n */\nexport const useGets = (onGet, params) => {\n    const { addToast } = useToasts();\n    const [loading, setLoading] = useState(false);\n    const [results, setResults] = useState([]);\n    const [sort, sortBy] = useState(null);\n    const [searchQuery, searchBy] = useState(undefined);\n    const [shouldRefresh, setShouldRefresh] = useState(false);\n    const [filters, filterBy] = useState(null);\n\n    useEffect(() => {\n        setLoading(true);\n        onGet({ sort, q: searchQuery, ...filters, ...params })\n            .then((response) => {\n                setResults(response);\n                setLoading(false);\n            })\n            .catch((error) => {\n                setLoading(false);\n                addToast(error.message, { appearance: \"error\" });\n            });\n    }, [sort, filters, searchQuery, shouldRefresh]);\n\n    const refresh = useCallback(() => setShouldRefresh(!shouldRefresh), [\n        shouldRefresh,\n    ]);\n\n    return {\n        results,\n        loading,\n        sortBy,\n        searchBy,\n        refresh,\n        filterBy,\n    };\n};\n\n/**\n * @function\n * @name useGet\n * @description Custom hook for getting a single result from server\n *\n * @param {string} id Resource Id\n * @param {Function} onGet Client function invoked for retrieving data\n * @returns {*[]} Array for Result and loading state\n * @version 0.2.0\n * @since 0.1.0\n */\nexport const useGet = (id, onGet) => {\n    const { addToast } = useToasts();\n    const [loading, setLoading] = useState(false);\n    const [result, setResult] = useState(null);\n    const [shouldRefresh, setShouldRefresh] = useState(false);\n\n    useEffect(() => {\n        setLoading(true);\n\n        onGet(id)\n            .then((response) => {\n                setResult(response);\n                setLoading(false);\n            })\n            .catch((error) => {\n                setLoading(false);\n                addToast(error.message, { appearance: \"error\" });\n            });\n    }, [shouldRefresh]);\n\n    const refresh = useCallback(() => setShouldRefresh(!shouldRefresh), [\n        shouldRefresh,\n    ]);\n\n    return { result, loading, refresh };\n};\n\n/**\n * @function\n * @name useConfigs\n * @description Configs context hooks\n *\n * @returns {object} Configs Context\n *\n * @version 0.1.0\n * @since 0.1.0\n */\n// export const useConfigs = () => {\n//     return useContext(ConfigsContext);\n// };\n\n// export const useLocale = () => {\n//     return useContext(LocaleContext);\n// };\n\n// export const useRole = () => {\n//     return useContext(RolesContext);\n// };","/home/support1/gas_inspection_portal/src/components/Dash_board/Registration/index.js",["373","374","375","376"],"import React from \"react\";\nimport { useForm, useStep } from \"react-hooks-helper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Owner from \"./Owner\";\nimport { connect } from \"react-redux\";\nimport InspectionForm from \"./InspectionForm\";\nimport VehicleInfo from \"./VehicleInformatin\";\nimport VehicleInfoCont from \"./VehicleInfoCont\";\nimport EngineType from \"./EngineType\";\nimport ConversionKitInfo from \"./ConversionKitInfo\";\nimport CgnCylinderInfo from \"./CgnCylinderInfo\";\nimport CgnCylinderInfoCont from \"./CgnCylinderInfoCont\";\nimport Preview from \"./Preview\";\nimport \"./reg.css\";\n\nfunction Index({ reportdata }) {\n    const {\n        createdAt = \"\",\n            validto = \"\",\n            name = \"\",\n            email = \"\",\n            phone = \"\",\n            location = \"\",\n            newInstallation = \"...v...\",\n            periodic = \".....\",\n            afterAccident = \"....\",\n            ownername = \"\",\n            vihecleRegno = \"\",\n            manYear = \"\",\n            make = \"\",\n            model = \"\",\n            chasisno = \"\",\n            engineno = \"\",\n            milliege = \"\",\n            biFuel = \"...\",\n            Dedicated = \"...V...\",\n            DualFuel = \"....\",\n            type = \"\",\n            manufacturer = \"\",\n            serialno = \"-\",\n            installername = \"\",\n            cylinderno3 = \"3\",\n            cylinderposition3 = \"\",\n            cylinderSerialNo3 = \"\",\n            cylindertype3 = \"\",\n            cmanufacturer3 = \"\",\n            cmanuContact3 = \"\",\n            servicepressure3 = \"\",\n            cmanufacturedDate3 = \"\",\n            waterVolume3 = \"\",\n            cexpiryDate3 = \"\",\n            tbscertificate3 = \"\",\n            cylinderno1 = \"1\",\n            cylinderposition1 = \"\",\n            cylindertype1 = \"\",\n            cylinderSerialNo1 = \"\",\n            cmanufacturer1 = \"\",\n            cmanuContact1 = \"\",\n            servicepressure1 = \"\",\n            cmanufacturedDate1 = \"\",\n            waterVolume1 = \"\",\n            cexpiryDate1 = \"\",\n            tbscertificate1 = \"\",\n            cylinderno2 = \"2\",\n            cylinderSerialNo2 = \"\",\n            cylinderposition2 = \"\",\n            cylindertype2 = \"\",\n            cmanufacturer2 = \"\",\n            cmanuContact2 = \"\",\n            servicepressure2 = \"\",\n            cmanufacturedDate2 = \"\",\n            waterVolume2 = \"\",\n            cexpiryDate2 = \"\",\n            tbscertificate2 = \"\",\n            inspectorID = \"\",\n            validfrom = \"\",\n    } = reportdata;\n\n    const Default = {\n        name,\n        email,\n        phone,\n        location,\n        newInstallation,\n        periodic,\n        afterAccident,\n        ownername,\n        vihecleRegno,\n        manYear,\n        make,\n        model,\n        chasisno,\n        engineno,\n        milliege,\n        biFuel,\n        Dedicated,\n        DualFuel,\n        type,\n        manufacturer,\n        serialno,\n        installername,\n        cylinderno3,\n        cylinderposition3,\n        cylindertype3,\n        cmanufacturer3,\n        cmanuContact3,\n        servicepressure3,\n        cmanufacturedDate3,\n        waterVolume3,\n        cexpiryDate3,\n        tbscertificate3,\n        cylinderno1,\n        cylinderposition1,\n        cylindertype1,\n        cmanufacturer1,\n        cmanuContact1,\n        servicepressure1,\n        cmanufacturedDate1,\n        waterVolume1,\n        cexpiryDate1,\n        tbscertificate1,\n        cylinderno2,\n        cylinderposition2,\n        cylindertype2,\n        cmanufacturer2,\n        cmanuContact2,\n        cylinderSerialNo1,\n        cylinderSerialNo2,\n        cylinderSerialNo3,\n        servicepressure2,\n        cmanufacturedDate2,\n        waterVolume2,\n        cexpiryDate2,\n        tbscertificate2,\n        validfrom,\n    };\n\n    const steps = [\n        { id: \"Owner\" },\n        { id: \"Inspection-type\" },\n        { id: \"Vehicle-information\" },\n        { id: \"Vehicle-informationCont\" },\n        { id: \"Type-of-ngv\" },\n        { id: \"Conversion-kit-information\" },\n        { id: \"Cng-cylinders-information\" },\n        { id: \"Cng-cylinders-informationCont\" },\n        { id: \"preview\" },\n    ];\n    const [formData, setForm] = useForm(Default);\n    const { step, navigation } = useStep({ steps, initialStep: 0 });\n    const props = { formData, setForm, navigation };\n\n    switch (step.id) {\n        case \"Owner\":\n            return ( <\n                Grid container justify = \"center\"\n                direction = \"column\"\n                alignContent = \"center\"\n                style = {\n                    { height: \"100hv\", border: \"3px\", boxSizing: \"border-box\" } } >\n                <\n                Owner {...props }\n                />{\" \"} <\n                /Grid>\n            );\n\n        case \"Inspection-type\":\n            return ( <\n                Grid container justify = \"center\"\n                direction = \"column\"\n                alignContent = \"center\"\n                style = {\n                    {\n                        height: \"100hv\",\n                        border: \"3px\",\n                        boxSizing: \"border-box\",\n                        paddingTop: \"40px\",\n                    }\n                } >\n                <\n                InspectionForm {...props }\n                />{\" \"} <\n                /Grid>\n            );\n        case \"Vehicle-information\":\n            return ( <\n                Grid container justify = \"center\"\n                direction = \"column\"\n                alignContent = \"center\"\n                style = {\n                    {\n                        height: \"100hv\",\n                        border: \"9px\",\n                        boxSizing: \"border-box\",\n                        paddingTop: \"40px\",\n                    }\n                } >\n                <\n                VehicleInfo {...props }\n                />{\" \"} <\n                /Grid>\n            );\n        case \"Vehicle-informationCont\":\n            return ( <\n                Grid container justify = \"center\"\n                direction = \"column\"\n                alignContent = \"center\"\n                style = {\n                    {\n                        height: \"100hv\",\n                        border: \"3px\",\n                        boxSizing: \"border-box\",\n                        paddingTop: \"40px\",\n                    }\n                } >\n                <\n                VehicleInfoCont {...props }\n                />{\" \"} <\n                /Grid>\n            );\n        case \"Type-of-ngv\":\n            return ( <\n                Grid container justify = \"center\"\n                direction = \"column\"\n                alignContent = \"center\"\n                style = {\n                    {\n                        height: \"100hv\",\n                        border: \"3px\",\n                        boxSizing: \"border-box\",\n                        paddingTop: \"40px\",\n                    }\n                } >\n                <\n                EngineType {...props }\n                />{\" \"} <\n                /Grid>\n            );\n        case \"Conversion-kit-information\":\n            return ( <\n                Grid container justify = \"center\"\n                direction = \"column\"\n                alignContent = \"center\"\n                style = {\n                    {\n                        height: \"100hv\",\n                        border: \"3px\",\n                        boxSizing: \"border-box\",\n                        paddingTop: \"40px\",\n                    }\n                } >\n                <\n                ConversionKitInfo {...props }\n                />{\" \"} <\n                /Grid>\n            );\n        case \"Cng-cylinders-information\":\n            return ( <\n                Grid container justify = \"center\"\n                direction = \"column\"\n                alignContent = \"center\"\n                style = {\n                    {\n                        height: \"100hv\",\n                        border: \"3px\",\n                        boxSizing: \"border-box\",\n                    }\n                } >\n                <\n                CgnCylinderInfo {...props }\n                />{\" \"} <\n                /Grid>\n            );\n        case \"Cng-cylinders-informationCont\":\n            return ( <\n                Grid container justify = \"center\"\n                direction = \"column\"\n                alignContent = \"center\"\n                style = {\n                    {\n                        height: \"100hv\",\n                        border: \"3px\",\n                        boxSizing: \"border-box\",\n                    }\n                } >\n                <\n                CgnCylinderInfoCont {...props }\n                />{\" \"} <\n                /Grid>\n            );\n        case \"preview\":\n            return ( <\n                Box p = { 5 }\n                style = {\n                    {\n                        border: \"3px\",\n                        boxSizing: \"border-box\",\n                        maxHeight: \"550px\",\n                        overflowY: \"auto\",\n                    }\n                } >\n                <\n                Preview {...props }\n                />{\" \"} <\n                /Box>\n            );\n    }\n\n    return <div > < /div>;\n}\nconst MapStateToprops = (store) => {\n    return {...store };\n};\nexport default connect(MapStateToprops)(Index);","/home/support1/gas_inspection_portal/src/components/Dash_board/Team/Regteam.js",["377","378","379","380","381"],"import React, { useRef, useState, useEffect } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport { useToasts } from \"react-toast-notifications\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Spinner from \"../../Spinner/Spiner\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { connect } from \"react-redux\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { ADD_USER, EXIT_ADD_FORM } from \"../../../actions\";\nimport { addUser } from \"../../../client/client\";\n\nconst spinerStyle = {\n  display: \"flex\",\n  flexDirection: \"rows\",\n  gap: \"12px\",\n};\n\nfunction Regteam({ adduser, teamdata, dispatch }) {\n  const style = { display: \"flex\", flexDirection: \"row\", fontWeight: \"bold\" };\n  const [cng, setCng] = useState(\"\");\n  const [open, setOpen] = React.useState(false);\n  const { addToast } = useToasts();\n  const [loading, setLoading] = useState(false);\n  const formref = useRef();\n  const fsname = useRef(\"\");\n  const lsname = useRef(\"\");\n  const usrphone = useRef(\"\");\n  const email = useRef(\"\");\n  const signature = useRef(\"\");\n  const pass = useRef(\"\");\n\n  const {\n    fname = \"\",\n    lname = \"\",\n    usphone = \"\",\n    usremail = \"\",\n    usrcng = \"\",\n    usrpass = \"\",\n  } = teamdata;\n  const handleChange = (event) => {\n    setCng(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  async function handlesave() {\n    try {\n      setLoading(true);\n      // formref.current.reset();\n      let response = await addUser({\n        firstname: fsname.current.value,\n        lastname: lsname.current.value,\n        email: email.current.value,\n        username: email.current.value,\n        signature: cng,\n        phone: usrphone.current.value,\n        password: pass.current.value,\n      });\n\n      if (response) {\n        setLoading(false);\n        addToast(\" User Added successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n        window.location.replace(`/dashboard/team`);\n        return;\n      }\n      setLoading(false);\n      addToast(\"Updates saved!\", { appearance: \"warning\" });\n    } catch (error) {\n      setLoading(false);\n      addToast(\"Failed\", { appearance: \"error\" });\n    }\n  }\n\n  return (\n    <Card\n      variant=\"outlined \"\n      style={{\n        marginTop: \"30px\",\n        position: \"absolute\",\n        left: \"50%\",\n        top: \"50%\",\n        fontFamily: \"sans-serif\",\n        transform: \"translate(-50%, -50%)\",\n        width: \"35%\",\n        minWidth: \"300px\",\n        zIndex: \"1\",\n        height: \"auto\",\n        borderRadius: \"16px\",\n        marginBottom: \"20px !important\",\n        maxWidth: 300,\n        padding: \"20px\",\n        borderRadius: \"16px\",\n        transition: \"0.3s\",\n        boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n        \"&:hover\": {\n          boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n        },\n      }}\n    >\n      {\" \"}\n      <TextField\n        label=\"First Name \"\n        margin=\"normal\"\n        inputRef={fsname}\n        variant=\"outlined\"\n        autoComplete=\"off\"\n        fullWidth\n        ref={formref}\n        defaultValue={fname}\n      />{\" \"}\n      <TextField\n        label=\"Last Name \"\n        margin=\"normal\"\n        inputRef={lsname}\n        variant=\"outlined\"\n        autoComplete=\"off\"\n        fullWidth\n        defaultValue={lname}\n        ref={formref}\n      />{\" \"}\n      <TextField\n        label=\"Phone\"\n        margin=\"normal\"\n        inputRef={usrphone}\n        variant=\"outlined\"\n        autoComplete=\"off\"\n        fullWidth\n        ref={formref}\n        defaultValue={usphone}\n      />{\" \"}\n      <TextField\n        label=\"Email\"\n        margin=\"normal\"\n        inputRef={email}\n        variant=\"outlined\"\n        autoComplete=\"off\"\n        fullWidth\n        defaultValue={usremail}\n        ref={formref}\n      />{\" \"}\n      <TextField\n        label=\"Password\"\n        margin=\"normal\"\n        inputRef={pass}\n        variant=\"outlined\"\n        autoComplete=\"off\"\n        fullWidth\n        defaultValue={usrpass}\n        ref={formref}\n      />{\" \"}\n      <InputLabel id=\"label\"> CNG - FSI </InputLabel>{\" \"}\n      <Select\n        labelId=\"label\"\n        id=\"select\"\n        open={open}\n        onClose={handleClose}\n        onOpen={handleOpen}\n        value={cng}\n        onChange={handleChange}\n        defaultValue={usrcng}\n        ref={formref}\n      >\n        <MenuItem value=\"majengo\"> Majengo </MenuItem>{\" \"}\n        <MenuItem value=\"masaka\"> Masaka </MenuItem>{\" \"}\n        <MenuItem value=\"rajabu\"> Rajabu </MenuItem>{\" \"}\n      </Select>{\" \"}\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          gap: \"10px\",\n        }}\n      >\n        {\" \"}\n        <Button\n          variant=\"contained\"\n          width=\"sm\"\n          color=\"primary\"\n          style={{ marginTop: \"1rem\" }}\n          onClick={handlesave}\n        >\n          {loading ? (\n            <div style={spinerStyle}>\n              <Spinner loading={loading} /> Loading...{\" \"}\n            </div>\n          ) : (\n            \"Save\"\n          )}{\" \"}\n        </Button>{\" \"}\n        <Button\n          variant=\"contained\"\n          width=\"sm\"\n          style={{ marginTop: \"1rem\" }}\n          onClick={() => dispatch({ type: EXIT_ADD_FORM })}\n        >\n          Close{\" \"}\n        </Button>{\" \"}\n      </div>{\" \"}\n      <h4> </h4>{\" \"}\n    </Card>\n  );\n}\nconst MapStateToprops = (store) => {\n  return { ...store };\n};\n\nexport default connect(MapStateToprops)(Regteam);\n","/home/support1/gas_inspection_portal/src/components/Dash_board/Report/View.js",["382","383","384","385","386","387","388"],"import React, { PureComponent } from \"react\";\nimport Pdf from \"../Printform/Printform\";\nimport Button from \"@material-ui/core/Button\";\nimport ReactToPrint from \"react-to-print\";\nimport { Link, useHistory, withRouter } from \"react-router-dom\";\n\nconst viewpdf = {};\nconst actions = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  gap: \"30px\",\n  justifyContent: \"center\",\n  marginBottom: \"20px\",\n};\n\nconst thStyle = {\n  fontFamily: \"Anton\",\n  fontWeight: \"normal\",\n  fontStyle: \"normal\",\n};\n\n// export const Componet = withRouter(({ history, location }) => {});\n\nclass ComponentToPrint extends React.Component {\n  render() {\n    return <Pdf />;\n  }\n}\n\nclass Example extends PureComponent {\n  render() {\n    const { history, location } = this.props;\n    return (\n      <div>\n        <ComponentToPrint ref={(el) => (this.componentRef = el)} />\n        <div style={actions}>\n          <ReactToPrint\n            trigger={() => (\n              <Button\n                variant=\"contained\"\n                width=\"sm\"\n                color=\"primary\"\n                style={{ marginTop: \"1rem\", paddingLeft: \"0px\" }}\n              >\n                Print\n              </Button>\n            )}\n            content={() => this.componentRef}\n          />\n          <Button\n            variant=\"contained\"\n            width=\"sm\"\n            color=\"primary\"\n            style={{ marginTop: \"1rem\", paddingLeft: \"0px\" }}\n            onClick={() => {\n              window.location.replace(\"/dashboard/reports\");\n            }}\n          >\n            Back\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Example;\n","/home/support1/gas_inspection_portal/src/components/Dash_board/Menubar/sidebarData.js",[],"/home/support1/gas_inspection_portal/src/components/Dash_board/Team/Table/Table.js",["389","390","391","392","393","394","395","396","397","398","399","400","401"],"import React, {\n  useCallback,\n  useMemo,\n  useEffect,\n  useState,\n  useRef,\n} from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { FaEye, FaRegEye, FaTrash, FaPrint } from \"react-icons/fa\";\nimport { ImPencil } from \"react-icons/im\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Pagination from \"react-bootstrap/Pagination\";\nimport { useGet, useGetList } from \"../../../../hooks/index\";\nimport { connect } from \"react-redux\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Button from \"@material-ui/core/Button\";\nimport { getUsers, deleteUser } from \"../../../../client/client\";\nimport {\n  ADD_USER,\n  SAVE_PROFILE_DATA,\n  CLEAR_PROFILE_DATA,\n} from \"../../../../actions\";\nimport \"./tableteam.css\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nfunction BasicTable({ adduser, dispatch }) {\n  const { results: rows, loading, refresh } = useGetList(getUsers);\n  const { addToast } = useToasts();\n  const [loadingdel, setLoadingdel] = useState(false);\n\n  const Actions = useCallback(\n    (row) => (\n      <div\n        style={{\n          marginTop: \"30px\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          gap: \"15px\",\n          paddingRight: \"40px\",\n        }}\n      >\n        <Link>\n          {\" \"}\n          <ImPencil\n            className=\"IconStyle\"\n            onClick={() => {\n              dispatch({ type: SAVE_PROFILE_DATA, payload: row });\n              dispatch({ type: ADD_USER });\n            }}\n          />\n        </Link>\n\n        <FaTrash\n          id=\"trash\"\n          className=\"IconStyle\"\n          onClick={() => {\n            handledelete(row);\n          }}\n        />\n      </div>\n    ),\n    []\n  );\n  let history = useHistory();\n  const columns = [\n    { label: \"First name\", show: true, name: \"first_name\" },\n    { label: \"Last name\", show: true, name: \"last_name\" },\n    { label: \"Phone \", show: true, name: \"phone\" },\n    { label: \"Email\", show: true, name: \"email\" },\n    { label: \"Role\", show: true, name: \"userRole\" },\n    { label: \"Signature \", show: true, name: \"signature\" },\n    { name: \"formatter\", label: \"Actions\", show: true, formatter: Actions },\n  ];\n\n  const classes = useStyles();\n  const handleAdduser = () => {\n    dispatch({ type: CLEAR_PROFILE_DATA });\n    dispatch({ type: ADD_USER });\n  };\n\n  async function handledelete(row) {\n    const { id } = row;\n    try {\n      setLoadingdel(true);\n      let response = await deleteUser(id);\n\n      if (response) {\n        setLoadingdel(false);\n        addToast(\"deleted successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n        window.location.replace(\"/dashboard/team\");\n        return;\n      }\n      setLoadingdel(false);\n      addToast(\"Wrong Credentials!\", { appearance: \"error\" });\n    } catch (error) {\n      setLoadingdel(false);\n      addToast(\"Failed\", { appearance: \"error\" });\n    }\n  }\n\n  return (\n    <div className=\"table-wrapper\">\n      <div style={{ textAlign: \"center\" }}>TEAM</div>\n\n      <TableContainer\n        component={Paper}\n        style={{\n          border: \"none\",\n        }}\n      >\n        <Table\n          className={classes.table}\n          aria-label=\"simple table\"\n          style={{\n            border: \"none\",\n            padding: \"auto\",\n          }}\n        >\n          <TableHead style={{ background: \"rgb(241, 239, 239)\" }}>\n            <TableRow>\n              <TableCell></TableCell>\n              {columns.map((th) => (\n                <TableCell>{th.label}</TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row, index) => (\n              <TableRow key={row.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {index + 1}\n                </TableCell>\n                {columns.map((column) => {\n                  if (column.show == false) {\n                    return null;\n                  }\n                  if (column.name == \"formatter\") {\n                    return <TableCell>{column.formatter(row)}</TableCell>;\n                  }\n                  return (\n                    <TableCell style={{ border: \"none !important\" }}>\n                      {row[column.name] || \"N/A\"}\n                    </TableCell>\n                  );\n                })}\n              </TableRow>\n            ))}\n          </TableBody>\n          <caption>\n            <div style={{ float: \"right\", marginRight: \"50px\" }}>\n              <Pagination\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  textDecoration: \"none !important\",\n                }}\n              >\n                <Button\n                  variant=\"text\"\n                  style={{ marginRight: \"10px\", fontSize: \"12px\" }}\n                  onClick={() => history.push(\"/dashboard/\")}\n                >\n                  Close{\" \"}\n                </Button>{\" \"}\n                <AddIcon className=\"plus\" onClick={handleAdduser} />\n                <Pagination.First onClick={() => \"\"} disabled={true} />\n                <Pagination.Prev\n                  onClick={() => \"goToPage(currentPage - 1)\"}\n                  disabled={true}\n                />\n                <Pagination.Next\n                  onClick={() => \" goToPage(currentPage + 1)\"}\n                  disabled={true}\n                />\n                <Pagination.Last onClick={() => \"goToPage(pages)\"} />\n              </Pagination>\n            </div>\n          </caption>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\nconst MapStateToprops = (store) => {\n  return { ...store };\n};\nexport default connect(MapStateToprops)(BasicTable);\n","/home/support1/gas_inspection_portal/src/components/Spinner/Spiner.js",["402"],"import React from \"react\";\nimport { useState } from \"react\";\nimport { css } from \"@emotion/core\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\n// Can be a string as well. Need to ensure each key-value pair ends with ;\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: #fff;\n`;\n\nfunction Spiner({ loading }) {\n  let [color, setColor] = useState(\"#ffffff\");\n\n  return (\n    <div className=\"\">\n      <ClipLoader color={color} loading={loading} css={override} size={25} />\n    </div>\n  );\n}\n\nexport default Spiner;\n","/home/support1/gas_inspection_portal/src/components/Dash_board/Report/Table/Table.js",["403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437"],"import React, {\n  useCallback,\n  useMemo,\n  useEffect,\n  useState,\n  useRef,\n} from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport { useToasts } from \"react-toast-notifications\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { useGet, useGetList } from \"../../../../hooks/index\";\nimport Pagination from \"react-bootstrap/Pagination\";\nimport { connect } from \"react-redux\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Breakpoint, BreakpointProvider } from \"react-socks\";\nimport {\n  getAllReports,\n  deleteReport,\n  getAllhistory,\n  deletehistory,\n} from \"../../../../client/client\";\nimport {\n  ADD_USER,\n  SAVE_REPORT_DATA,\n  CLEAR_PROFILE_DATA,\n  SHOW_HISTORY_TABLE,\n  SHOW_PDF,\n} from \"../../../../actions\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { FaEye, FaRegEye, FaTrash, FaPrint } from \"react-icons/fa\";\nimport { ImPencil } from \"react-icons/im\";\nimport Spin from \"../../../Spinner/Loader\";\nimport \"./tablereport.css\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nfunction BasicTable({ dispatch, reportdata, historytable }) {\n  const classes = useStyles();\n  const formref = useRef();\n  const fsname = useRef(\"\");\n  const [date, setDate] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [opendate, setOpendate] = useState(false);\n  const [openstatus, setOpenstatus] = useState(false);\n  const { addToast } = useToasts();\n  const [loadingdel, setLoadingdel] = useState(false);\n  const [paramsSearch, setSearch] = useState(\"\");\n  const [paramsStatus, setExpire] = useState(\"\");\n  const [paramsDate, setDateparam] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [pageNo, setPageNo] = useState(1);\n  const handleChangedate = (event) => {\n    setDate(event.target.value);\n  };\n\n  let pgno, query;\n  const params = { ...paramsDate, ...paramsSearch, ...paramsStatus, page };\n\n  if (historytable) {\n    query = getAllhistory;\n  } else {\n    query = getAllReports;\n  }\n\n  const {\n    results: historydata,\n    loading: historyloading,\n    currentPage: historycurrentPage,\n    pages: historypages,\n    havePreviousPage: historyhavePreviousPage,\n    haveNextPage: historyhaveNextPage,\n    setCurrentPage: historysetCurrentPage,\n    refresh: historyrefresh,\n  } = useGetList(getAllhistory, params);\n\n  const {\n    results: data,\n    loading,\n    currentPage,\n    pages,\n    havePreviousPage,\n    haveNextPage,\n    setCurrentPage,\n    total,\n    refresh,\n    setTotal,\n  } = useGetList(getAllReports, params);\n\n  let history = useHistory();\n  let pgn = pageNo;\n  const [rows, setRows] = useState(data);\n  const [historyrows, setHistoryRows] = useState(historydata);\n  const Actions = useCallback(\n    (row) => (\n      <div\n        style={{\n          marginTop: \"30px\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          gap: \"15px\",\n          paddingRight: \"40px\",\n        }}\n      >\n        <Link to=\"#\">\n          {\" \"}\n          <FaEye\n            className=\"IconStyle\"\n            onClick={() => {\n              dispatch({ type: SAVE_REPORT_DATA, payload: row });\n              dispatch({ type: SHOW_PDF });\n              history.push(\"/dashboard/reports/view\");\n            }}\n          />\n        </Link>\n        <Link>\n          <ImPencil\n            className=\"IconStyle\"\n            onClick={() => {\n              dispatch({ type: SAVE_REPORT_DATA, payload: row });\n              history.push(\"/dashboard/reports/edit\");\n            }}\n          />\n        </Link>\n\n        <FaTrash\n          id=\"trash\"\n          className=\"IconStyle\"\n          onClick={() => handledelete(row)}\n        />\n      </div>\n    ),\n    []\n  );\n  const Actionshistory = useCallback(\n    (row) => (\n      <div\n        style={{\n          marginTop: \"30px\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          gap: \"15px\",\n          paddingRight: \"40px\",\n        }}\n      >\n        <Link to=\"#\">\n          {\" \"}\n          <FaEye\n            className=\"IconStyle\"\n            onClick={() => {\n              dispatch({ type: SAVE_REPORT_DATA, payload: row });\n              dispatch({ type: SHOW_PDF });\n              history.push(\"/dashboard/reports/view\");\n            }}\n          />\n        </Link>\n        <FaTrash\n          id=\"trash\"\n          className=\"IconStyle\"\n          onClick={() => handledeletehistory(row)}\n        />\n      </div>\n    ),\n    []\n  );\n\n  const columns = [\n    { name: \"name\", label: \"Name\", show: true },\n    { name: \"email\", label: \"Email\", show: true },\n    { name: \"phone\", label: \"Phone\", show: true },\n    { name: \"location\", label: \"Location\", show: true },\n    { name: \"newInstallation\", label: \"New Installation\", show: true },\n    { name: \"periodic\", label: \"Periodic\", show: true },\n    { name: \"afterAccident\", label: \"After Accident\", show: true },\n    { name: \"ownername\", label: \"Owner Name\", show: true },\n    { name: \"vihecleRegno\", label: \"Vehicle Reg No\", show: true },\n    { name: \"manYear\", label: \"Manu Year\", show: true },\n    { name: \"make\", label: \"Make\", show: true },\n    { name: \"model\", label: \"Model\", show: true },\n    { name: \"chasisno\", label: \"Chasis No\", show: true },\n    { name: \"engineno\", label: \"Engine No\", show: true },\n    { name: \"milliege\", label: \"Milliege\", show: true },\n    { name: \"biFuel\", label: \"Bi Fuel\", show: true },\n    { name: \"Dedicated\", label: \"Dedicated\", show: true },\n    { name: \"DualFuel\", label: \"Dual Fuel\", show: true },\n    { name: \"type\", label: \"Type\", show: true },\n    { name: \"manufacturer\", label: \"Manufacturer\", show: true },\n    { name: \"serialno\", label: \"Serial No\", show: true },\n    { name: \"installername\", label: \"Installer name\", show: true },\n    { name: \"cylinderno1\", label: \"Cylinder No\", show: true },\n    { name: \"cylinderSerialNo1\", label: \"Cylinder Serial No\", show: true },\n    { name: \"cylinderposition1\", label: \"Cylinder Position\", show: true },\n    { name: \"cylindertype1\", label: \"Cylinder Type\", show: true },\n    { name: \"cmanufacturer1\", label: \"Cylinder manu\", show: true },\n    { name: \"cmanuContact1\", label: \"Cylinder Contact\", show: true },\n    { name: \"servicepressure1\", label: \"Service Pressure\", show: true },\n    { name: \"cmanufacturedDate1\", label: \"Cylinder Manu date\", show: true },\n    { name: \"waterVolume1\", label: \"Water Volume\", show: true },\n    { name: \"cexpiryDate1\", label: \"Cylinder Expiry Date\", show: true },\n    { name: \"tbscertificate1\", label: \"Tbs Certificate\", show: true },\n    { name: \"cylinderno2\", label: \"Cylinder No\", show: true },\n    { name: \"cylinderSerialNo2\", label: \"Cylinder Serial No\", show: true },\n    { name: \"cylinderposition2\", label: \"Cylinder position\", show: true },\n    { name: \"cylindertype2\", label: \"Cylinder type\", show: true },\n    { name: \"cmanufacturer2\", label: \"cylinder manufacturer\", show: true },\n    { name: \"cmanuContact2\", label: \"Cylinder Contact\", show: true },\n    { name: \"servicepressure2\", label: \"Service Pressure\", show: true },\n    { name: \"cmanufacturedDate2\", label: \"Cylinder Manufcturer\", show: true },\n    { name: \"waterVolume2\", label: \"Water Volume\", show: true },\n    { name: \"cexpiryDate2\", label: \"Cylinder Expiry Date\", show: true },\n    { name: \"tbscertificate2\", label: \"Tbs Certificate\", show: true },\n    { name: \"cylinderno3\", label: \"Cylinder No\", show: true },\n    { name: \"cylinderSerialNo3\", label: \"Cylinder Serial No\", show: true },\n    { name: \"cylinderposition3\", label: \"Cylinder position\", show: true },\n    { name: \"cylindertype3\", label: \"Cylinder Type\", show: true },\n    { name: \"cmanufacturer3\", label: \"Cylinder Manufacturer\", show: true },\n    { name: \"cmanuContact3\", label: \"Cylinder Manu Contact\", show: true },\n    { name: \"servicepressure3\", label: \"Service Pressure\", show: true },\n    { name: \"cmanufacturedDate3\", label: \"Cylinder manu date\", show: true },\n    { name: \"waterVolume3\", label: \"Water Vol\", show: true },\n    { name: \"cexpiryDate3\", label: \"Expiry Date\", show: true },\n    { name: \"tbscertificate3\", label: \"Tbs Certicicate\", show: true },\n    { name: \"inspectorID\", label: \"Inspector Name\", show: true },\n    {\n      name: \"formatter\",\n      label: \"Actions\",\n      show: true,\n      formatter: !historytable ? Actions : Actionshistory,\n    },\n  ];\n\n  const handleClosedate = () => {\n    setOpendate(false);\n  };\n\n  const handleOpendate = () => {\n    setOpendate(true);\n  };\n  //..\n  const handleChangestatus = (event) => {\n    setStatus(event.target.value);\n  };\n\n  const handleClosestatus = () => {\n    setOpenstatus(false);\n  };\n\n  const handleOpenstatus = () => {\n    setOpenstatus(true);\n  };\n\n  useEffect(() => {\n    const search = async () => {\n      setLoadingdel(true);\n      let res;\n      if (historytable) {\n        res = await getAllhistory(params);\n      } else {\n        res = await getAllReports(params);\n      }\n\n      setLoadingdel(false);\n      if (historytable) {\n        setHistoryRows(res.data);\n      } else {\n        setRows(res.data);\n        setTotal(res.total);\n      }\n    };\n\n    search();\n  }, [paramsDate, paramsSearch, paramsStatus, page, historytable]);\n\n  async function handledelete(row) {\n    const { id } = row;\n    try {\n      setLoadingdel(true);\n      let response;\n      response = await deleteReport(id);\n      if (response) {\n        setLoadingdel(false);\n        addToast(\"deleted successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n        if (historytable && response) {\n          return;\n        }\n        window.location.replace(\"/dashboard/reports\");\n        return;\n      }\n      setLoadingdel(false);\n      addToast(\"Wrong Credentials!\", { appearance: \"error\" });\n    } catch (error) {\n      setLoadingdel(false);\n      addToast(\"Failed\", { appearance: \"error\" });\n    }\n  }\n  async function handledeletehistory(row) {\n    const { id } = row;\n    try {\n      setLoadingdel(true);\n      let response;\n      response = await deletehistory(id);\n      if (response) {\n        setLoadingdel(false);\n        addToast(\"deleted successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n\n        dispatch({ type: SHOW_HISTORY_TABLE, payload: false });\n        dispatch({ type: SHOW_HISTORY_TABLE, payload: true });\n\n        return;\n      }\n      setLoadingdel(false);\n      addToast(\"Wrong Credentials!\", { appearance: \"error\" });\n    } catch (error) {\n      setLoadingdel(false);\n      addToast(\"Failed\", { appearance: \"error\" });\n    }\n  }\n  return (\n    <div className=\"table-wrapper\">\n      <div style={{ textAlign: \"center\", padding: \"15px\" }}>\n        {historytable ? \"HISTORY \" : \"REPORTS\"}\n      </div>\n\n      <Breakpoint small down>\n        <div\n          style={{\n            height: \"fit-content\",\n            marginBottom: \"30px\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            gap: \"30px\",\n          }}\n        >\n          <TextField\n            id=\"search\"\n            style={{\n              height: \"10px !important\",\n              margin: \"auto\",\n              variant: \"contained\",\n              width: \"300px\",\n            }}\n            label=\"Search Cylinder Serial No \"\n            margin=\"normal\"\n            onChange={(e) => {\n              setLoadingdel(true);\n              setSearch({ q: e.target.value });\n            }}\n            variant=\"outlined\"\n            autoComplete=\"off\"\n            width=\"sm\"\n          />{\" \"}\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              margin: \"auto\",\n              gap: \"5px\",\n              border: \"1px solid grey\",\n              width: \"300px\",\n              height: \"50px\",\n            }}\n          >\n            {\" \"}\n            <InputLabel style={{ padding: \"15px\" }} id=\"label\">\n              Filter By Date\n            </InputLabel>\n            <Select\n              labelId=\"label\"\n              id=\"selectdate\"\n              open={opendate}\n              onClose={handleClosedate}\n              onOpen={handleOpendate}\n              onChange={(e) => setDateparam({ day: e.target.value })}\n            >\n              <MenuItem value=\"day\">Today</MenuItem>\n              <MenuItem value=\"week\">This week</MenuItem>\n              <MenuItem value=\"month\">This month</MenuItem>\n            </Select>\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              border: \"1px solid grey\",\n              width: \"300px\",\n              height: \"50px\",\n              margin: \"auto\",\n              gap: \"30px\",\n            }}\n          >\n            {\" \"}\n            <InputLabel style={{ padding: \"15px\" }} id=\"label\">\n              Filter By Cylinder Status\n            </InputLabel>\n            <Select\n              labelId=\"label\"\n              id=\"selectstatus\"\n              open={openstatus}\n              onClose={handleClosestatus}\n              onOpen={handleOpenstatus}\n              onChange={(e) => setExpire({ status: e.target.value })}\n            >\n              <MenuItem value=\"expired\">Expired</MenuItem>\n              <MenuItem value=\"notexpired\">Not expired</MenuItem>\n            </Select>\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              width: \"fit-content\",\n              margin: \"auto\",\n              gap: \"20px\",\n              height: \"50px\",\n            }}\n          >\n            {!historytable ? (\n              <InputLabel\n                textAlign=\"center\"\n                className=\"switchlabel\"\n                style={{ paddingTop: \"3px\" }}\n                id=\"switchlabel\"\n                onClick={() => dispatch({ type: SHOW_HISTORY_TABLE })}\n              >\n                Switch to History\n              </InputLabel>\n            ) : (\n              <InputLabel\n                className=\"switchlabel\"\n                style={{ paddingTop: \"3px\" }}\n                id=\"switchlabel\"\n                onClick={() => dispatch({ type: SHOW_HISTORY_TABLE })}\n              >\n                Switch to Reports\n              </InputLabel>\n            )}\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              margin: \"auto\",\n              width: \"fit-content\",\n              gap: \"20px\",\n            }}\n          >\n            {!historytable && (\n              <InputLabel style={{ paddingTop: \"3px\" }} id=\"label\">\n                Total number : <span style={{ color: \"black\" }}>{total}</span>\n              </InputLabel>\n            )}\n          </div>\n        </div>\n      </Breakpoint>\n      <Breakpoint medium up>\n        <div\n          style={{\n            height: \"50px\",\n            width: \"100%\",\n            marginBottom: \"30px\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            gap: \"30px\",\n          }}\n        >\n          <TextField\n            id=\"search\"\n            style={{ height: \"10px !important\", marginLeft: \"20px\" }}\n            label=\"Search Cylinder Serial No \"\n            margin=\"normal\"\n            onChange={(e) => {\n              setLoadingdel(true);\n              setSearch({ q: e.target.value });\n            }}\n            variant=\"outlined\"\n            autoComplete=\"off\"\n            width=\"sm\"\n          />{\" \"}\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              marginTop: \"35px\",\n              gap: \"20px\",\n            }}\n          >\n            {\" \"}\n            <InputLabel style={{ paddingTop: \"3px\" }} id=\"label\">\n              Filter By Date\n            </InputLabel>\n            <Select\n              labelId=\"label\"\n              id=\"selectdate\"\n              open={opendate}\n              onClose={handleClosedate}\n              onOpen={handleOpendate}\n              onChange={(e) => setDateparam({ day: e.target.value })}\n            >\n              <MenuItem value=\"day\">Today</MenuItem>\n              <MenuItem value=\"week\">This week</MenuItem>\n              <MenuItem value=\"month\">This month</MenuItem>\n            </Select>\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              marginTop: \"35px\",\n              gap: \"20px\",\n            }}\n          >\n            {\" \"}\n            <InputLabel style={{ paddingTop: \"3px\" }} id=\"label\">\n              Filter By Cylinder Status\n            </InputLabel>\n            <Select\n              labelId=\"label\"\n              id=\"selectstatus\"\n              open={openstatus}\n              onClose={handleClosestatus}\n              onOpen={handleOpenstatus}\n              onChange={(e) => setExpire({ status: e.target.value })}\n            >\n              <MenuItem value=\"expired\">Expired</MenuItem>\n              <MenuItem value=\"notexpired\">Not expired</MenuItem>\n            </Select>\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              marginTop: \"35px\",\n              gap: \"20px\",\n            }}\n          >\n            {!historytable ? (\n              <InputLabel\n                className=\"switchlabel\"\n                style={{ paddingTop: \"3px\" }}\n                id=\"switchlabel\"\n                onClick={() => dispatch({ type: SHOW_HISTORY_TABLE })}\n              >\n                Switch to History\n              </InputLabel>\n            ) : (\n              <InputLabel\n                className=\"switchlabel\"\n                style={{ paddingTop: \"3px\" }}\n                id=\"switchlabel\"\n                onClick={() => dispatch({ type: SHOW_HISTORY_TABLE })}\n              >\n                Switch to Reports\n              </InputLabel>\n            )}\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              marginTop: \"35px\",\n              gap: \"20px\",\n            }}\n          >\n            {!historytable && (\n              <InputLabel style={{ paddingTop: \"3px\" }} id=\"label\">\n                Total number : <span style={{ color: \"black\" }}>{total}</span>\n              </InputLabel>\n            )}\n          </div>\n        </div>\n      </Breakpoint>\n      <TableContainer\n        component={Paper}\n        style={{\n          border: \"none !important\",\n        }}\n      >\n        {historytable ? (\n          <Table\n            id=\"repotable\"\n            className={classes.table}\n            aria-label=\"simple table\"\n            style={{\n              border: \"none !important\",\n              padding: \"auto\",\n            }}\n          >\n            <TableHead\n              style={{\n                background: \"rgb(241, 239, 239)\",\n                border: \"none !important\",\n              }}\n            >\n              <TableRow\n                style={{\n                  border: \"none !important\",\n                  height: \"10px !important\",\n                  fontSize: \"8px !important\",\n                }}\n              >\n                <TableCell\n                  style={{\n                    border: \"none !important\",\n                    height: \"10px !important\",\n                    fontSize: \"8px !important\",\n                  }}\n                ></TableCell>\n                {columns.map((th) => (\n                  <TableCell style={{ border: \"none !important\" }}>\n                    {th.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody style={{ border: \"none !important\" }}>\n              {!loading ? (\n                historyrows.map((row, index) => {\n                  return (\n                    <TableRow\n                      key={row.id}\n                      style={{ border: \"none !important\" }}\n                    >\n                      <TableCell\n                        component=\"th\"\n                        scope=\"row\"\n                        style={{ border: \"none !important\" }}\n                      >\n                        <span> {pgn++}</span>\n                      </TableCell>\n                      {columns.map((column) => {\n                        if (column.show == false) {\n                          return null;\n                        }\n                        if (column.name == \"formatter\") {\n                          return <TableCell>{column.formatter(row)}</TableCell>;\n                        }\n\n                        return (\n                          <TableCell style={{ border: \"none !important\" }}>\n                            {row[column.name] || \"N/A\"}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })\n              ) : (\n                <div\n                  style={{\n                    position: \"fixed\",\n                    top: \"50%\",\n                    zIndex: \"4\",\n                    left: \"50%\",\n                  }}\n                >\n                  <Spin />\n                </div>\n              )}\n            </TableBody>\n            <caption>\n              <div style={{ float: \"left\", marginLeft: \"50px\" }}>\n                <Pagination\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    textDecoration: \"none !important\",\n                  }}\n                >\n                  <Button\n                    variant=\"text\"\n                    style={{ marginRight: \"2px\", fontSize: \"12px\" }}\n                    onClick={() => window.location.replace(\"/dashboard\")}\n                  >\n                    Close{\" \"}\n                  </Button>{\" \"}\n                  <Pagination.First\n                    onClick={() => setPage(1)}\n                    disabled={true}\n                  />\n                  <Pagination.Prev\n                    onClick={() => {\n                      setPage(page - 1);\n                      setPageNo(pageNo - 10);\n                    }}\n                    disabled={page > 1 ? false : true}\n                  />\n                  <Pagination.Next\n                    onClick={() => {\n                      setPage(page + 1);\n                      setPageNo(pageNo + 10);\n                    }}\n                    disabled={historypages > page ? false : true}\n                  />\n                  <Pagination.Last\n                    onClick={() => setPage(pages)}\n                    disabled={historypages > page ? false : true}\n                  />\n                </Pagination>\n              </div>\n            </caption>\n          </Table>\n        ) : (\n          <Table\n            id=\"repotable\"\n            className={classes.table}\n            aria-label=\"simple table\"\n            style={{\n              border: \"none !important\",\n              padding: \"auto\",\n            }}\n          >\n            <TableHead\n              style={{\n                background: \"rgb(241, 239, 239)\",\n                border: \"none !important\",\n              }}\n            >\n              <TableRow\n                style={{\n                  border: \"none !important\",\n                  height: \"10px !important\",\n                  fontSize: \"8px !important\",\n                }}\n              >\n                <TableCell\n                  style={{\n                    border: \"none !important\",\n                    height: \"10px !important\",\n                    fontSize: \"8px !important\",\n                  }}\n                ></TableCell>\n                {columns.map((th) => (\n                  <TableCell style={{ border: \"none !important\" }}>\n                    {th.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody style={{ border: \"none !important\" }}>\n              {!loading ? (\n                rows.map((row, index) => {\n                  return (\n                    <TableRow\n                      key={row.id}\n                      style={{ border: \"none !important\" }}\n                    >\n                      <TableCell\n                        component=\"th\"\n                        scope=\"row\"\n                        style={{ border: \"none !important\" }}\n                      >\n                        <span> {pgn++}</span>\n                      </TableCell>\n                      {columns.map((column) => {\n                        if (column.show == false) {\n                          return null;\n                        }\n                        if (column.name == \"formatter\") {\n                          return <TableCell>{column.formatter(row)}</TableCell>;\n                        }\n\n                        return (\n                          <TableCell style={{ border: \"none !important\" }}>\n                            {row[column.name] || \"N/A\"}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })\n              ) : (\n                <div\n                  style={{\n                    position: \"fixed\",\n                    top: \"50%\",\n                    zIndex: \"4\",\n                    left: \"50%\",\n                  }}\n                >\n                  <Spin />\n                </div>\n              )}\n            </TableBody>\n            <caption>\n              <div style={{ float: \"left\", marginLeft: \"50px\" }}>\n                <Pagination\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    textDecoration: \"none !important\",\n                  }}\n                >\n                  <Button\n                    variant=\"text\"\n                    style={{ marginRight: \"2px\", fontSize: \"12px\" }}\n                    onClick={() => window.location.replace(\"/dashboard\")}\n                  >\n                    Close{\" \"}\n                  </Button>{\" \"}\n                  <Pagination.First\n                    onClick={() => setPage(1)}\n                    disabled={true}\n                  />\n                  <Pagination.Prev\n                    onClick={() => {\n                      setPage(page - 1);\n                      setPageNo(pageNo - 10);\n                    }}\n                    disabled={page > 1 ? false : true}\n                  />\n                  <Pagination.Next\n                    onClick={() => {\n                      setPage(page + 1);\n                      setPageNo(pageNo + 10);\n                    }}\n                    disabled={pages > page ? false : true}\n                  />\n                  <Pagination.Last\n                    onClick={() => setPage(pages)}\n                    disabled={pages > page ? false : true}\n                  />\n                </Pagination>\n              </div>\n            </caption>\n          </Table>\n        )}{\" \"}\n      </TableContainer>\n    </div>\n  );\n}\nconst MapStateToprops = (store) => {\n  return { ...store };\n};\nexport default connect(MapStateToprops)(BasicTable);\n","/home/support1/gas_inspection_portal/src/components/Dash_board/Report/Registration/index.js",["438","439","440","441"],"import React from \"react\";\nimport { useForm, useStep } from \"react-hooks-helper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Owner from \"./Owner\";\nimport { connect } from \"react-redux\";\nimport InspectionForm from \"./InspectionForm\";\nimport VehicleInfo from \"./VehicleInformatin\";\nimport VehicleInfoCont from \"./VehicleInfoCont\";\nimport EngineType from \"./EngineType\";\nimport ConversionKitInfo from \"./ConversionKitInfo\";\nimport CgnCylinderInfo from \"./CgnCylinderInfo\";\nimport CgnCylinderInfoCont from \"./CgnCylinderInfoCont\";\nimport Preview from \"./Preview\";\nimport \"./reg.css\";\n\nfunction Index({ reportdata }) {\n  const {\n    id,\n    createdAt = \"\",\n    validto = \"\",\n    name = \"\",\n    email = \"\",\n    phone = \"\",\n    location = \"\",\n    newInstallation = \"...v...\",\n    periodic = \".....\",\n    afterAccident = \"....\",\n    ownername = \"\",\n    vihecleRegno = \"\",\n    manYear = \"\",\n    make = \"\",\n    model = \"\",\n    chasisno = \"\",\n    engineno = \"\",\n    milliege = \"\",\n    biFuel = \"...\",\n    Dedicated = \"...V...\",\n    DualFuel = \"....\",\n    type = \"\",\n    manufacturer = \"\",\n    serialno = \"-\",\n    installername = \"\",\n    cylinderno3 = \"3\",\n    cylinderposition3 = \"\",\n    cylinderSerialNo3 = \"\",\n    cylindertype3 = \"\",\n    cmanufacturer3 = \"\",\n    cmanuContact3 = \"\",\n    servicepressure3 = \"\",\n    cmanufacturedDate3 = \"\",\n    waterVolume3 = \"\",\n    cexpiryDate3 = \"\",\n    tbscertificate3 = \"\",\n    cylinderno1 = \"1\",\n    cylinderposition1 = \"\",\n    cylindertype1 = \"\",\n    cylinderSerialNo1 = \"\",\n    cmanufacturer1 = \"\",\n    cmanuContact1 = \"\",\n    servicepressure1 = \"\",\n    cmanufacturedDate1 = \"\",\n    waterVolume1 = \"\",\n    cexpiryDate1 = \"\",\n    tbscertificate1 = \"\",\n    cylinderno2 = \"2\",\n    cylinderSerialNo2 = \"\",\n    cylinderposition2 = \"\",\n    cylindertype2 = \"\",\n    cmanufacturer2 = \"\",\n    cmanuContact2 = \"\",\n    servicepressure2 = \"\",\n    cmanufacturedDate2 = \"\",\n    waterVolume2 = \"\",\n    cexpiryDate2 = \"\",\n    tbscertificate2 = \"\",\n    inspectorID = \"\",\n    validfrom = \"\",\n  } = reportdata;\n\n  const Default = {\n    id,\n    name,\n    email,\n    phone,\n    location,\n    newInstallation,\n    periodic,\n    afterAccident,\n    ownername,\n    vihecleRegno,\n    manYear,\n    make,\n    model,\n    chasisno,\n    engineno,\n    milliege,\n    biFuel,\n    Dedicated,\n    DualFuel,\n    type,\n    manufacturer,\n    serialno,\n    installername,\n    cylinderno3,\n    cylinderposition3,\n    cylindertype3,\n    cmanufacturer3,\n    cmanuContact3,\n    servicepressure3,\n    cmanufacturedDate3,\n    waterVolume3,\n    cexpiryDate3,\n    tbscertificate3,\n    cylinderno1,\n    cylinderposition1,\n    cylindertype1,\n    cmanufacturer1,\n    cmanuContact1,\n    servicepressure1,\n    cmanufacturedDate1,\n    waterVolume1,\n    cexpiryDate1,\n    tbscertificate1,\n    cylinderno2,\n    cylinderposition2,\n    cylindertype2,\n    cmanufacturer2,\n    cmanuContact2,\n    cylinderSerialNo1,\n    cylinderSerialNo2,\n    cylinderSerialNo3,\n    servicepressure2,\n    cmanufacturedDate2,\n    waterVolume2,\n    cexpiryDate2,\n    tbscertificate2,\n    validfrom,\n  };\n\n  const steps = [\n    { id: \"Owner\" },\n    { id: \"Inspection-type\" },\n    { id: \"Vehicle-information\" },\n    { id: \"Vehicle-informationCont\" },\n    { id: \"Type-of-ngv\" },\n    { id: \"Conversion-kit-information\" },\n    { id: \"Cng-cylinders-information\" },\n    { id: \"Cng-cylinders-informationCont\" },\n    { id: \"preview\" },\n  ];\n  const [formData, setForm] = useForm(Default);\n  const { step, navigation } = useStep({ steps, initialStep: 0 });\n  const props = { formData, setForm, navigation };\n\n  switch (step.id) {\n    case \"Owner\":\n      return (\n        <Grid\n          container\n          justify=\"center\"\n          direction=\"column\"\n          alignContent=\"center\"\n          style={{ height: \"100hv\", border: \"3px\", boxSizing: \"border-box\" }}\n        >\n          <Owner {...props} />{\" \"}\n        </Grid>\n      );\n\n    case \"Inspection-type\":\n      return (\n        <Grid\n          container\n          justify=\"center\"\n          direction=\"column\"\n          alignContent=\"center\"\n          style={{\n            height: \"100hv\",\n            border: \"3px\",\n            boxSizing: \"border-box\",\n            paddingTop: \"40px\",\n          }}\n        >\n          <InspectionForm {...props} />{\" \"}\n        </Grid>\n      );\n    case \"Vehicle-information\":\n      return (\n        <Grid\n          container\n          justify=\"center\"\n          direction=\"column\"\n          alignContent=\"center\"\n          style={{\n            height: \"100hv\",\n            border: \"9px\",\n            boxSizing: \"border-box\",\n            paddingTop: \"40px\",\n          }}\n        >\n          <VehicleInfo {...props} />{\" \"}\n        </Grid>\n      );\n    case \"Vehicle-informationCont\":\n      return (\n        <Grid\n          container\n          justify=\"center\"\n          direction=\"column\"\n          alignContent=\"center\"\n          style={{\n            height: \"100hv\",\n            border: \"3px\",\n            boxSizing: \"border-box\",\n            paddingTop: \"40px\",\n          }}\n        >\n          <VehicleInfoCont {...props} />{\" \"}\n        </Grid>\n      );\n    case \"Type-of-ngv\":\n      return (\n        <Grid\n          container\n          justify=\"center\"\n          direction=\"column\"\n          alignContent=\"center\"\n          style={{\n            height: \"100hv\",\n            border: \"3px\",\n            boxSizing: \"border-box\",\n            paddingTop: \"40px\",\n          }}\n        >\n          <EngineType {...props} />{\" \"}\n        </Grid>\n      );\n    case \"Conversion-kit-information\":\n      return (\n        <Grid\n          container\n          justify=\"center\"\n          direction=\"column\"\n          alignContent=\"center\"\n          style={{\n            height: \"100hv\",\n            border: \"3px\",\n            boxSizing: \"border-box\",\n            paddingTop: \"40px\",\n          }}\n        >\n          <ConversionKitInfo {...props} />{\" \"}\n        </Grid>\n      );\n    case \"Cng-cylinders-information\":\n      return (\n        <Grid\n          container\n          justify=\"center\"\n          direction=\"column\"\n          alignContent=\"center\"\n          style={{\n            height: \"100hv\",\n            border: \"3px\",\n            boxSizing: \"border-box\",\n          }}\n        >\n          <CgnCylinderInfo {...props} />{\" \"}\n        </Grid>\n      );\n    case \"Cng-cylinders-informationCont\":\n      return (\n        <Grid\n          container\n          justify=\"center\"\n          direction=\"column\"\n          alignContent=\"center\"\n          style={{\n            height: \"100hv\",\n            border: \"3px\",\n            boxSizing: \"border-box\",\n          }}\n        >\n          <CgnCylinderInfoCont {...props} />{\" \"}\n        </Grid>\n      );\n    case \"preview\":\n      return (\n        <Box\n          p={5}\n          style={{\n            border: \"3px\",\n            boxSizing: \"border-box\",\n            maxHeight: \"550px\",\n            overflowY: \"auto\",\n          }}\n        >\n          <Preview {...props} />{\" \"}\n        </Box>\n      );\n  }\n\n  return <div> </div>;\n}\nconst MapStateToprops = (store) => {\n  return { ...store };\n};\nexport default connect(MapStateToprops)(Index);\n","/home/support1/gas_inspection_portal/src/components/Home/Forms/ForgotPassword/ForgotPass.js",["442","443","444","445","446"],"import React, { useRef, useState, useEffect } from \"react\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { getCode } from \"../../../../client\";\nimport Card from \"@material-ui/core/Card\";\n\nconst style = {\n  maxWidth: 300,\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nfunction ForgotPass({ formData, setForm, navigation }) {\n  const { addToast } = useToasts();\n  const [loading, setLoading] = useState(false);\n  const { email, code, newpass } = formData;\n\n  async function handle() {\n    setLoading(true);\n    try {\n      const { code } = await getCode({ email });\n\n      if (code) {\n        setLoading(false);\n        addToast(\"... your recovery code successfully sent to your phone\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n        navigation.next();\n        return;\n      }\n      setLoading(false);\n      addToast(\"Account Not found!\", { appearance: \"error\" });\n    } catch (error) {\n      setLoading(false);\n      addToast(\"Failed\", { appearance: \"error\" });\n    }\n  }\n\n  return (\n    <Container maxWidth=\"xs\" className=\"login-form\">\n      <Card variant=\"outlined\" style={style}>\n        <h3> Forgot Password </h3>{\" \"}\n        <TextField\n          label=\"email / phone\"\n          value={email}\n          onChange={setForm}\n          name=\"email\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <Button\n          variant=\"contained\"\n          fullWidth\n          color=\"primary\"\n          style={{ marginTop: \"1rem\" }}\n          onClick={handle}\n        >\n          Submit{\" \"}\n        </Button>{\" \"}\n      </Card>{\" \"}\n    </Container>\n  );\n}\n\nexport default ForgotPass;\n","/home/support1/gas_inspection_portal/src/components/Home/Forms/ForgotPassword/ResetPass.js",["447","448","449"],"import React, { useRef, useState, useEffect } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Card from \"@material-ui/core/Card\";\nimport { postCode } from \"../../../../client/client\";\n\nconst style = {\n  maxWidth: 300,\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nfunction ResetPass({ formData, setForm, navigation }) {\n  const { addToast } = useToasts();\n  const [loading, setLoading] = useState(false);\n\n  const { email, code, newpass, confirmpass } = formData;\n\n  async function handle() {\n    if (confirmpass !== newpass) {\n      addToast(\"passwords not match\", { appearance: \"error\" });\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await postCode({ email, usercode: code, newpass });\n      const { isSuccessful } = response;\n\n      if (isSuccessful) {\n        setLoading(false);\n        addToast(\"... your password is successfully updated\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n      } else {\n        setLoading(false);\n        addToast(\"Account Not found!\", { appearance: \"error\" });\n      }\n    } catch (error) {\n      setLoading(false);\n      addToast(\"Failed\", { appearance: \"error\" });\n    }\n  }\n\n  return (\n    <Container maxWidth=\"xs\" className=\"login-form\">\n      <Card style={style}>\n        {\" \"}\n        <h3> Reset Password </h3>{\" \"}\n        <TextField\n          label=\"code\"\n          value={code}\n          onChange={setForm}\n          name=\"code\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"New password\"\n          value={newpass}\n          onChange={setForm}\n          name=\"newpass\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Confirm password\"\n          value={confirmpass}\n          onChange={setForm}\n          name=\"confirmpass\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <Button\n          variant=\"contained\"\n          fullWidth\n          color=\"primary\"\n          style={{ marginTop: \"1rem\" }}\n          onClick={handle}\n        >\n          Submit{\" \"}\n        </Button>{\" \"}\n      </Card>{\" \"}\n    </Container>\n  );\n}\n\nexport default ResetPass;\n","/home/support1/gas_inspection_portal/src/components/Home/Navibar/Menubar/sidebarData.js",["450"],"import React from \"react\";\nimport * as FaIcons from \"react-icons/fa\";\nimport * as AiIcons from \"react-icons/ai\";\nimport * as IoIcons from \"react-icons/io\";\n\nexport const SidebarData = [{\n        title: \"Home\",\n        path: \"/\",\n        icon: < AiIcons.AiFillHome / > ,\n        cName: \"nav-text\",\n    },\n    {\n        title: \"Feeds\",\n        path: \"/feeds\",\n        icon: < IoIcons.IoMdPeople / > ,\n        cName: \"nav-text\",\n    },\n    {\n        title: \"Login\",\n        path: \"/login\",\n        icon: < IoIcons.IoMdHelpCircle / > ,\n        cName: \"nav-text\",\n    },\n];","/home/support1/gas_inspection_portal/src/components/Dash_board/Registration/InspectionForm.js",[],"/home/support1/gas_inspection_portal/src/components/Dash_board/Registration/Owner.js",["451"],"import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport { useHistory } from \"react-router-dom\";\nconst style = {\n  maxWidth: 300,\n  padding: \"20px\",\n  borderRadius: \"16px\",\n\n  margin: \"auto\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nfunction Owner({ formData, setForm, navigation }) {\n  const { name, email, phone, plateno, location } = formData;\n  let history = useHistory();\n  async function handle() {\n    let responsecode = \"1234\";\n    if (responsecode) {\n      navigation.next();\n    }\n  }\n\n  return (\n    <Container maxWidth=\"xs\" style={{ marginTop: \"50px\" }}>\n      <Card variant=\"outlined\" style={style}>\n        <h3> OWNER INFORMATION </h3>{\" \"}\n        <TextField\n          label=\"Full Name\"\n          value={name}\n          onChange={setForm}\n          name=\"name\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Location\"\n          value={location}\n          onChange={setForm}\n          name=\"location\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Email\"\n          value={email}\n          onChange={setForm}\n          name=\"email\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Phone\"\n          value={phone}\n          onChange={setForm}\n          name=\"phone\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <div style={{ marginTop: \"1rem\" }}>\n          {\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"2px\" }}\n            onClick={() => history.push(\"/dashboard\")}\n          >\n            Back{\" \"}\n          </Button>{\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"1rem\" }}\n            onClick={handle}\n          >\n            Next{\" \"}\n          </Button>{\" \"}\n        </div>{\" \"}\n      </Card>{\" \"}\n    </Container>\n  );\n}\n\nexport default Owner;\n","/home/support1/gas_inspection_portal/src/components/Dash_board/Registration/VehicleInformatin.js",["452","453","454","455","456","457","458","459"],"import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\n\nconst style = {\n  maxWidth: 300,\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nfunction VehicleInfo({ formData, setForm, navigation }) {\n  const {\n    newInstallation,\n    periodic,\n    afterAccident,\n    ownername,\n    vihecleRegno,\n    manYear,\n    make,\n    model,\n    chasisno,\n    engineno,\n    milliege,\n  } = formData;\n\n  async function handle() {\n    let responsecode = \"1234\";\n    if (responsecode) {\n      navigation.next();\n    }\n  }\n  const Default = {\n    newInstallation: \"\",\n    periodic: \"\",\n    afterAccident: \"\",\n    ownername: \"\",\n    vihecleRegno,\n    manYear: \"\",\n    make: \"\",\n    model: \"\",\n    chasisno: \"\",\n    engineno: \"\",\n    milliege: \"\",\n  };\n  return (\n    <Container maxWidth=\"xs\">\n      <Card variant=\"outlined\" style={style}>\n        <h3> VEHICLE INFORMATION </h3>{\" \"}\n        <TextField\n          label=\"Name of Owner\"\n          value={ownername}\n          onChange={setForm}\n          name=\"ownername\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Vehicle Reg No\"\n          value={vihecleRegno}\n          onChange={setForm}\n          name=\"vihecleRegno\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Year of Man.\"\n          value={manYear}\n          onChange={setForm}\n          name=\"manYear\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Make\"\n          value={make}\n          onChange={setForm}\n          name=\"make\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <div style={{ marginTop: \"1rem\" }}>\n          {\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"2px\" }}\n            onClick={() => navigation.previous()}\n          >\n            Back{\" \"}\n          </Button>{\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"1rem\" }}\n            onClick={handle}\n          >\n            Next{\" \"}\n          </Button>{\" \"}\n        </div>{\" \"}\n      </Card>{\" \"}\n    </Container>\n  );\n}\n\nexport default VehicleInfo;\n","/home/support1/gas_inspection_portal/src/components/Dash_board/Registration/VehicleInfoCont.js",["460","461","462","463","464","465","466"],"import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\n\nconst style = {\n  maxWidth: 300,\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nfunction VehicleInfocont({ formData, setForm, navigation }) {\n  const {\n    newInstallation,\n    periodic,\n    afterAccident,\n    ownername,\n    vihecleRegno,\n    manYear,\n    make,\n    model,\n    chasisno,\n    engineno,\n    milliege,\n  } = formData;\n\n  async function handle() {\n    let responsecode = \"1234\";\n    if (responsecode) {\n      navigation.next();\n    }\n  }\n  const Default = {\n    newInstallation: \"\",\n    periodic: \"\",\n    afterAccident: \"\",\n    ownername: \"\",\n    vihecleRegno,\n    manYear: \"\",\n    make: \"\",\n    model: \"\",\n    chasisno: \"\",\n    engineno: \"\",\n    milliege: \"\",\n  };\n  return (\n    <Container maxWidth=\"xs\">\n      <Card variant=\"outlined\" style={style}>\n        <h3> Continuation... </h3>{\" \"}\n        <TextField\n          label=\"Model\"\n          value={model}\n          onChange={setForm}\n          name=\"model\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Chasis No or VIN\"\n          value={chasisno}\n          onChange={setForm}\n          name=\"chasisno\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Engine No / Type\"\n          value={engineno}\n          onChange={setForm}\n          name=\"engineno\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Milleage at Inspection (km)\"\n          value={milliege}\n          onChange={setForm}\n          name=\"milliege\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <div style={{ marginTop: \"1rem\" }}>\n          {\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"2px\" }}\n            onClick={() => navigation.previous()}\n          >\n            Back{\" \"}\n          </Button>{\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"1rem\" }}\n            onClick={handle}\n          >\n            Next{\" \"}\n          </Button>{\" \"}\n        </div>{\" \"}\n      </Card>{\" \"}\n    </Container>\n  );\n}\n\nexport default VehicleInfocont;\n","/home/support1/gas_inspection_portal/src/components/Dash_board/Registration/EngineType.js",[],"/home/support1/gas_inspection_portal/src/components/Dash_board/Registration/ConversionKitInfo.js",[],"/home/support1/gas_inspection_portal/src/components/Dash_board/Registration/CgnCylinderInfo.js",["467","468"],"import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport { Breakpoint, BreakpointProvider } from \"react-socks\";\n\nconst style = {\n  display: \"flex\",\n  flexDirection: \"row\",\n};\nconst stylemain = {\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  width: \"800px\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nconst stylesm = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  gap: \"20px\",\n  padding: \"10%\",\n};\n\nconst stylemainsm = {\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  width: \"fit-content\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\nfunction CgnCylinderInfo({ formData, setForm, navigation }) {\n  const {\n    cylinderno1,\n    cylinderposition1,\n    cylindertype1,\n    cmanufacturer1,\n    cmanuContact1,\n    cylinderno2,\n    cylinderposition2,\n    cylindertype2,\n    cmanufacturer2,\n    cmanuContact2,\n    cylinderno3,\n    cylinderSerialNo1,\n    cylinderSerialNo2,\n    cylinderSerialNo3,\n    cylinderposition3,\n    cylindertype3,\n    cmanufacturer3,\n    cmanuContact3,\n  } = formData;\n\n  async function handle() {\n    let responsecode = \"1234\";\n    if (responsecode) {\n      navigation.next();\n    }\n  }\n\n  return (\n    <Container style={{ marginTop: \"50px\" }}>\n      <Breakpoint medium up>\n        {\" \"}\n        <Card style={stylemain}>\n          <h3> CNG CYLINDERS INFORMATION </h3>{\" \"}\n          <Card fullWidth style={style}>\n            <Card>\n              <TextField\n                label=\"Cylinder No.\"\n                value={cylinderno1}\n                onChange={setForm}\n                name=\"cylinderno1\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                defaultValue=\"1\"\n                maxWidth=\"\"\n              />\n              <TextField\n                label=\"Cylinder position on vehicle\"\n                value={cylinderposition1}\n                onChange={setForm}\n                name=\"cylinderposition1\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                maxWidth=\"\"\n              />\n              <TextField\n                label=\"Cylinder Type\"\n                value={cylindertype1}\n                onChange={setForm}\n                name=\"cylindertype1\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                maxWidth=\"\"\n              />\n              <TextField\n                label=\"Cylinder Serial No\"\n                value={cylinderSerialNo1}\n                onChange={setForm}\n                name=\"cylinderSerialNo1\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                maxWidth=\"\"\n              />\n              <TextField\n                label=\"Manufacturer Name\"\n                value={cmanufacturer1}\n                onChange={setForm}\n                name=\"cmanufacturer1\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                maxWidth=\"\"\n              />\n              <TextField\n                label=\"Manufacturer Contact\"\n                value={cmanuContact1}\n                onChange={setForm}\n                name=\"cmanuContact1\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                maxWidth=\"\"\n              />\n            </Card>{\" \"}\n            <Card>\n              <TextField\n                label=\"Cylinder No.\"\n                value={cylinderno2}\n                onChange={setForm}\n                name=\"cylinderno2\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                defaultValue=\"2\"\n              />\n              <TextField\n                label=\"Cylinder position on vehicle\"\n                value={cylinderposition2}\n                onChange={setForm}\n                name=\"cylinderposition2\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                maxWidth=\"\"\n              />\n              <TextField\n                label=\"Cylinder Type\"\n                value={cylindertype2}\n                onChange={setForm}\n                name=\"cylindertype2\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                maxWidth=\"\"\n              />\n              <TextField\n                label=\"Cylinder Serial No\"\n                value={cylinderSerialNo2}\n                onChange={setForm}\n                name=\"cylinderSerialNo2\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                maxWidth=\"\"\n              />\n              <TextField\n                label=\"Manufacturer Name\"\n                value={cmanufacturer2}\n                onChange={setForm}\n                name=\"cmanufacturer2\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                maxWidth=\"\"\n              />\n              <TextField\n                label=\"Manufacturer Contact\"\n                value={cmanuContact2}\n                onChange={setForm}\n                name=\"cmanuContact2\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                maxWidth=\"\"\n              />\n            </Card>{\" \"}\n            <Card>\n              <TextField\n                label=\"Cylinder No.\"\n                value={cylinderno3}\n                onChange={setForm}\n                name=\"cylinderno3\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                defaultValue=\"3\"\n                maxWidth=\"\"\n              />\n              <TextField\n                label=\"Cylinder position on vehicle\"\n                value={cylinderposition3}\n                onChange={setForm}\n                name=\"cylinderposition3\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                maxWidth=\"\"\n              />\n              <TextField\n                label=\"Cylinder Type\"\n                value={cylindertype3}\n                onChange={setForm}\n                name=\"cylindertype3\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                maxWidth=\"\"\n              />\n              <TextField\n                label=\"Cylinder Serial No\"\n                value={cylinderSerialNo3}\n                onChange={setForm}\n                name=\"cylinderSerialNo3\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                maxWidth=\"\"\n              />\n              <TextField\n                label=\"Manufacturer Name\"\n                value={cmanufacturer3}\n                onChange={setForm}\n                name=\"cmanufacturer3\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                maxWidth=\"\"\n              />\n              <TextField\n                label=\"Manufacturer Contact\"\n                value={cmanuContact3}\n                onChange={setForm}\n                name=\"cmanuContact3\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                maxWidth=\"\"\n              />\n            </Card>{\" \"}\n          </Card>{\" \"}\n          <div style={{ marginTop: \"1rem\" }}>\n            {\" \"}\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ marginRight: \"2px\" }}\n              onClick={() => navigation.previous()}\n            >\n              Back{\" \"}\n            </Button>{\" \"}\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ marginRight: \"1rem\" }}\n              onClick={() => navigation.next()}\n            >\n              Next{\" \"}\n            </Button>{\" \"}\n          </div>{\" \"}\n        </Card>{\" \"}\n      </Breakpoint>\n      <Breakpoint small down>\n        {\" \"}\n        <Card style={stylemainsm}>\n          <h3> CNG CYLINDERS INFORMATION </h3>{\" \"}\n          <Card fullWidth style={stylesm}>\n            <Card>\n              <TextField\n                label=\"Cylinder No.\"\n                value={cylinderno1}\n                onChange={setForm}\n                name=\"cylinderno1\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                defaultValue=\"1\"\n                maxWidth=\"\"\n              />\n              <TextField\n                label=\"Cylinder position on vehicle\"\n                value={cylinderposition1}\n                onChange={setForm}\n                name=\"cylinderposition1\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                maxWidth=\"\"\n              />\n              <TextField\n                label=\"Cylinder Type\"\n                value={cylindertype1}\n                onChange={setForm}\n                name=\"cylindertype1\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                maxWidth=\"\"\n              />\n              <TextField\n                label=\"Cylinder Serial No\"\n                value={cylinderSerialNo1}\n                onChange={setForm}\n                name=\"cylinderSerialNo1\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                maxWidth=\"\"\n              />\n              <TextField\n                label=\"Manufacturer Name\"\n                value={cmanufacturer1}\n                onChange={setForm}\n                name=\"cmanufacturer1\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                maxWidth=\"\"\n              />\n              <TextField\n                label=\"Manufacturer Contact\"\n                value={cmanuContact1}\n                onChange={setForm}\n                name=\"cmanuContact1\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                maxWidth=\"\"\n              />\n            </Card>{\" \"}\n            <Card>\n              <TextField\n                label=\"Cylinder No.\"\n                value={cylinderno2}\n                onChange={setForm}\n                name=\"cylinderno2\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                defaultValue=\"2\"\n              />\n              <TextField\n                label=\"Cylinder position on vehicle\"\n                value={cylinderposition2}\n                onChange={setForm}\n                name=\"cylinderposition2\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                maxWidth=\"\"\n              />\n              <TextField\n                label=\"Cylinder Type\"\n                value={cylindertype2}\n                onChange={setForm}\n                name=\"cylindertype2\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                maxWidth=\"\"\n              />\n              <TextField\n                label=\"Cylinder Serial No\"\n                value={cylinderSerialNo2}\n                onChange={setForm}\n                name=\"cylinderSerialNo2\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                maxWidth=\"\"\n              />\n              <TextField\n                label=\"Manufacturer Name\"\n                value={cmanufacturer2}\n                onChange={setForm}\n                name=\"cmanufacturer2\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                maxWidth=\"\"\n              />\n              <TextField\n                label=\"Manufacturer Contact\"\n                value={cmanuContact2}\n                onChange={setForm}\n                name=\"cmanuContact2\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                maxWidth=\"\"\n              />\n            </Card>{\" \"}\n            <Card>\n              <TextField\n                label=\"Cylinder No.\"\n                value={cylinderno3}\n                onChange={setForm}\n                name=\"cylinderno3\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                defaultValue=\"3\"\n                maxWidth=\"\"\n              />\n              <TextField\n                label=\"Cylinder position on vehicle\"\n                value={cylinderposition3}\n                onChange={setForm}\n                name=\"cylinderposition3\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                maxWidth=\"\"\n              />\n              <TextField\n                label=\"Cylinder Type\"\n                value={cylindertype3}\n                onChange={setForm}\n                name=\"cylindertype3\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                maxWidth=\"\"\n              />\n              <TextField\n                label=\"Cylinder Serial No\"\n                value={cylinderSerialNo3}\n                onChange={setForm}\n                name=\"cylinderSerialNo3\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                maxWidth=\"\"\n              />\n              <TextField\n                label=\"Manufacturer Name\"\n                value={cmanufacturer3}\n                onChange={setForm}\n                name=\"cmanufacturer3\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                maxWidth=\"\"\n              />\n              <TextField\n                label=\"Manufacturer Contact\"\n                value={cmanuContact3}\n                onChange={setForm}\n                name=\"cmanuContact3\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                maxWidth=\"\"\n              />\n            </Card>{\" \"}\n          </Card>{\" \"}\n          <div style={{ marginTop: \"1rem\" }}>\n            {\" \"}\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ marginRight: \"2px\" }}\n              onClick={() => navigation.previous()}\n            >\n              Back{\" \"}\n            </Button>{\" \"}\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ marginRight: \"1rem\" }}\n              onClick={() => navigation.next()}\n            >\n              Next{\" \"}\n            </Button>{\" \"}\n          </div>{\" \"}\n        </Card>{\" \"}\n      </Breakpoint>\n    </Container>\n  );\n}\n\nexport default CgnCylinderInfo;\n","/home/support1/gas_inspection_portal/src/components/Dash_board/Registration/CgnCylinderInfoCont.js",["469","470"],"import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport { Breakpoint, BreakpointProvider } from \"react-socks\";\nconst style = {\n  display: \"flex\",\n  flexDirection: \"row\",\n};\nconst stylesm = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  gap: \"20px\",\n  padding: \"10%\",\n};\n\nconst stylemain = {\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n\n  width: \"800px\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\nconst stylemainsm = {\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  width: \"fit-content\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nfunction CgnCylinderInfoCont({ formData, setForm, navigation }) {\n  const {\n    servicepressure1,\n    cmanufacturedDate1,\n    waterVolume1,\n    tbscertificate1,\n    servicepressure2,\n    cmanufacturedDate2,\n    waterVolume2,\n    cexpiryDate1,\n    cexpiryDate2,\n    cexpiryDate3,\n    tbscertificate2,\n    servicepressure3,\n    cmanufacturedDate3,\n    waterVolume3,\n    tbscertificate3,\n  } = formData;\n\n  async function handle() {\n    let responsecode = \"1234\";\n    if (responsecode) {\n      navigation.next();\n    }\n  }\n\n  return (\n    <Container style={{ marginTop: \"50px\" }}>\n      <Breakpoint medium up>\n        {\" \"}\n        <Card style={stylemain}>\n          <h3> CNG CYLINDERS INFORMATION Cont ... </h3>{\" \"}\n          <Card fullWidth style={style}>\n            <Card>\n              <TextField\n                label=\"Service Pressure(MPa)\"\n                value={servicepressure1}\n                onChange={setForm}\n                name=\"servicepressure1\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n              />\n              <TextField\n                value={cmanufacturedDate1}\n                id=\"date\"\n                onChange={setForm}\n                name=\"cmanufacturedDate1\"\n                label=\"Manufactured Date\"\n                type=\"date\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                defaultValue=\"0000-00-00\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              <TextField\n                label=\"Water volume(litres)\"\n                value={waterVolume1}\n                onChange={setForm}\n                name=\"waterVolume1\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n              />\n              <TextField\n                value={cexpiryDate1}\n                id=\"date\"\n                onChange={setForm}\n                name=\"cexpiryDate1\"\n                label=\"Expiry Date\"\n                type=\"date\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                defaultValue=\"0000-00-00\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n\n              <TextField\n                label=\"TBS certificare\"\n                value={tbscertificate1}\n                onChange={setForm}\n                name=\"tbscertificate1\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n              />\n            </Card>{\" \"}\n            <Card>\n              <TextField\n                label=\"Service Pressure(MPa)\"\n                value={servicepressure2}\n                onChange={setForm}\n                name=\"servicepressure2\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n              />\n              <TextField\n                value={cmanufacturedDate2}\n                id=\"date\"\n                onChange={setForm}\n                name=\"cmanufacturedDate2\"\n                label=\"Manufactured Date\"\n                type=\"date\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                defaultValue=\"0000-00-00\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              <TextField\n                label=\"Water volume(litres)\"\n                value={waterVolume2}\n                onChange={setForm}\n                name=\"waterVolume2\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n              />\n\n              <TextField\n                value={cexpiryDate2}\n                id=\"date\"\n                onChange={setForm}\n                name=\"cexpiryDate2\"\n                label=\"Expiry Date\"\n                type=\"date\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                defaultValue=\"0000-00-00\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n\n              <TextField\n                label=\"TBS certificare\"\n                value={tbscertificate2}\n                onChange={setForm}\n                name=\"tbscertificate2\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n              />\n            </Card>{\" \"}\n            <Card>\n              <TextField\n                label=\"Service Pressure(MPa)\"\n                value={servicepressure3}\n                onChange={setForm}\n                name=\"servicepressure3\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                fullWidth\n              />\n\n              <TextField\n                value={cmanufacturedDate3}\n                id=\"date\"\n                onChange={setForm}\n                name=\"cmanufacturedDate3\"\n                label=\"Manufactured Date\"\n                type=\"date\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                defaultValue=\"0000-00-00\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              <TextField\n                label=\"Water volume(litres)\"\n                value={waterVolume3}\n                onChange={setForm}\n                name=\"waterVolume3\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                fullWidth\n              />\n              <TextField\n                value={cexpiryDate3}\n                id=\"date\"\n                onChange={setForm}\n                name=\"cexpiryDate3\"\n                label=\"Expiry Date\"\n                type=\"date\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                defaultValue=\"0000-00-00\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n\n              <TextField\n                label=\"TBS certificare\"\n                value={tbscertificate3}\n                onChange={setForm}\n                name=\"tbscertificate3\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                fullWidth\n              />\n            </Card>{\" \"}\n          </Card>{\" \"}\n          <div style={{ marginTop: \"1rem\" }}>\n            {\" \"}\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ marginRight: \"2px\" }}\n              onClick={() => navigation.previous()}\n            >\n              Back{\" \"}\n            </Button>{\" \"}\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ marginRight: \"1rem\" }}\n              onClick={() => navigation.next()}\n            >\n              Next{\" \"}\n            </Button>{\" \"}\n          </div>{\" \"}\n        </Card>{\" \"}\n      </Breakpoint>\n      <Breakpoint small down>\n        {\" \"}\n        <Card style={stylemainsm}>\n          <h3> CNG CYLINDERS INFORMATION Cont ... </h3>{\" \"}\n          <Card fullWidth style={stylesm}>\n            <Card>\n              <TextField\n                label=\"Service Pressure(MPa)\"\n                value={servicepressure1}\n                onChange={setForm}\n                name=\"servicepressure1\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n              />\n              <TextField\n                value={cmanufacturedDate1}\n                id=\"date\"\n                onChange={setForm}\n                name=\"cmanufacturedDate1\"\n                label=\"Manufactured Date\"\n                type=\"date\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                defaultValue=\"0000-00-00\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              <TextField\n                label=\"Water volume(litres)\"\n                value={waterVolume1}\n                onChange={setForm}\n                name=\"waterVolume1\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n              />\n              <TextField\n                value={cexpiryDate1}\n                id=\"date\"\n                onChange={setForm}\n                name=\"cexpiryDate1\"\n                label=\"Expiry Date\"\n                type=\"date\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                defaultValue=\"0000-00-00\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n\n              <TextField\n                label=\"TBS certificare\"\n                value={tbscertificate1}\n                onChange={setForm}\n                name=\"tbscertificate1\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n              />\n            </Card>{\" \"}\n            <Card>\n              <TextField\n                label=\"Service Pressure(MPa)\"\n                value={servicepressure2}\n                onChange={setForm}\n                name=\"servicepressure2\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n              />\n              <TextField\n                value={cmanufacturedDate2}\n                id=\"date\"\n                onChange={setForm}\n                name=\"cmanufacturedDate2\"\n                label=\"Manufactured Date\"\n                type=\"date\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                defaultValue=\"0000-00-00\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              <TextField\n                label=\"Water volume(litres)\"\n                value={waterVolume2}\n                onChange={setForm}\n                name=\"waterVolume2\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n              />\n\n              <TextField\n                value={cexpiryDate2}\n                id=\"date\"\n                onChange={setForm}\n                name=\"cexpiryDate2\"\n                label=\"Expiry Date\"\n                type=\"date\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                defaultValue=\"0000-00-00\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n\n              <TextField\n                label=\"TBS certificare\"\n                value={tbscertificate2}\n                onChange={setForm}\n                name=\"tbscertificate2\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n              />\n            </Card>{\" \"}\n            <Card>\n              <TextField\n                label=\"Service Pressure(MPa)\"\n                value={servicepressure3}\n                onChange={setForm}\n                name=\"servicepressure3\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                fullWidth\n              />\n\n              <TextField\n                value={cmanufacturedDate3}\n                id=\"date\"\n                onChange={setForm}\n                name=\"cmanufacturedDate3\"\n                label=\"Manufactured Date\"\n                type=\"date\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                defaultValue=\"0000-00-00\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              <TextField\n                label=\"Water volume(litres)\"\n                value={waterVolume3}\n                onChange={setForm}\n                name=\"waterVolume3\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                fullWidth\n              />\n              <TextField\n                value={cexpiryDate3}\n                id=\"date\"\n                onChange={setForm}\n                name=\"cexpiryDate3\"\n                label=\"Expiry Date\"\n                type=\"date\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                defaultValue=\"0000-00-00\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n\n              <TextField\n                label=\"TBS certificare\"\n                value={tbscertificate3}\n                onChange={setForm}\n                name=\"tbscertificate3\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                autoComplete=\"off\"\n                fullWidth\n              />\n            </Card>{\" \"}\n          </Card>{\" \"}\n          <div style={{ marginTop: \"1rem\" }}>\n            {\" \"}\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ marginRight: \"2px\" }}\n              onClick={() => navigation.previous()}\n            >\n              Back{\" \"}\n            </Button>{\" \"}\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ marginRight: \"1rem\" }}\n              onClick={() => navigation.next()}\n            >\n              Next{\" \"}\n            </Button>{\" \"}\n          </div>{\" \"}\n        </Card>{\" \"}\n      </Breakpoint>\n    </Container>\n  );\n}\n\nexport default CgnCylinderInfoCont;\n","/home/support1/gas_inspection_portal/src/components/Dash_board/Registration/Preview.js",["471","472","473","474"],"import React, { useRef, useState, useEffect } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport RenderAccordion from \"./RenderAccordion\";\nimport { postVehicleInfo } from \"../../../client/client\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Spinner from \"../../Spinner/Spiner\";\nimport { useHistory } from \"react-router-dom\";\n\nconst style = {\n  maxWidth: 300,\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nconst spinerStyle = {\n  display: \"flex\",\n  flexDirection: \"rows\",\n  gap: \"12px\",\n};\n\nfunction Preview(data) {\n  let history = useHistory;\n\n  const { formData, navigation, nameid } = data;\n  const {\n    name,\n    email,\n    phone,\n    location,\n    validfrom,\n    newInstallation,\n    periodic,\n    afterAccident,\n    ownername,\n    vihecleRegno,\n    manYear,\n    make,\n    model,\n    chasisno,\n    engineno,\n    milliege,\n    biFuel,\n    Dedicated,\n    DualFuel,\n    type,\n    manufacturer,\n    serialno,\n    installername,\n    cylinderno1,\n    cylinderposition1,\n    cylindertype1,\n    cmanufacturer1,\n    cmanuContact1,\n    servicepressure1,\n    cmanufacturedDate1,\n    waterVolume1,\n    cexpiryDate1,\n    tbscertificate1,\n    cylinderno2,\n    cylinderposition2,\n    cylindertype2,\n    cmanufacturer2,\n    cmanuContact2,\n    servicepressure2,\n    cmanufacturedDate2,\n    cylinderSerialNo1,\n    cylinderSerialNo2,\n    cylinderSerialNo3,\n    waterVolume2,\n    cexpiryDate2,\n    tbscertificate2,\n    cylinderno3,\n    cylinderposition3,\n    cylindertype3,\n    cmanufacturer3,\n    cmanuContact3,\n    servicepressure3,\n    cmanufacturedDate3,\n    waterVolume3,\n    cexpiryDate3,\n    tbscertificate3,\n  } = formData;\n\n  const { addToast } = useToasts();\n  const [loading, setLoading] = useState(false);\n\n  async function handle() {\n    try {\n      setLoading(true);\n      const response = await postVehicleInfo(formData);\n\n      if (response) {\n        setLoading(false);\n        addToast(\"... was created successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n        return;\n      }\n      setLoading(false);\n      addToast(\"Wrong Credentials!\", { appearance: \"error\" });\n    } catch (error) {\n      setLoading(false);\n      addToast(\"Failed\", { appearance: \"error\" });\n    }\n  }\n  const { go } = navigation;\n  return (\n    <Container maxWidth=\"sm\" style={{ height: \"90%\" }}>\n      <h3> Review </h3>{\" \"}\n      <RenderAccordion\n        summary=\"OWNER DETAILS\"\n        details={[\n          { nameid: \"Owner\" },\n          { \"Full Name\": name },\n          { Email: email },\n          { Phone: phone },\n          { Location: location },\n        ]}\n        go={go}\n        nameid={nameid}\n      />{\" \"}\n      <RenderAccordion\n        summary=\"INSPECTION TYPE\"\n        details={[\n          { nameid: \"Inspection-type\" },\n          { \"New installation\": newInstallation },\n          { Periodic: periodic },\n          { \"After Accident\": afterAccident },\n          { \"Valid From\": validfrom },\n        ]}\n        go={go}\n        nameid={nameid}\n      />{\" \"}\n      <RenderAccordion\n        summary=\"VEHICLE INFORMATION\"\n        details={[\n          { nameid: \"Vehicle-information\" },\n          { \"Name of Owner\": ownername },\n          { \"Vehicle Reg No\": vihecleRegno },\n          { \"Year of Man\": manYear },\n          { Make: make },\n          { Model: model },\n          { \"Chasis No or VIN\": chasisno },\n          { \"Engine No / Type\": engineno },\n          { \"Milleage at Inspection(km)\": milliege },\n        ]}\n        go={go}\n      />{\" \"}\n      <RenderAccordion\n        summary=\"TYPE OF NGV\"\n        details={[\n          { nameid: \"Type-of-ngv\" },\n          { \"Bi-Fuel\": biFuel },\n          { Dedicated: Dedicated },\n          { \"Dual Fuel\": DualFuel },\n        ]}\n        go={go}\n      />{\" \"}\n      <RenderAccordion\n        summary=\"CONVERSION KIT INFORMATION\"\n        details={[\n          { nameid: \"Conversion-kit-information\" },\n          { Type: type },\n          { Manufacturer: manufacturer },\n          { \"Serial No\": serialno },\n          { \"Name of Installer\": installername },\n        ]}\n        go={go}\n      />{\" \"}\n      <RenderAccordion\n        summary=\"CNG CYLINDER INFORMATION 1\"\n        details={[\n          { nameid: \"Cng-cylinders-information\" },\n          { \"Cylinder No\": cylinderno1 },\n          { \"Cylinder Position\": cylinderposition1 },\n          { \"Cylinder Type\": cylindertype1 },\n          { \"Cylinder Serial No\": cylinderSerialNo1 },\n          { \"Manufacture Name\": cmanufacturer1 },\n          { \"Manufacturer Address\": cmanuContact1 },\n          { \"Service Presssure(MPa)\": servicepressure1 },\n          { \"Manufactured Date\": cmanufacturedDate1 },\n          { \"Water volume(Ltr)\": waterVolume1 },\n          { \"Expiry Date\": cexpiryDate1 },\n          { \"TBS Certificate\": tbscertificate1 },\n        ]}\n        go={go}\n      />{\" \"}\n      <RenderAccordion\n        summary=\"CNG CYLINDER INFORMATION 2\"\n        details={[\n          { nameid: \"Cng-cylinders-information\" },\n          { \"Cylinder No\": cylinderno2 },\n          { \"Cylinder Position\": cylinderposition2 },\n          { \"Cylinder Type\": cylindertype2 },\n          { \"Cylinder Serial No\": cylinderSerialNo2 },\n          { \"Manufacture Name\": cmanufacturer2 },\n          { \"Manufacturer Address\": cmanuContact2 },\n          { \"Service Presssure(MPa)\": servicepressure2 },\n          { \"Manufactured Date\": cmanufacturedDate2 },\n          { \"Water volume(Ltr)\": waterVolume2 },\n          { \"Expiry Date\": cexpiryDate2 },\n          { \"TBS Certificate\": tbscertificate2 },\n        ]}\n        go={go}\n      />{\" \"}\n      <RenderAccordion\n        summary=\"CNG CYLINDER INFORMATION 3\"\n        details={[\n          { nameid: \"Cng-cylinders-information\" },\n          { \"Cylinder No\": cylinderno3 },\n          { \"Cylinder Position\": cylinderposition3 },\n          { \"Cylinder Type\": cylindertype3 },\n          { \"Cylinder Serial No\": cylinderSerialNo3 },\n          { \"Manufacture Name\": cmanufacturer3 },\n          { \"Manufacturer Address\": cmanuContact3 },\n          { \"Service Presssure(MPa)\": servicepressure3 },\n          { \"Manufactured Date\": cmanufacturedDate3 },\n          { \"Water volume(Ltr)\": waterVolume3 },\n          { \"Expiry Date\": cexpiryDate3 },\n          { \"TBS Certificate\": tbscertificate3 },\n        ]}\n        go={go}\n      />{\" \"}\n      <div style={{ marginTop: \"1rem\" }}>\n        {\" \"}\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          style={{ marginRight: \"2px\" }}\n          onClick={() => window.location.replace(\"/dashboard/\")}\n        >\n          Back{\" \"}\n        </Button>{\" \"}\n        <Button variant=\"contained\" width=\"md\" color=\"primary\" onClick={handle}>\n          {loading ? (\n            <div style={spinerStyle}>\n              <Spinner loading={loading} /> Loading...{\" \"}\n            </div>\n          ) : (\n            \"Save\"\n          )}{\" \"}\n        </Button>{\" \"}\n      </div>{\" \"}\n    </Container>\n  );\n}\nexport default Preview;\n","/home/support1/gas_inspection_portal/src/components/Spinner/Loader.js",[],"/home/support1/gas_inspection_portal/src/components/Dash_board/Report/Registration/Preview.js",["475","476","477","478"],"import React, { useRef, useState, useEffect } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport RenderAccordion from \"./RenderAccordion\";\nimport { postVehicleInfo, EditReport } from \"../../../../client/client\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Spinner from \"../../../Spinner/Spiner\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nconst style = {\n  maxWidth: 300,\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nconst spinerStyle = {\n  display: \"flex\",\n  flexDirection: \"rows\",\n  gap: \"12px\",\n};\n\nfunction Preview(data) {\n  let history = useHistory();\n  const { formData, navigation, nameid, reportdata } = data;\n  const {\n    name,\n    email,\n    phone,\n    location,\n    validfrom,\n    newInstallation,\n    periodic,\n    afterAccident,\n    ownername,\n    vihecleRegno,\n    manYear,\n    make,\n    model,\n    chasisno,\n    engineno,\n    milliege,\n    biFuel,\n    Dedicated,\n    DualFuel,\n    type,\n    manufacturer,\n    serialno,\n    installername,\n    cylinderno1,\n    cylinderposition1,\n    cylindertype1,\n    cmanufacturer1,\n    cmanuContact1,\n    servicepressure1,\n    cmanufacturedDate1,\n    waterVolume1,\n    cexpiryDate1,\n    tbscertificate1,\n    cylinderno2,\n    cylinderposition2,\n    cylindertype2,\n    cmanufacturer2,\n    cmanuContact2,\n    servicepressure2,\n    cmanufacturedDate2,\n    cylinderSerialNo1,\n    cylinderSerialNo2,\n    cylinderSerialNo3,\n    waterVolume2,\n    cexpiryDate2,\n    tbscertificate2,\n    cylinderno3,\n    cylinderposition3,\n    cylindertype3,\n    cmanufacturer3,\n    cmanuContact3,\n    servicepressure3,\n    cmanufacturedDate3,\n    waterVolume3,\n    cexpiryDate3,\n    tbscertificate3,\n  } = formData;\n\n  const { addToast } = useToasts();\n  const [loading, setLoading] = useState(false);\n  const { id } = reportdata;\n  async function handle() {\n    try {\n      setLoading(true);\n      const response = await EditReport({ ...formData, id });\n\n      if (response) {\n        setLoading(false);\n        addToast(\"... was updated successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n        history.location.push(\"/dashboard/reports\");\n        return;\n      }\n      setLoading(false);\n      addToast(\"Wrong Credentials!\", { appearance: \"error\" });\n    } catch (error) {\n      setLoading(false);\n      addToast(\"Failed\", { appearance: \"error\" });\n    }\n  }\n  const { go } = navigation;\n  return (\n    <Container maxWidth=\"sm\" style={{ height: \"90%\" }}>\n      <h3> Review </h3>{\" \"}\n      <RenderAccordion\n        summary=\"OWNER DETAILS\"\n        details={[\n          { nameid: \"Owner\" },\n          { \"Full Name\": name },\n          { Email: email },\n          { Phone: phone },\n          { Location: location },\n        ]}\n        go={go}\n        nameid={nameid}\n      />{\" \"}\n      <RenderAccordion\n        summary=\"INSPECTION TYPE\"\n        details={[\n          { nameid: \"Inspection-type\" },\n          { \"New installation\": newInstallation },\n          { Periodic: periodic },\n          { \"After Accident\": afterAccident },\n          { \"Valid From\": validfrom },\n        ]}\n        go={go}\n        nameid={nameid}\n      />{\" \"}\n      <RenderAccordion\n        summary=\"VEHICLE INFORMATION\"\n        details={[\n          { nameid: \"Vehicle-information\" },\n          { \"Name of Owner\": ownername },\n          { \"Vehicle Reg No\": vihecleRegno },\n          { \"Year of Man\": manYear },\n          { Make: make },\n          { Model: model },\n          { \"Chasis No or VIN\": chasisno },\n          { \"Engine No / Type\": engineno },\n          { \"Milleage at Inspection(km)\": milliege },\n        ]}\n        go={go}\n      />{\" \"}\n      <RenderAccordion\n        summary=\"TYPE OF NGV\"\n        details={[\n          { nameid: \"Type-of-ngv\" },\n          { \"Bi-Fuel\": biFuel },\n          { Dedicated: Dedicated },\n          { \"Dual Fuel\": DualFuel },\n        ]}\n        go={go}\n      />{\" \"}\n      <RenderAccordion\n        summary=\"CONVERSION KIT INFORMATION\"\n        details={[\n          { nameid: \"Conversion-kit-information\" },\n          { Type: type },\n          { Manufacturer: manufacturer },\n          { \"Serial No\": serialno },\n          { \"Name of Installer\": installername },\n        ]}\n        go={go}\n      />{\" \"}\n      <RenderAccordion\n        summary=\"CNG CYLINDER INFORMATION 1\"\n        details={[\n          { nameid: \"Cng-cylinders-information\" },\n          { \"Cylinder No\": cylinderno1 },\n          { \"Cylinder Position\": cylinderposition1 },\n          { \"Cylinder Type\": cylindertype1 },\n          { \"Cylinder Serial No\": cylinderSerialNo1 },\n          { \"Manufacture Name\": cmanufacturer1 },\n          { \"Manufacturer Address\": cmanuContact1 },\n          { \"Service Presssure(MPa)\": servicepressure1 },\n          { \"Manufactured Date\": cmanufacturedDate1 },\n          { \"Water volume(Ltr)\": waterVolume1 },\n          { \"Expiry Date\": cexpiryDate1 },\n          { \"TBS Certificate\": tbscertificate1 },\n        ]}\n        go={go}\n      />{\" \"}\n      <RenderAccordion\n        summary=\"CNG CYLINDER INFORMATION 2\"\n        details={[\n          { nameid: \"Cng-cylinders-information\" },\n          { \"Cylinder No\": cylinderno2 },\n          { \"Cylinder Position\": cylinderposition2 },\n          { \"Cylinder Type\": cylindertype2 },\n          { \"Cylinder Serial No\": cylinderSerialNo2 },\n          { \"Manufacture Name\": cmanufacturer2 },\n          { \"Manufacturer Address\": cmanuContact2 },\n          { \"Service Presssure(MPa)\": servicepressure2 },\n          { \"Manufactured Date\": cmanufacturedDate2 },\n          { \"Water volume(Ltr)\": waterVolume2 },\n          { \"Expiry Date\": cexpiryDate2 },\n          { \"TBS Certificate\": tbscertificate2 },\n        ]}\n        go={go}\n      />{\" \"}\n      <RenderAccordion\n        summary=\"CNG CYLINDER INFORMATION 3\"\n        details={[\n          { nameid: \"Cng-cylinders-information\" },\n          { \"Cylinder No\": cylinderno3 },\n          { \"Cylinder Position\": cylinderposition3 },\n          { \"Cylinder Type\": cylindertype3 },\n          { \"Cylinder Serial No\": cylinderSerialNo3 },\n          { \"Manufacture Name\": cmanufacturer3 },\n          { \"Manufacturer Address\": cmanuContact3 },\n          { \"Service Presssure(MPa)\": servicepressure3 },\n          { \"Manufactured Date\": cmanufacturedDate3 },\n          { \"Water volume(Ltr)\": waterVolume3 },\n          { \"Expiry Date\": cexpiryDate3 },\n          { \"TBS Certificate\": tbscertificate3 },\n        ]}\n        go={go}\n      />{\" \"}\n      <div style={{ marginTop: \"1rem\" }}>\n        {\" \"}\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          style={{ marginRight: \"2px\" }}\n          onClick={() => history.push(\"/dashboard/reports\")}\n        >\n          Back{\" \"}\n        </Button>{\" \"}\n        <Button variant=\"contained\" width=\"md\" color=\"primary\" onClick={handle}>\n          {loading ? (\n            <div style={spinerStyle}>\n              <Spinner loading={loading} /> Loading...{\" \"}\n            </div>\n          ) : (\n            \"Update\"\n          )}{\" \"}\n        </Button>{\" \"}\n      </div>{\" \"}\n    </Container>\n  );\n}\nconst MapStateToprops = (store) => {\n  return { ...store };\n};\nexport default connect(MapStateToprops)(Preview);\n","/home/support1/gas_inspection_portal/src/components/Dash_board/Report/Registration/CgnCylinderInfoCont.js",["479"],"import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\n\nconst style = {\n  display: \"flex\",\n  flexDirection: \"row\",\n};\nconst stylemain = {\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n\n  width: \"800px\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nfunction CgnCylinderInfoCont({ formData, setForm, navigation }) {\n  const {\n    servicepressure1,\n    cmanufacturedDate1,\n    waterVolume1,\n    tbscertificate1,\n    servicepressure2,\n    cmanufacturedDate2,\n    waterVolume2,\n    cexpiryDate1,\n    cexpiryDate2,\n    cexpiryDate3,\n    tbscertificate2,\n    servicepressure3,\n    cmanufacturedDate3,\n    waterVolume3,\n    tbscertificate3,\n  } = formData;\n\n  async function handle() {\n    let responsecode = \"1234\";\n    if (responsecode) {\n      navigation.next();\n    }\n  }\n\n  return (\n    <Container>\n      <Card style={stylemain}>\n        <h3> CNG CYLINDERS INFORMATION Cont... </h3>{\" \"}\n        <Card fullWidth style={style}>\n          <Card>\n            <TextField\n              label=\"Service Pressure(MPa)\"\n              value={servicepressure1}\n              onChange={setForm}\n              name=\"servicepressure1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n            />\n            <TextField\n              value={cmanufacturedDate1}\n              id=\"date\"\n              onChange={setForm}\n              name=\"cmanufacturedDate1\"\n              label=\"Manufactured Date\"\n              margin=\"normal\"\n              type=\"date\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              defaultValue=\"0000-00-00\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />{\" \"}\n            <TextField\n              label=\"Water volume(litres)\"\n              value={waterVolume1}\n              onChange={setForm}\n              name=\"waterVolume1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n            />\n            <TextField\n              value={cexpiryDate1}\n              id=\"date\"\n              onChange={setForm}\n              type=\"date\"\n              name=\"cexpiryDate1\"\n              label=\"Expiry Date\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              defaultValue=\"0000-00-00\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <TextField\n              label=\"TBS certificare\"\n              value={tbscertificate1}\n              onChange={setForm}\n              name=\"tbscertificate1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n            />\n          </Card>{\" \"}\n          <Card>\n            <TextField\n              label=\"Service Pressure(MPa)\"\n              value={servicepressure2}\n              onChange={setForm}\n              name=\"servicepressure2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n            />\n            <TextField\n              value={cmanufacturedDate2}\n              id=\"date\"\n              onChange={setForm}\n              type=\"date\"\n              name=\"cmanufacturedDate2\"\n              label=\"Manufactured Date\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              defaultValue=\"0000-00-00\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />{\" \"}\n            <TextField\n              label=\"Water volume(litres)\"\n              value={waterVolume2}\n              onChange={setForm}\n              name=\"waterVolume2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n            />\n            <TextField\n              value={cexpiryDate2}\n              id=\"date\"\n              onChange={setForm}\n              type=\"date\"\n              name=\"cexpiryDate2\"\n              label=\"Expiry Date\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              defaultValue=\"0000-00-00\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <TextField\n              label=\"TBS certificare\"\n              value={tbscertificate2}\n              onChange={setForm}\n              name=\"tbscertificate2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n            />\n          </Card>{\" \"}\n          <Card>\n            <TextField\n              label=\"Service Pressure(MPa)\"\n              value={servicepressure3}\n              onChange={setForm}\n              name=\"servicepressure3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              fullWidth\n            />\n            <TextField\n              value={cmanufacturedDate3}\n              id=\"date\"\n              onChange={setForm}\n              name=\"cmanufacturedDate3\"\n              type=\"date\"\n              label=\"Manufactured Date\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              defaultValue=\"0000-00-00\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />{\" \"}\n            <TextField\n              label=\"Water volume(litres)\"\n              value={waterVolume3}\n              onChange={setForm}\n              name=\"waterVolume3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              fullWidth\n            />\n            <TextField\n              value={cexpiryDate3}\n              id=\"date\"\n              onChange={setForm}\n              name=\"cexpiryDate3\"\n              label=\"Expiry Date\"\n              type=\"date\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              defaultValue=\"0000-00-00\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <TextField\n              label=\"TBS certificare\"\n              value={tbscertificate3}\n              onChange={setForm}\n              name=\"tbscertificate3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              fullWidth\n            />\n          </Card>{\" \"}\n        </Card>{\" \"}\n        <div style={{ marginTop: \"1rem\" }}>\n          {\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"2px\" }}\n            onClick={() => navigation.previous()}\n          >\n            Back{\" \"}\n          </Button>{\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"1rem\" }}\n            onClick={() => navigation.next()}\n          >\n            Next{\" \"}\n          </Button>{\" \"}\n        </div>{\" \"}\n      </Card>{\" \"}\n    </Container>\n  );\n}\n\nexport default CgnCylinderInfoCont;\n","/home/support1/gas_inspection_portal/src/components/Dash_board/Report/Registration/CgnCylinderInfo.js",["480"],"import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\n\nconst style = {\n  display: \"flex\",\n  flexDirection: \"row\",\n};\nconst stylemain = {\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n\n  width: \"800px\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nfunction CgnCylinderInfo({ formData, setForm, navigation }) {\n  const {\n    cylinderno1,\n    cylinderposition1,\n    cylindertype1,\n    cmanufacturer1,\n    cmanuContact1,\n    cylinderno2,\n    cylinderposition2,\n    cylindertype2,\n    cmanufacturer2,\n    cmanuContact2,\n    cylinderno3,\n    cylinderSerialNo1,\n    cylinderSerialNo2,\n    cylinderSerialNo3,\n    cylinderposition3,\n    cylindertype3,\n    cmanufacturer3,\n    cmanuContact3,\n  } = formData;\n\n  async function handle() {\n    let responsecode = \"1234\";\n    if (responsecode) {\n      navigation.next();\n    }\n  }\n\n  return (\n    <Container>\n      <Card style={stylemain}>\n        <h3> CNG CYLINDERS INFORMATION </h3>{\" \"}\n        <Card fullWidth style={style}>\n          <Card>\n            <TextField\n              label=\"Cylinder No.\"\n              value={cylinderno1}\n              onChange={setForm}\n              name=\"cylinderno1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              defaultValue=\"1\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Cylinder position on vehicle\"\n              value={cylinderposition1}\n              onChange={setForm}\n              name=\"cylinderposition1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Cylinder Type\"\n              value={cylindertype1}\n              onChange={setForm}\n              name=\"cylindertype1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Cylinder Serial No\"\n              value={cylinderSerialNo1}\n              onChange={setForm}\n              name=\"cylinderSerialNo1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Manufacturer Name\"\n              value={cmanufacturer1}\n              onChange={setForm}\n              name=\"cmanufacturer1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Manufacturer Contact\"\n              value={cmanuContact1}\n              onChange={setForm}\n              name=\"cmanuContact1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n          </Card>{\" \"}\n          <Card>\n            <TextField\n              label=\"Cylinder No.\"\n              value={cylinderno2}\n              onChange={setForm}\n              name=\"cylinderno2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              defaultValue=\"2\"\n            />\n            <TextField\n              label=\"Cylinder position on vehicle\"\n              value={cylinderposition2}\n              onChange={setForm}\n              name=\"cylinderposition2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Cylinder Type\"\n              value={cylindertype2}\n              onChange={setForm}\n              name=\"cylindertype2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Cylinder Serial No\"\n              value={cylinderSerialNo2}\n              onChange={setForm}\n              name=\"cylinderSerialNo2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Manufacturer Name\"\n              value={cmanufacturer2}\n              onChange={setForm}\n              name=\"cmanufacturer2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Manufacturer Contact\"\n              value={cmanuContact2}\n              onChange={setForm}\n              name=\"cmanuContact2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n          </Card>{\" \"}\n          <Card>\n            <TextField\n              label=\"Cylinder No.\"\n              value={cylinderno3}\n              onChange={setForm}\n              name=\"cylinderno3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              defaultValue=\"3\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Cylinder position on vehicle\"\n              value={cylinderposition3}\n              onChange={setForm}\n              name=\"cylinderposition3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Cylinder Type\"\n              value={cylindertype3}\n              onChange={setForm}\n              name=\"cylindertype3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Cylinder Serial No\"\n              value={cylinderSerialNo3}\n              onChange={setForm}\n              name=\"cylinderSerialNo3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Manufacturer Name\"\n              value={cmanufacturer3}\n              onChange={setForm}\n              name=\"cmanufacturer3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Manufacturer Contact\"\n              value={cmanuContact3}\n              onChange={setForm}\n              name=\"cmanuContact3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n          </Card>{\" \"}\n        </Card>{\" \"}\n        <div style={{ marginTop: \"1rem\" }}>\n          {\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"2px\" }}\n            onClick={() => navigation.previous()}\n          >\n            Back{\" \"}\n          </Button>{\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"1rem\" }}\n            onClick={() => navigation.next()}\n          >\n            Next{\" \"}\n          </Button>{\" \"}\n        </div>{\" \"}\n      </Card>{\" \"}\n    </Container>\n  );\n}\n\nexport default CgnCylinderInfo;\n","/home/support1/gas_inspection_portal/src/components/Dash_board/Report/Registration/ConversionKitInfo.js",[],"/home/support1/gas_inspection_portal/src/components/Dash_board/Report/Registration/EngineType.js",[],"/home/support1/gas_inspection_portal/src/components/Dash_board/Report/Registration/VehicleInfoCont.js",["481","482","483","484","485","486","487"],"/home/support1/gas_inspection_portal/src/components/Dash_board/Report/Registration/VehicleInformatin.js",["488","489","490","491","492","493","494","495"],"import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\n\nconst style = {\n  maxWidth: 300,\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nfunction VehicleInfo({ formData, setForm, navigation }) {\n  const {\n    newInstallation,\n    periodic,\n    afterAccident,\n    ownername,\n    vihecleRegno,\n    manYear,\n    make,\n    model,\n    chasisno,\n    engineno,\n    milliege,\n  } = formData;\n\n  async function handle() {\n    let responsecode = \"1234\";\n    if (responsecode) {\n      navigation.next();\n    }\n  }\n  const Default = {\n    newInstallation: \"\",\n    periodic: \"\",\n    afterAccident: \"\",\n    ownername: \"\",\n    vihecleRegno,\n    manYear: \"\",\n    make: \"\",\n    model: \"\",\n    chasisno: \"\",\n    engineno: \"\",\n    milliege: \"\",\n  };\n  return (\n    <Container maxWidth=\"xs\">\n      <Card variant=\"outlined\" style={style}>\n        <h3> VEHICLE INFORMATION </h3>{\" \"}\n        <TextField\n          label=\"Name of Owner\"\n          value={ownername}\n          onChange={setForm}\n          name=\"ownername\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Vehicle Reg No\"\n          value={vihecleRegno}\n          onChange={setForm}\n          name=\"vihecleRegno\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Year of Man.\"\n          value={manYear}\n          onChange={setForm}\n          type=\"date\"\n          name=\"manYear\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Make\"\n          value={make}\n          onChange={setForm}\n          name=\"make\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <div style={{ marginTop: \"1rem\" }}>\n          {\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"2px\" }}\n            onClick={() => navigation.previous()}\n          >\n            Back{\" \"}\n          </Button>{\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"1rem\" }}\n            onClick={handle}\n          >\n            Next{\" \"}\n          </Button>{\" \"}\n        </div>{\" \"}\n      </Card>{\" \"}\n    </Container>\n  );\n}\n\nexport default VehicleInfo;\n","/home/support1/gas_inspection_portal/src/components/Dash_board/Report/Registration/InspectionForm.js",[],"/home/support1/gas_inspection_portal/src/components/Dash_board/Report/Registration/Owner.js",["496","497"],"import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport { Link, useHistory } from \"react-router-dom\";\nconst style = {\n  maxWidth: 300,\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nfunction Owner({ formData, setForm, navigation }) {\n  const { name, email, phone, plateno, location } = formData;\n  let history = useHistory();\n\n  async function handle() {\n    let responsecode = \"1234\";\n    if (responsecode) {\n      navigation.next();\n    }\n  }\n\n  return (\n    <Container maxWidth=\"xs\">\n      <Card variant=\"outlined\" style={style}>\n        <h3> OWNER INFORMATION </h3>{\" \"}\n        <TextField\n          label=\"Full Name\"\n          value={name}\n          onChange={setForm}\n          name=\"name\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Location\"\n          value={location}\n          onChange={setForm}\n          name=\"location\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Email\"\n          value={email}\n          onChange={setForm}\n          name=\"email\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Phone\"\n          value={phone}\n          onChange={setForm}\n          name=\"phone\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <div style={{ marginTop: \"1rem\" }}>\n          {\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"2px\" }}\n            onClick={() => history.push(\"/dashboard/reports\")}\n          >\n            Back{\" \"}\n          </Button>{\" \"}\n          <Button\n            variant=\"contained\"\n            width=\"sm\"\n            color=\"primary\"\n            onClick={handle}\n          >\n            Next{\" \"}\n          </Button>{\" \"}\n        </div>{\" \"}\n      </Card>{\" \"}\n    </Container>\n  );\n}\n\nexport default Owner;\n","/home/support1/gas_inspection_portal/src/components/Dash_board/Registration/RenderAccordion.js",[],"/home/support1/gas_inspection_portal/src/components/Dash_board/Report/Registration/RenderAccordion.js",[],{"ruleId":"498","replacedBy":"499"},{"ruleId":"500","replacedBy":"501"},{"ruleId":"502","severity":1,"message":"503","line":11,"column":8,"nodeType":"504","messageId":"505","endLine":11,"endColumn":12},{"ruleId":"502","severity":1,"message":"506","line":16,"column":10,"nodeType":"504","messageId":"505","endLine":16,"endColumn":18},{"ruleId":"502","severity":1,"message":"507","line":16,"column":20,"nodeType":"504","messageId":"505","endLine":16,"endColumn":30},{"ruleId":"508","severity":1,"message":"509","line":1,"column":1,"nodeType":"510","messageId":"511","endLine":1,"endColumn":14,"fix":"512"},{"ruleId":"502","severity":1,"message":"513","line":5,"column":7,"nodeType":"504","messageId":"505","endLine":5,"endColumn":14},{"ruleId":"514","severity":1,"message":"515","line":19,"column":3,"nodeType":"516","messageId":"517","endLine":24,"endColumn":4},{"ruleId":"502","severity":1,"message":"518","line":5,"column":8,"nodeType":"504","messageId":"505","endLine":5,"endColumn":14},{"ruleId":"502","severity":1,"message":"519","line":13,"column":8,"nodeType":"504","messageId":"505","endLine":13,"endColumn":15},{"ruleId":"502","severity":1,"message":"520","line":14,"column":8,"nodeType":"504","messageId":"505","endLine":14,"endColumn":17},{"ruleId":"502","severity":1,"message":"521","line":15,"column":8,"nodeType":"504","messageId":"505","endLine":15,"endColumn":14},{"ruleId":"502","severity":1,"message":"522","line":19,"column":10,"nodeType":"504","messageId":"505","endLine":19,"endColumn":20},{"ruleId":"502","severity":1,"message":"523","line":21,"column":3,"nodeType":"504","messageId":"505","endLine":21,"endColumn":11},{"ruleId":"502","severity":1,"message":"524","line":23,"column":3,"nodeType":"504","messageId":"505","endLine":23,"endColumn":8},{"ruleId":"502","severity":1,"message":"525","line":32,"column":25,"nodeType":"504","messageId":"505","endLine":32,"endColumn":32},{"ruleId":"502","severity":1,"message":"526","line":32,"column":34,"nodeType":"504","messageId":"505","endLine":32,"endColumn":41},{"ruleId":"527","severity":1,"message":"528","line":58,"column":6,"nodeType":"529","endLine":58,"endColumn":12,"suggestions":"530"},{"ruleId":"502","severity":1,"message":"531","line":2,"column":5,"nodeType":"504","messageId":"505","endLine":2,"endColumn":18},{"ruleId":"502","severity":1,"message":"532","line":4,"column":5,"nodeType":"504","messageId":"505","endLine":4,"endColumn":20},{"ruleId":"502","severity":1,"message":"533","line":24,"column":5,"nodeType":"504","messageId":"505","endLine":24,"endColumn":15},{"ruleId":"502","severity":1,"message":"534","line":24,"column":17,"nodeType":"504","messageId":"505","endLine":24,"endColumn":29},{"ruleId":"502","severity":1,"message":"535","line":1,"column":10,"nodeType":"504","messageId":"505","endLine":1,"endColumn":19},{"ruleId":"502","severity":1,"message":"536","line":2,"column":10,"nodeType":"504","messageId":"505","endLine":2,"endColumn":15},{"ruleId":"502","severity":1,"message":"537","line":4,"column":10,"nodeType":"504","messageId":"505","endLine":4,"endColumn":20},{"ruleId":"502","severity":1,"message":"538","line":5,"column":10,"nodeType":"504","messageId":"505","endLine":5,"endColumn":15},{"ruleId":"502","severity":1,"message":"539","line":87,"column":15,"nodeType":"504","messageId":"505","endLine":87,"endColumn":23},{"ruleId":"540","severity":1,"message":"541","line":106,"column":9,"nodeType":"510","messageId":"542","endLine":106,"endColumn":46},{"ruleId":"502","severity":1,"message":"543","line":119,"column":17,"nodeType":"504","messageId":"505","endLine":119,"endColumn":28},{"ruleId":"544","severity":1,"message":"545","line":120,"column":28,"nodeType":"546","messageId":"547","endLine":120,"endColumn":30},{"ruleId":"502","severity":1,"message":"548","line":480,"column":23,"nodeType":"504","messageId":"505","endLine":480,"endColumn":29},{"ruleId":"502","severity":1,"message":"549","line":3,"column":8,"nodeType":"504","messageId":"505","endLine":3,"endColumn":12},{"ruleId":"502","severity":1,"message":"550","line":7,"column":8,"nodeType":"504","messageId":"505","endLine":7,"endColumn":14},{"ruleId":"502","severity":1,"message":"518","line":8,"column":8,"nodeType":"504","messageId":"505","endLine":8,"endColumn":14},{"ruleId":"502","severity":1,"message":"551","line":11,"column":7,"nodeType":"504","messageId":"505","endLine":11,"endColumn":12},{"ruleId":"502","severity":1,"message":"552","line":12,"column":7,"nodeType":"504","messageId":"505","endLine":12,"endColumn":13},{"ruleId":"502","severity":1,"message":"553","line":3,"column":10,"nodeType":"504","messageId":"505","endLine":3,"endColumn":17},{"ruleId":"502","severity":1,"message":"554","line":5,"column":8,"nodeType":"504","messageId":"505","endLine":5,"endColumn":22},{"ruleId":"502","severity":1,"message":"555","line":39,"column":5,"nodeType":"504","messageId":"505","endLine":39,"endColumn":14},{"ruleId":"502","severity":1,"message":"556","line":42,"column":5,"nodeType":"504","messageId":"505","endLine":42,"endColumn":9},{"ruleId":"502","severity":1,"message":"557","line":43,"column":5,"nodeType":"504","messageId":"505","endLine":43,"endColumn":10},{"ruleId":"502","severity":1,"message":"558","line":44,"column":5,"nodeType":"504","messageId":"505","endLine":44,"endColumn":10},{"ruleId":"502","severity":1,"message":"559","line":45,"column":5,"nodeType":"504","messageId":"505","endLine":45,"endColumn":13},{"ruleId":"502","severity":1,"message":"560","line":97,"column":5,"nodeType":"504","messageId":"505","endLine":97,"endColumn":16},{"ruleId":"544","severity":1,"message":"545","line":103,"column":17,"nodeType":"546","messageId":"547","endLine":103,"endColumn":19},{"ruleId":"544","severity":1,"message":"545","line":106,"column":17,"nodeType":"546","messageId":"547","endLine":106,"endColumn":19},{"ruleId":"544","severity":1,"message":"545","line":109,"column":17,"nodeType":"546","messageId":"547","endLine":109,"endColumn":19},{"ruleId":"544","severity":1,"message":"545","line":144,"column":39,"nodeType":"546","messageId":"547","endLine":144,"endColumn":41},{"ruleId":"544","severity":1,"message":"545","line":151,"column":37,"nodeType":"546","messageId":"547","endLine":151,"endColumn":39},{"ruleId":"561","severity":1,"message":"562","line":415,"column":23,"nodeType":"563","messageId":"547","endLine":415,"endColumn":34},{"ruleId":"564","severity":1,"message":"565","line":698,"column":13,"nodeType":"566","endLine":698,"endColumn":81},{"ruleId":"502","severity":1,"message":"567","line":5,"column":10,"nodeType":"504","messageId":"505","endLine":5,"endColumn":17},{"ruleId":"502","severity":1,"message":"568","line":21,"column":18,"nodeType":"504","messageId":"505","endLine":21,"endColumn":22},{"ruleId":"502","severity":1,"message":"569","line":21,"column":24,"nodeType":"504","messageId":"505","endLine":21,"endColumn":31},{"ruleId":"502","severity":1,"message":"570","line":2,"column":10,"nodeType":"504","messageId":"505","endLine":2,"endColumn":17},{"ruleId":"502","severity":1,"message":"571","line":2,"column":19,"nodeType":"504","messageId":"505","endLine":2,"endColumn":23},{"ruleId":"502","severity":1,"message":"572","line":3,"column":10,"nodeType":"504","messageId":"505","endLine":3,"endColumn":21},{"ruleId":"502","severity":1,"message":"573","line":5,"column":13,"nodeType":"504","messageId":"505","endLine":5,"endColumn":20},{"ruleId":"502","severity":1,"message":"574","line":6,"column":13,"nodeType":"504","messageId":"505","endLine":6,"endColumn":20},{"ruleId":"502","severity":1,"message":"575","line":9,"column":20,"nodeType":"504","messageId":"505","endLine":9,"endColumn":27},{"ruleId":"502","severity":1,"message":"576","line":10,"column":10,"nodeType":"504","messageId":"505","endLine":10,"endColumn":19},{"ruleId":"502","severity":1,"message":"577","line":14,"column":9,"nodeType":"504","messageId":"505","endLine":14,"endColumn":20},{"ruleId":"502","severity":1,"message":"578","line":15,"column":10,"nodeType":"504","messageId":"505","endLine":15,"endColumn":20},{"ruleId":"502","severity":1,"message":"579","line":15,"column":22,"nodeType":"504","messageId":"505","endLine":15,"endColumn":33},{"ruleId":"502","severity":1,"message":"580","line":17,"column":12,"nodeType":"504","messageId":"505","endLine":17,"endColumn":18},{"ruleId":"544","severity":1,"message":"545","line":18,"column":15,"nodeType":"546","messageId":"547","endLine":18,"endColumn":17},{"ruleId":"502","severity":1,"message":"581","line":22,"column":9,"nodeType":"504","messageId":"505","endLine":22,"endColumn":15},{"ruleId":"502","severity":1,"message":"582","line":1,"column":17,"nodeType":"504","messageId":"505","endLine":1,"endColumn":24},{"ruleId":"502","severity":1,"message":"583","line":5,"column":10,"nodeType":"504","messageId":"505","endLine":5,"endColumn":18},{"ruleId":"502","severity":1,"message":"584","line":1,"column":35,"nodeType":"504","messageId":"505","endLine":1,"endColumn":44},{"ruleId":"502","severity":1,"message":"585","line":3,"column":10,"nodeType":"504","messageId":"505","endLine":3,"endColumn":19},{"ruleId":"502","severity":1,"message":"586","line":9,"column":10,"nodeType":"504","messageId":"505","endLine":9,"endColumn":16},{"ruleId":"502","severity":1,"message":"587","line":22,"column":7,"nodeType":"504","messageId":"505","endLine":22,"endColumn":16},{"ruleId":"502","severity":1,"message":"588","line":34,"column":9,"nodeType":"504","messageId":"505","endLine":34,"endColumn":19},{"ruleId":"502","severity":1,"message":"589","line":38,"column":41,"nodeType":"504","messageId":"505","endLine":38,"endColumn":49},{"ruleId":"502","severity":1,"message":"590","line":74,"column":9,"nodeType":"504","messageId":"505","endLine":74,"endColumn":13},{"ruleId":"561","severity":1,"message":"591","line":177,"column":13,"nodeType":"563","messageId":"547","endLine":177,"endColumn":25},{"ruleId":"502","severity":1,"message":"592","line":3,"column":10,"nodeType":"504","messageId":"505","endLine":3,"endColumn":16},{"ruleId":"502","severity":1,"message":"523","line":3,"column":3,"nodeType":"504","messageId":"505","endLine":3,"endColumn":11},{"ruleId":"502","severity":1,"message":"593","line":10,"column":8,"nodeType":"504","messageId":"505","endLine":10,"endColumn":17},{"ruleId":"502","severity":1,"message":"594","line":11,"column":8,"nodeType":"504","messageId":"505","endLine":11,"endColumn":11},{"ruleId":"502","severity":1,"message":"595","line":15,"column":9,"nodeType":"504","messageId":"505","endLine":15,"endColumn":14},{"ruleId":"502","severity":1,"message":"596","line":16,"column":9,"nodeType":"504","messageId":"505","endLine":16,"endColumn":17},{"ruleId":"502","severity":1,"message":"597","line":17,"column":9,"nodeType":"504","messageId":"505","endLine":17,"endColumn":17},{"ruleId":"508","severity":1,"message":"509","line":1,"column":1,"nodeType":"510","messageId":"511","endLine":1,"endColumn":14,"fix":"598"},{"ruleId":"502","severity":1,"message":"536","line":4,"column":10,"nodeType":"504","messageId":"505","endLine":4,"endColumn":15},{"ruleId":"514","severity":1,"message":"515","line":19,"column":3,"nodeType":"516","messageId":"517","endLine":24,"endColumn":4},{"ruleId":"502","severity":1,"message":"572","line":4,"column":10,"nodeType":"504","messageId":"505","endLine":4,"endColumn":21},{"ruleId":"502","severity":1,"message":"573","line":5,"column":13,"nodeType":"504","messageId":"505","endLine":5,"endColumn":20},{"ruleId":"502","severity":1,"message":"574","line":6,"column":13,"nodeType":"504","messageId":"505","endLine":6,"endColumn":20},{"ruleId":"502","severity":1,"message":"599","line":7,"column":13,"nodeType":"504","messageId":"505","endLine":7,"endColumn":20},{"ruleId":"502","severity":1,"message":"577","line":13,"column":9,"nodeType":"504","messageId":"505","endLine":13,"endColumn":20},{"ruleId":"502","severity":1,"message":"584","line":1,"column":35,"nodeType":"504","messageId":"505","endLine":1,"endColumn":44},{"ruleId":"502","severity":1,"message":"600","line":2,"column":16,"nodeType":"504","messageId":"505","endLine":2,"endColumn":26},{"ruleId":"502","severity":1,"message":"601","line":5,"column":8,"nodeType":"504","messageId":"505","endLine":5,"endColumn":17},{"ruleId":"502","severity":1,"message":"602","line":7,"column":8,"nodeType":"504","messageId":"505","endLine":7,"endColumn":13},{"ruleId":"502","severity":1,"message":"603","line":14,"column":8,"nodeType":"504","messageId":"505","endLine":14,"endColumn":14},{"ruleId":"502","severity":1,"message":"604","line":36,"column":7,"nodeType":"504","messageId":"505","endLine":36,"endColumn":15},{"ruleId":"605","severity":1,"message":"606","line":120,"column":11,"nodeType":"607","endLine":120,"endColumn":129},{"ruleId":"502","severity":1,"message":"608","line":9,"column":44,"nodeType":"504","messageId":"505","endLine":9,"endColumn":54},{"ruleId":"527","severity":1,"message":"609","line":62,"column":8,"nodeType":"529","endLine":62,"endColumn":64,"suggestions":"610"},{"ruleId":"527","severity":1,"message":"609","line":114,"column":8,"nodeType":"529","endLine":114,"endColumn":51,"suggestions":"611"},{"ruleId":"527","severity":1,"message":"612","line":159,"column":8,"nodeType":"529","endLine":159,"endColumn":23,"suggestions":"613"},{"ruleId":"502","severity":1,"message":"555","line":19,"column":9,"nodeType":"504","messageId":"505","endLine":19,"endColumn":18},{"ruleId":"502","severity":1,"message":"614","line":20,"column":13,"nodeType":"504","messageId":"505","endLine":20,"endColumn":20},{"ruleId":"502","severity":1,"message":"560","line":76,"column":13,"nodeType":"504","messageId":"505","endLine":76,"endColumn":24},{"ruleId":"514","severity":1,"message":"515","line":154,"column":5,"nodeType":"516","messageId":"517","endLine":308,"endColumn":6},{"ruleId":"502","severity":1,"message":"584","line":1,"column":35,"nodeType":"504","messageId":"505","endLine":1,"endColumn":44},{"ruleId":"502","severity":1,"message":"583","line":11,"column":10,"nodeType":"504","messageId":"505","endLine":11,"endColumn":18},{"ruleId":"502","severity":1,"message":"615","line":21,"column":9,"nodeType":"504","messageId":"505","endLine":21,"endColumn":14},{"ruleId":"502","severity":1,"message":"616","line":31,"column":9,"nodeType":"504","messageId":"505","endLine":31,"endColumn":18},{"ruleId":"561","severity":1,"message":"591","line":103,"column":9,"nodeType":"563","messageId":"547","endLine":103,"endColumn":21},{"ruleId":"502","severity":1,"message":"571","line":5,"column":10,"nodeType":"504","messageId":"505","endLine":5,"endColumn":14},{"ruleId":"502","severity":1,"message":"600","line":5,"column":16,"nodeType":"504","messageId":"505","endLine":5,"endColumn":26},{"ruleId":"502","severity":1,"message":"617","line":5,"column":28,"nodeType":"504","messageId":"505","endLine":5,"endColumn":38},{"ruleId":"502","severity":1,"message":"618","line":7,"column":7,"nodeType":"504","messageId":"505","endLine":7,"endColumn":14},{"ruleId":"502","severity":1,"message":"513","line":16,"column":7,"nodeType":"504","messageId":"505","endLine":16,"endColumn":14},{"ruleId":"502","severity":1,"message":"619","line":32,"column":13,"nodeType":"504","messageId":"505","endLine":32,"endColumn":20},{"ruleId":"502","severity":1,"message":"559","line":32,"column":22,"nodeType":"504","messageId":"505","endLine":32,"endColumn":30},{"ruleId":"502","severity":1,"message":"582","line":3,"column":3,"nodeType":"504","messageId":"505","endLine":3,"endColumn":10},{"ruleId":"502","severity":1,"message":"584","line":4,"column":3,"nodeType":"504","messageId":"505","endLine":4,"endColumn":12},{"ruleId":"502","severity":1,"message":"620","line":6,"column":3,"nodeType":"504","messageId":"505","endLine":6,"endColumn":9},{"ruleId":"502","severity":1,"message":"621","line":10,"column":10,"nodeType":"504","messageId":"505","endLine":10,"endColumn":15},{"ruleId":"502","severity":1,"message":"622","line":10,"column":17,"nodeType":"504","messageId":"505","endLine":10,"endColumn":25},{"ruleId":"502","severity":1,"message":"623","line":10,"column":36,"nodeType":"504","messageId":"505","endLine":10,"endColumn":43},{"ruleId":"502","severity":1,"message":"586","line":21,"column":10,"nodeType":"504","messageId":"505","endLine":21,"endColumn":16},{"ruleId":"502","severity":1,"message":"525","line":40,"column":26,"nodeType":"504","messageId":"505","endLine":40,"endColumn":33},{"ruleId":"502","severity":1,"message":"526","line":40,"column":35,"nodeType":"504","messageId":"505","endLine":40,"endColumn":42},{"ruleId":"502","severity":1,"message":"624","line":42,"column":10,"nodeType":"504","messageId":"505","endLine":42,"endColumn":20},{"ruleId":"527","severity":1,"message":"625","line":75,"column":5,"nodeType":"529","endLine":75,"endColumn":7,"suggestions":"626"},{"ruleId":"544","severity":1,"message":"545","line":150,"column":35,"nodeType":"546","messageId":"547","endLine":150,"endColumn":37},{"ruleId":"544","severity":1,"message":"545","line":153,"column":35,"nodeType":"546","messageId":"547","endLine":153,"endColumn":37},{"ruleId":"502","severity":1,"message":"627","line":14,"column":15,"nodeType":"504","messageId":"505","endLine":14,"endColumn":23},{"ruleId":"502","severity":1,"message":"582","line":3,"column":3,"nodeType":"504","messageId":"505","endLine":3,"endColumn":10},{"ruleId":"502","severity":1,"message":"586","line":19,"column":10,"nodeType":"504","messageId":"505","endLine":19,"endColumn":16},{"ruleId":"502","severity":1,"message":"628","line":22,"column":8,"nodeType":"504","messageId":"505","endLine":22,"endColumn":15},{"ruleId":"502","severity":1,"message":"629","line":23,"column":22,"nodeType":"504","messageId":"505","endLine":23,"endColumn":40},{"ruleId":"502","severity":1,"message":"583","line":31,"column":3,"nodeType":"504","messageId":"505","endLine":31,"endColumn":11},{"ruleId":"502","severity":1,"message":"630","line":33,"column":3,"nodeType":"504","messageId":"505","endLine":33,"endColumn":21},{"ruleId":"502","severity":1,"message":"622","line":41,"column":17,"nodeType":"504","messageId":"505","endLine":41,"endColumn":25},{"ruleId":"502","severity":1,"message":"623","line":41,"column":36,"nodeType":"504","messageId":"505","endLine":41,"endColumn":43},{"ruleId":"502","severity":1,"message":"631","line":54,"column":9,"nodeType":"504","messageId":"505","endLine":54,"endColumn":16},{"ruleId":"502","severity":1,"message":"632","line":55,"column":9,"nodeType":"504","messageId":"505","endLine":55,"endColumn":15},{"ruleId":"502","severity":1,"message":"633","line":56,"column":10,"nodeType":"504","messageId":"505","endLine":56,"endColumn":14},{"ruleId":"502","severity":1,"message":"634","line":57,"column":10,"nodeType":"504","messageId":"505","endLine":57,"endColumn":16},{"ruleId":"502","severity":1,"message":"624","line":61,"column":10,"nodeType":"504","messageId":"505","endLine":61,"endColumn":20},{"ruleId":"502","severity":1,"message":"635","line":67,"column":9,"nodeType":"504","messageId":"505","endLine":67,"endColumn":25},{"ruleId":"502","severity":1,"message":"636","line":71,"column":7,"nodeType":"504","messageId":"505","endLine":71,"endColumn":11},{"ruleId":"502","severity":1,"message":"637","line":77,"column":5,"nodeType":"504","messageId":"505","endLine":77,"endColumn":10},{"ruleId":"502","severity":1,"message":"638","line":82,"column":14,"nodeType":"504","messageId":"505","endLine":82,"endColumn":28},{"ruleId":"502","severity":1,"message":"639","line":83,"column":18,"nodeType":"504","messageId":"505","endLine":83,"endColumn":36},{"ruleId":"502","severity":1,"message":"640","line":85,"column":23,"nodeType":"504","messageId":"505","endLine":85,"endColumn":46},{"ruleId":"502","severity":1,"message":"641","line":86,"column":19,"nodeType":"504","messageId":"505","endLine":86,"endColumn":38},{"ruleId":"502","severity":1,"message":"642","line":87,"column":21,"nodeType":"504","messageId":"505","endLine":87,"endColumn":42},{"ruleId":"502","severity":1,"message":"643","line":88,"column":14,"nodeType":"504","messageId":"505","endLine":88,"endColumn":28},{"ruleId":"502","severity":1,"message":"644","line":94,"column":5,"nodeType":"504","messageId":"505","endLine":94,"endColumn":16},{"ruleId":"502","severity":1,"message":"645","line":96,"column":5,"nodeType":"504","messageId":"505","endLine":96,"endColumn":21},{"ruleId":"502","severity":1,"message":"646","line":97,"column":5,"nodeType":"504","messageId":"505","endLine":97,"endColumn":17},{"ruleId":"502","severity":1,"message":"647","line":98,"column":5,"nodeType":"504","messageId":"505","endLine":98,"endColumn":19},{"ruleId":"502","severity":1,"message":"526","line":100,"column":5,"nodeType":"504","messageId":"505","endLine":100,"endColumn":12},{"ruleId":"527","severity":1,"message":"648","line":147,"column":5,"nodeType":"529","endLine":147,"endColumn":7,"suggestions":"649"},{"ruleId":"527","severity":1,"message":"650","line":178,"column":5,"nodeType":"529","endLine":178,"endColumn":7,"suggestions":"651"},{"ruleId":"502","severity":1,"message":"652","line":254,"column":9,"nodeType":"504","messageId":"505","endLine":254,"endColumn":27},{"ruleId":"527","severity":1,"message":"653","line":286,"column":6,"nodeType":"529","endLine":286,"endColumn":66,"suggestions":"654"},{"ruleId":"544","severity":1,"message":"545","line":651,"column":41,"nodeType":"546","messageId":"547","endLine":651,"endColumn":43},{"ruleId":"544","severity":1,"message":"545","line":654,"column":41,"nodeType":"546","messageId":"547","endLine":654,"endColumn":43},{"ruleId":"544","severity":1,"message":"545","line":775,"column":41,"nodeType":"546","messageId":"547","endLine":775,"endColumn":43},{"ruleId":"544","severity":1,"message":"545","line":778,"column":41,"nodeType":"546","messageId":"547","endLine":778,"endColumn":43},{"ruleId":"502","severity":1,"message":"555","line":20,"column":5,"nodeType":"504","messageId":"505","endLine":20,"endColumn":14},{"ruleId":"502","severity":1,"message":"614","line":21,"column":5,"nodeType":"504","messageId":"505","endLine":21,"endColumn":12},{"ruleId":"502","severity":1,"message":"560","line":77,"column":5,"nodeType":"504","messageId":"505","endLine":77,"endColumn":16},{"ruleId":"514","severity":1,"message":"515","line":156,"column":3,"nodeType":"516","messageId":"517","endLine":301,"endColumn":4},{"ruleId":"502","severity":1,"message":"620","line":1,"column":17,"nodeType":"504","messageId":"505","endLine":1,"endColumn":23},{"ruleId":"502","severity":1,"message":"584","line":1,"column":35,"nodeType":"504","messageId":"505","endLine":1,"endColumn":44},{"ruleId":"502","severity":1,"message":"525","line":23,"column":10,"nodeType":"504","messageId":"505","endLine":23,"endColumn":17},{"ruleId":"502","severity":1,"message":"568","line":24,"column":18,"nodeType":"504","messageId":"505","endLine":24,"endColumn":22},{"ruleId":"502","severity":1,"message":"569","line":24,"column":24,"nodeType":"504","messageId":"505","endLine":24,"endColumn":31},{"ruleId":"502","severity":1,"message":"620","line":1,"column":17,"nodeType":"504","messageId":"505","endLine":1,"endColumn":23},{"ruleId":"502","severity":1,"message":"584","line":1,"column":35,"nodeType":"504","messageId":"505","endLine":1,"endColumn":44},{"ruleId":"502","severity":1,"message":"525","line":23,"column":10,"nodeType":"504","messageId":"505","endLine":23,"endColumn":17},{"ruleId":"502","severity":1,"message":"573","line":2,"column":13,"nodeType":"504","messageId":"505","endLine":2,"endColumn":20},{"ruleId":"502","severity":1,"message":"655","line":21,"column":31,"nodeType":"504","messageId":"505","endLine":21,"endColumn":38},{"ruleId":"502","severity":1,"message":"656","line":21,"column":5,"nodeType":"504","messageId":"505","endLine":21,"endColumn":20},{"ruleId":"502","severity":1,"message":"657","line":22,"column":5,"nodeType":"504","messageId":"505","endLine":22,"endColumn":13},{"ruleId":"502","severity":1,"message":"658","line":23,"column":5,"nodeType":"504","messageId":"505","endLine":23,"endColumn":18},{"ruleId":"502","severity":1,"message":"659","line":28,"column":5,"nodeType":"504","messageId":"505","endLine":28,"endColumn":10},{"ruleId":"502","severity":1,"message":"660","line":29,"column":5,"nodeType":"504","messageId":"505","endLine":29,"endColumn":13},{"ruleId":"502","severity":1,"message":"661","line":30,"column":5,"nodeType":"504","messageId":"505","endLine":30,"endColumn":13},{"ruleId":"502","severity":1,"message":"662","line":31,"column":5,"nodeType":"504","messageId":"505","endLine":31,"endColumn":13},{"ruleId":"502","severity":1,"message":"663","line":40,"column":9,"nodeType":"504","messageId":"505","endLine":40,"endColumn":16},{"ruleId":"502","severity":1,"message":"656","line":21,"column":5,"nodeType":"504","messageId":"505","endLine":21,"endColumn":20},{"ruleId":"502","severity":1,"message":"657","line":22,"column":5,"nodeType":"504","messageId":"505","endLine":22,"endColumn":13},{"ruleId":"502","severity":1,"message":"658","line":23,"column":5,"nodeType":"504","messageId":"505","endLine":23,"endColumn":18},{"ruleId":"502","severity":1,"message":"664","line":24,"column":5,"nodeType":"504","messageId":"505","endLine":24,"endColumn":14},{"ruleId":"502","severity":1,"message":"665","line":26,"column":5,"nodeType":"504","messageId":"505","endLine":26,"endColumn":12},{"ruleId":"502","severity":1,"message":"666","line":27,"column":5,"nodeType":"504","messageId":"505","endLine":27,"endColumn":9},{"ruleId":"502","severity":1,"message":"663","line":40,"column":9,"nodeType":"504","messageId":"505","endLine":40,"endColumn":16},{"ruleId":"502","severity":1,"message":"629","line":6,"column":22,"nodeType":"504","messageId":"505","endLine":6,"endColumn":40},{"ruleId":"502","severity":1,"message":"580","line":64,"column":18,"nodeType":"504","messageId":"505","endLine":64,"endColumn":24},{"ruleId":"502","severity":1,"message":"629","line":6,"column":22,"nodeType":"504","messageId":"505","endLine":6,"endColumn":40},{"ruleId":"502","severity":1,"message":"580","line":61,"column":18,"nodeType":"504","messageId":"505","endLine":61,"endColumn":24},{"ruleId":"502","severity":1,"message":"620","line":1,"column":17,"nodeType":"504","messageId":"505","endLine":1,"endColumn":23},{"ruleId":"502","severity":1,"message":"584","line":1,"column":35,"nodeType":"504","messageId":"505","endLine":1,"endColumn":44},{"ruleId":"502","severity":1,"message":"615","line":10,"column":7,"nodeType":"504","messageId":"505","endLine":10,"endColumn":12},{"ruleId":"502","severity":1,"message":"619","line":29,"column":7,"nodeType":"504","messageId":"505","endLine":29,"endColumn":14},{"ruleId":"502","severity":1,"message":"620","line":1,"column":17,"nodeType":"504","messageId":"505","endLine":1,"endColumn":23},{"ruleId":"502","severity":1,"message":"584","line":1,"column":35,"nodeType":"504","messageId":"505","endLine":1,"endColumn":44},{"ruleId":"502","severity":1,"message":"667","line":5,"column":10,"nodeType":"504","messageId":"505","endLine":5,"endColumn":25},{"ruleId":"502","severity":1,"message":"615","line":11,"column":7,"nodeType":"504","messageId":"505","endLine":11,"endColumn":12},{"ruleId":"502","severity":1,"message":"580","line":43,"column":18,"nodeType":"504","messageId":"505","endLine":43,"endColumn":24},{"ruleId":"502","severity":1,"message":"580","line":46,"column":18,"nodeType":"504","messageId":"505","endLine":46,"endColumn":24},{"ruleId":"502","severity":1,"message":"656","line":21,"column":5,"nodeType":"504","messageId":"505","endLine":21,"endColumn":20},{"ruleId":"502","severity":1,"message":"657","line":22,"column":5,"nodeType":"504","messageId":"505","endLine":22,"endColumn":13},{"ruleId":"502","severity":1,"message":"658","line":23,"column":5,"nodeType":"504","messageId":"505","endLine":23,"endColumn":18},{"ruleId":"502","severity":1,"message":"664","line":24,"column":5,"nodeType":"504","messageId":"505","endLine":24,"endColumn":14},{"ruleId":"502","severity":1,"message":"665","line":26,"column":5,"nodeType":"504","messageId":"505","endLine":26,"endColumn":12},{"ruleId":"502","severity":1,"message":"666","line":27,"column":5,"nodeType":"504","messageId":"505","endLine":27,"endColumn":9},{"ruleId":"502","severity":1,"message":"663","line":40,"column":9,"nodeType":"504","messageId":"505","endLine":40,"endColumn":16},{"ruleId":"502","severity":1,"message":"656","line":21,"column":5,"nodeType":"504","messageId":"505","endLine":21,"endColumn":20},{"ruleId":"502","severity":1,"message":"657","line":22,"column":5,"nodeType":"504","messageId":"505","endLine":22,"endColumn":13},{"ruleId":"502","severity":1,"message":"658","line":23,"column":5,"nodeType":"504","messageId":"505","endLine":23,"endColumn":18},{"ruleId":"502","severity":1,"message":"659","line":28,"column":5,"nodeType":"504","messageId":"505","endLine":28,"endColumn":10},{"ruleId":"502","severity":1,"message":"660","line":29,"column":5,"nodeType":"504","messageId":"505","endLine":29,"endColumn":13},{"ruleId":"502","severity":1,"message":"661","line":30,"column":5,"nodeType":"504","messageId":"505","endLine":30,"endColumn":13},{"ruleId":"502","severity":1,"message":"662","line":31,"column":5,"nodeType":"504","messageId":"505","endLine":31,"endColumn":13},{"ruleId":"502","severity":1,"message":"663","line":40,"column":9,"nodeType":"504","messageId":"505","endLine":40,"endColumn":16},{"ruleId":"502","severity":1,"message":"571","line":6,"column":10,"nodeType":"504","messageId":"505","endLine":6,"endColumn":14},{"ruleId":"502","severity":1,"message":"655","line":20,"column":31,"nodeType":"504","messageId":"505","endLine":20,"endColumn":38},"no-native-reassign",["668"],"no-negated-in-lhs",["669"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'userData' is defined but never used.","'getProfile' is defined but never used.","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"670","text":"671"},"'thStyle' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Footer' is defined but never used.","'Regform' is defined but never used.","'Printform' is defined but never used.","'Spline' is defined but never used.","'Breakpoint' is defined but never used.","'Redirect' is defined but never used.","'Route' is defined but never used.","'loading' is assigned a value but never used.","'refresh' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'email', 'fname', 'initial', 'lname', 'phone', 'signature', 'userRole', and 'username'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["672"],"'ACTIVATE_USER' is defined but never used.","'DEACTIVATE_USER' is defined but never used.","'removeUser' is defined but never used.","'registerUser' is defined but never used.","'stringify' is defined but never used.","'store' is defined but never used.","'SAVE_TOKEN' is defined but never used.","'merge' is defined but never used.","'repsonse' is assigned a value but never used.","no-unreachable","Unreachable code.","unreachableCode","'accessToken' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'plural' is assigned a value but never used.","'Card' is defined but never used.","'Navbar' is defined but never used.","'login' is assigned a value but never used.","'forgot' is assigned a value but never used.","'borders' is defined but never used.","'BootstrapTable' is defined but never used.","'createdAt' is assigned a value but never used.","'name' is assigned a value but never used.","'email' is assigned a value but never used.","'phone' is assigned a value but never used.","'location' is assigned a value but never used.","'inspectorID' is assigned a value but never used.","no-dupe-keys","Duplicate key 'borderRight'.","ObjectExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'getCode' is defined but never used.","'code' is assigned a value but never used.","'newpass' is assigned a value but never used.","'NavLink' is defined but never used.","'Link' is defined but never used.","'SidebarData' is defined but never used.","'FaIcons' is defined but never used.","'AiIcons' is defined but never used.","'signout' is defined but never used.","'VIEW_USER' is defined but never used.","'showsidebar' is assigned a value but never used.","'modalShown' is assigned a value but never used.","'toggleModal' is assigned a value but never used.","'handle' is defined but never used.","'logout' is assigned a value but never used.","'useMemo' is defined but never used.","'ADD_USER' is defined but never used.","'useEffect' is defined but never used.","'getUserId' is defined but never used.","'useGet' is defined but never used.","'Editstyle' is assigned a value but never used.","'putProfile' is assigned a value but never used.","'username' is assigned a value but never used.","'edit' is assigned a value but never used.","Duplicate key 'borderRadius'.","'render' is defined but never used.","'PrintForm' is defined but never used.","'Pdf' is defined but never used.","'table' is assigned a value but never used.","'editdata' is assigned a value but never used.","'viewdata' is assigned a value but never used.",{"range":"673","text":"671"},"'IoIcons' is defined but never used.","'useHistory' is defined but never used.","'Container' is defined but never used.","'Check' is defined but never used.","'avatar' is defined but never used.","'logomain' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useContext' is defined but never used.","React Hook useEffect has missing dependencies: 'addToast', 'onGet', and 'params'. Either include them or remove the dependency array. If 'onGet' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["674"],["675"],"React Hook useEffect has missing dependencies: 'addToast', 'id', and 'onGet'. Either include them or remove the dependency array. If 'onGet' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["676"],"'validto' is assigned a value but never used.","'style' is assigned a value but never used.","'signature' is assigned a value but never used.","'withRouter' is defined but never used.","'viewpdf' is assigned a value but never used.","'history' is assigned a value but never used.","'useRef' is defined but never used.","'FaEye' is defined but never used.","'FaRegEye' is defined but never used.","'FaPrint' is defined but never used.","'loadingdel' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'dispatch' and 'handledelete'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["677"],"'setColor' is assigned a value but never used.","'AddIcon' is defined but never used.","'BreakpointProvider' is defined but never used.","'CLEAR_PROFILE_DATA' is defined but never used.","'formref' is assigned a value but never used.","'fsname' is assigned a value but never used.","'date' is assigned a value but never used.","'status' is assigned a value but never used.","'handleChangedate' is assigned a value but never used.","'pgno' is defined but never used.","'query' is assigned a value but never used.","'historyloading' is assigned a value but never used.","'historycurrentPage' is assigned a value but never used.","'historyhavePreviousPage' is assigned a value but never used.","'historyhaveNextPage' is assigned a value but never used.","'historysetCurrentPage' is assigned a value but never used.","'historyrefresh' is assigned a value but never used.","'currentPage' is assigned a value but never used.","'havePreviousPage' is assigned a value but never used.","'haveNextPage' is assigned a value but never used.","'setCurrentPage' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'dispatch', 'handledelete', and 'history'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["678"],"React Hook useCallback has missing dependencies: 'dispatch', 'handledeletehistory', and 'history'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["679"],"'handleChangestatus' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'params' and 'setTotal'. Either include them or remove the dependency array.",["680"],"'plateno' is assigned a value but never used.","'newInstallation' is assigned a value but never used.","'periodic' is assigned a value but never used.","'afterAccident' is assigned a value but never used.","'model' is assigned a value but never used.","'chasisno' is assigned a value but never used.","'engineno' is assigned a value but never used.","'milliege' is assigned a value but never used.","'Default' is assigned a value but never used.","'ownername' is assigned a value but never used.","'manYear' is assigned a value but never used.","'make' is assigned a value but never used.","'postVehicleInfo' is defined but never used.","no-global-assign","no-unsafe-negation",[0,13],"",{"desc":"681","fix":"682"},[0,13],{"desc":"683","fix":"684"},{"desc":"685","fix":"686"},{"desc":"687","fix":"688"},{"desc":"689","fix":"690"},{"desc":"691","fix":"692"},{"desc":"693","fix":"694"},{"desc":"695","fix":"696"},"Update the dependencies array to be: [dispatch, email, fname, initial, lname, phone, signature, user, userRole, username]",{"range":"697","text":"698"},"Update the dependencies array to be: [currentPage, sort, filters, searchQuery, shouldRefresh, onGet, params, addToast]",{"range":"699","text":"700"},"Update the dependencies array to be: [sort, filters, searchQuery, shouldRefresh, onGet, params, addToast]",{"range":"701","text":"702"},"Update the dependencies array to be: [addToast, id, onGet, shouldRefresh]",{"range":"703","text":"704"},"Update the dependencies array to be: [dispatch, handledelete]",{"range":"705","text":"706"},"Update the dependencies array to be: [dispatch, handledelete, history]",{"range":"707","text":"708"},"Update the dependencies array to be: [dispatch, handledeletehistory, history]",{"range":"709","text":"710"},"Update the dependencies array to be: [paramsDate, paramsSearch, paramsStatus, page, historytable, params, setTotal]",{"range":"711","text":"712"},[1698,1704],"[dispatch, email, fname, initial, lname, phone, signature, user, userRole, username]",[2187,2243],"[currentPage, sort, filters, searchQuery, shouldRefresh, onGet, params, addToast]",[3713,3756],"[sort, filters, searchQuery, shouldRefresh, onGet, params, addToast]",[4877,4892],"[addToast, id, onGet, shouldRefresh]",[2122,2124],"[dispatch, handledelete]",[4227,4229],"[dispatch, handledelete, history]",[4961,4963],"[dispatch, handledeletehistory, history]",[9593,9653],"[paramsDate, paramsSearch, paramsStatus, page, historytable, params, setTotal]"]