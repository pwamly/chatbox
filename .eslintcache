[{"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/index.js":"1","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/App.js":"2","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/index.js":"3","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Head/index.js":"4","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Auth/Login.js":"5","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Auth/Register.js":"6","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Auth/Forgot.js":"7","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Head/Home.js":"8","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Head/Dashboard.js":"9","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/ProtectRoute.js":"10","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dashboard/index.js":"11","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/client/index.js":"12","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/client/client.js":"13","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Profile/index.js":"14","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dashboard/Cards.js":"15","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/reducer.js":"16","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/actions.js":"17","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Auth/Adduser.js":"18","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dashboard/Carditem.js":"19","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dashboard/ViewUser.js":"20","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Auth/Edituser.js":"21","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dashboard/EditUsr.js":"22","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/store.js":"23","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/config/axiosConfig.js":"24","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/hooks/index.js":"25","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/index.js":"26","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Navibar/index.js":"27","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Menubar/sidebarData.js":"28","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Menubar/index.js":"29","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Forms/Stepform/ForgotPassword/ForgotPasswordForm.js":"30","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Forms/Stepform/ForgotPassword/ForgotPass.js":"31","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Forms/Stepform/ForgotPassword/ResetPass.js":"32","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Forms/Login.js":"33","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Forms/ForgotPassword/ForgotPasswordForm.js":"34","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Forms/ForgotPassword/ForgotPass.js":"35","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Forms/ForgotPassword/ResetPass.js":"36","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Navibar/Navbar.js":"37","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Navibar/Menubar/sidebarData.js":"38","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Footer/Footer.js":"39","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Spinner/Spiner.js":"40","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/index.js":"41","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/InspectionForm.js":"42","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/VehicleInformatin.js":"43","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/VehicleInfoCont.js":"44","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/EngineType.js":"45","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/ConversionKitInfo.js":"46","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/CgnCylinderInfoCont.js":"47","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/CgnCylinderInfo.js":"48","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/Preview.js":"49","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/RenderAccordion.js":"50","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Pdf/Pdf.js":"51","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/Owner.js":"52","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Printform/Printform.js":"53","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Charts/Spline.js":"54","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Profile/Profile.js":"55"},{"size":171,"mtime":1614415531164,"results":"56","hashOfConfig":"57"},{"size":1505,"mtime":1615364336744,"results":"58","hashOfConfig":"57"},{"size":902,"mtime":1615373829573,"results":"59","hashOfConfig":"57"},{"size":250,"mtime":1609344225763,"results":"60","hashOfConfig":"57"},{"size":1446,"mtime":1614415530988,"results":"61","hashOfConfig":"57"},{"size":843,"mtime":1609945301778,"results":"62","hashOfConfig":"57"},{"size":2869,"mtime":1614425035729,"results":"63","hashOfConfig":"57"},{"size":302,"mtime":1609343793693,"results":"64","hashOfConfig":"57"},{"size":495,"mtime":1614415531116,"results":"65","hashOfConfig":"57"},{"size":517,"mtime":1615285750049,"results":"66","hashOfConfig":"57"},{"size":995,"mtime":1610246461085,"results":"67","hashOfConfig":"57"},{"size":396,"mtime":1614415530748,"results":"68","hashOfConfig":"57"},{"size":12252,"mtime":1615412094671,"results":"69","hashOfConfig":"57"},{"size":1380,"mtime":1614415531132,"results":"70","hashOfConfig":"57"},{"size":1220,"mtime":1610247701169,"results":"71","hashOfConfig":"57"},{"size":2949,"mtime":1615417142371,"results":"72","hashOfConfig":"57"},{"size":625,"mtime":1615416690272,"results":"73","hashOfConfig":"57"},{"size":1782,"mtime":1610246498053,"results":"74","hashOfConfig":"57"},{"size":1209,"mtime":1610250486933,"results":"75","hashOfConfig":"57"},{"size":1279,"mtime":1610221289325,"results":"76","hashOfConfig":"57"},{"size":100,"mtime":1610192386634,"results":"77","hashOfConfig":"57"},{"size":3752,"mtime":1610246475889,"results":"78","hashOfConfig":"57"},{"size":352,"mtime":1615412943860,"results":"79","hashOfConfig":"57"},{"size":2735,"mtime":1615393579272,"results":"80","hashOfConfig":"57"},{"size":5335,"mtime":1614415531164,"results":"81","hashOfConfig":"57"},{"size":2299,"mtime":1615418520351,"results":"82","hashOfConfig":"57"},{"size":2466,"mtime":1615416330095,"results":"83","hashOfConfig":"57"},{"size":859,"mtime":1615367313005,"results":"84","hashOfConfig":"57"},{"size":95,"mtime":1614385153969,"results":"85","hashOfConfig":"57"},{"size":719,"mtime":1614585039537,"results":"86","hashOfConfig":"57"},{"size":1369,"mtime":1614612303807,"results":"87","hashOfConfig":"57"},{"size":1800,"mtime":1614608609902,"results":"88","hashOfConfig":"57"},{"size":2820,"mtime":1615374432611,"results":"89","hashOfConfig":"57"},{"size":719,"mtime":1614613242248,"results":"90","hashOfConfig":"57"},{"size":2022,"mtime":1615389868559,"results":"91","hashOfConfig":"57"},{"size":2684,"mtime":1615401645652,"results":"92","hashOfConfig":"57"},{"size":946,"mtime":1615386234725,"results":"93","hashOfConfig":"57"},{"size":568,"mtime":1614715441366,"results":"94","hashOfConfig":"57"},{"size":216,"mtime":1614925281232,"results":"95","hashOfConfig":"57"},{"size":543,"mtime":1614703809707,"results":"96","hashOfConfig":"57"},{"size":5738,"mtime":1615374214035,"results":"97","hashOfConfig":"57"},{"size":2204,"mtime":1614938519876,"results":"98","hashOfConfig":"57"},{"size":2775,"mtime":1614842013333,"results":"99","hashOfConfig":"57"},{"size":2788,"mtime":1614842643581,"results":"100","hashOfConfig":"57"},{"size":2133,"mtime":1615372931136,"results":"101","hashOfConfig":"57"},{"size":2210,"mtime":1614842290121,"results":"102","hashOfConfig":"57"},{"size":6298,"mtime":1614887209276,"results":"103","hashOfConfig":"57"},{"size":6507,"mtime":1615367781103,"results":"104","hashOfConfig":"57"},{"size":5304,"mtime":1615371837290,"results":"105","hashOfConfig":"57"},{"size":1340,"mtime":1614869954240,"results":"106","hashOfConfig":"57"},{"size":658,"mtime":1615046121840,"results":"107","hashOfConfig":"57"},{"size":2298,"mtime":1614938278101,"results":"108","hashOfConfig":"57"},{"size":18270,"mtime":1615045889696,"results":"109","hashOfConfig":"57"},{"size":938,"mtime":1615310218652,"results":"110","hashOfConfig":"57"},{"size":1888,"mtime":1615418567117,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"86wbd6",{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"114"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"114"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"124"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"124"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"137"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"137"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"137"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"137"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"137"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"137"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"174","usedDeprecatedRules":"114"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"114"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"184","messages":"185","errorCount":2,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"114"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"114"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"114"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"114"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"114"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"114"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"114"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"114"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"114"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"114"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"114"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"114"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"114"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"114"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"114"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"114"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"114"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/index.js",[],["254","255"],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/App.js",["256","257"],"import React from \"react\";\nimport {\n  Redirect,\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport { ProtectRoute } from \"./components/ProtectRoute\";\n\nimport Home from \"./components/Home\";\nimport Form from \"./components/Forms/Stepform/ForgotPassword/ForgotPasswordForm\";\n// import Dashboard from \"./components/Dashboard\";\nimport Dashboard from \"./components/Dash_board\";\nimport { Provider } from \"react-redux\";\nimport { ToastProvider } from \"react-toast-notifications\";\nimport { userData, getProfile } from \"./client/index\";\nimport { store } from \"./store\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ToastProvider placement=\"top-center\">\n        <div className=\"site\">\n          <Router>\n            <Switch>\n              <Route exact path=\"/login\">\n                <Home />\n              </Route>{\" \"}\n              <Route exact path=\"/form\">\n                <Form />\n              </Route>{\" \"}\n              <ProtectRoute\n                path=\"/dashboard\"\n                exact\n                component={Dashboard}\n              ></ProtectRoute>{\" \"}\n              <ProtectRoute path=\"/\" component={Dashboard}>\n                {\" \"}\n              </ProtectRoute>{\" \"}\n              <Redirect exact to=\"/\" />\n              <Route path=\"*\" component={() => <h2> 404 Not Found </h2>} />\n            </Switch>{\" \"}\n          </Router>{\" \"}\n        </div>{\" \"}\n      </ToastProvider>{\" \"}\n    </Provider>\n  );\n}\n\nexport default App;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/index.js",["258","259","260"],"import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Card from \"@material-ui/core/Card\";\nimport Container from \"@material-ui/core/Container\";\nimport ForgotPassword from \"./Forms/ForgotPassword/ForgotPasswordForm\";\nimport Login from \"./Forms/Login\";\nimport Navbar from \"./Navibar/Navbar\";\nimport Footer from \"../Footer/Footer\";\nimport \"./home.css\";\n\nconst login = true;\nconst forgot = \"\";\n\nfunction index() {\n  return (\n    <>\n      {\" \"}\n      <Router>\n        <Navbar />\n        <Container className=\"main-home\">\n          <Switch>\n            <Route path=\"/login\">\n              <Login />\n            </Route>{\" \"}\n            <Route path=\"/reset-password\">\n              <ForgotPassword />\n            </Route>{\" \"}\n          </Switch>{\" \"}\n        </Container>{\" \"}\n      </Router>{\" \"}\n      <Footer />\n    </>\n  );\n}\n\nexport default index;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Head/index.js",["261"],"import React from \"react\";\nimport Home from \"./Home\";\nimport Dashboard from \"./Dashboard\";\nconst login = false;\nfunction index() {\n  {\n    if (login) {\n      return <Dashboard />;\n    } else {\n      return <Home />;\n    }\n  }\n}\nexport default index;\n",["262","263"],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Auth/Login.js",["264","265"],"import React, { useState, useRef } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { login } from \"../../client/index\";\n\nfunction Login() {\n  const [isLoged, setIsLoged] = useState(false);\n  const history = useHistory();\n  const email = useRef(\"\");\n  const password = useRef(\"\");\n  const hundleSubmit = (e) => {\n    e.preventDefault();\n    login({\n      username: email.current.value,\n      password: password.current.value,\n    });\n  };\n\n  return (\n    <>\n      {\" \"}\n      {isLoged ? (\n        <div className=\"form-wrapper-login\"> Logged in </div>\n      ) : (\n        <div className=\"form-wrapper-login\">\n          <form className=\"form\" action=\"\">\n            <input\n              type=\"email\"\n              name=\"username\"\n              ref={email}\n              placeholder=\"username/email\"\n            />\n            <input\n              type=\"password\"\n              name=\"password\"\n              ref={password}\n              placeholder=\"password\"\n            />\n            <button className=\"btn\" type=\"submit\" onClick={hundleSubmit}>\n              Login{\" \"}\n            </button>{\" \"}\n            <h4>\n              Not a member yet ? <Link to=\"/register\"> Sign up now </Link>{\" \"}\n            </h4>{\" \"}\n            <h4>\n              <Link to=\"/reset-password\"> Forgot password ? </Link>{\" \"}\n            </h4>{\" \"}\n          </form>{\" \"}\n        </div>\n      )}{\" \"}\n    </>\n  );\n}\n\nexport default Login;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Auth/Register.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Auth/Forgot.js",["266","267","268"],"import { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { SAVE_FORM_DATA } from \"../../actions\";\nimport { getCode } from \"../../client\";\nimport { postCode } from \"../../client\";\n\nfunction Forgot({ formdata, dispatch }) {\n  const [data, setData] = useState(null);\n  const [code, setCode] = useState(null);\n  const [showcode, setShowcode] = useState(null);\n\n  const formRef = useRef();\n\n  let email = useRef(\"\");\n  let usercode = useRef(\"\");\n  let newpassword = useRef(\"\");\n\n  let fdata;\n\n  const handleSubmitf = async (e) => {\n    e.preventDefault();\n    fdata = { email: email.current.value };\n    dispatch({ type: SAVE_FORM_DATA, payload: { ...fdata } });\n    let responsecode = await getCode(fdata);\n    formRef.current.reset();\n    setCode(responsecode.code);\n    setShowcode(true);\n    setData(formdata);\n  };\n\n  const handleSubmits = async (e) => {\n    e.preventDefault();\n    fdata = {\n      newpassword: newpassword.current.value,\n      usercode: usercode.current.value,\n    };\n\n    fdata.email = formdata.email;\n    let responsecode = await postCode(fdata);\n    formRef.current.reset();\n    // setCode(responsecode.code);\n    // setShowcode(true);\n    // setData(email);\n  };\n  // useEffect(() => {\n  //   (async function () {\n  //     let responsecode = await getCode(formdata);\n  //   })();\n  // }, [code]);\n\n  return (\n    <div className=\"form-wrapper-forgot\">\n      {!data ? (\n        <form className=\"form\" action=\"\" ref={formRef}>\n          <input\n            type=\"email\"\n            placeholder=\"phone / email\"\n            name=\"email\"\n            ref={email}\n          />\n          <button className=\"btn\" onClick={handleSubmitf}>\n            Submit\n          </button>\n        </form>\n      ) : code ? (\n        <form className=\"form\" action=\"\" ref={formRef}>\n          <input\n            type=\"text\"\n            placeholder=\"Enter code\"\n            name=\"code\"\n            ref={usercode}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"New password\"\n            name=\"newpassword\"\n            ref={newpassword}\n          />\n          <button className=\"btn\" onClick={handleSubmits}>\n            Submit{\" \"}\n          </button>\n          {code\n            ? showcode && <h4>Your code is: {code}</h4>\n            : showcode && <h4>email is incorrect</h4>}\n        </form>\n      ) : (\n        <form className=\"form\" action=\"\">\n          <input type=\"text\" name=\"code\" value={usercode} />\n          <input type=\"text\" name=\"newpassword\" value={newpassword} />\n\n          {code\n            ? showcode && <h4>Your code is: {code}</h4>\n            : showcode && <h4>email is incorrect</h4>}\n        </form>\n      )}\n    </div>\n  );\n}\nfunction mapStateToprops(store) {\n  return { ...store };\n}\nexport default connect(mapStateToprops)(Forgot);\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Head/Home.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Head/Dashboard.js",[],["269","270"],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/ProtectRoute.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dashboard/index.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/client/index.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/client/client.js",["271","272","273","274","275","276","277"],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Profile/index.js",["278","279"],"import React from \"react\";\nimport avatar from \"../../assets/logo512r.png\";\nimport { connect } from \"react-redux\";\nimport { ImPencil } from \"react-icons/im\";\nimport { EDIT_USER } from \"../../actions\";\nimport { httpActions, getUserId } from \"../../client\";\nimport { useGet } from \"../../hooks\";\n\nconst { getProfile } = httpActions;\n\nfunction Index({ data, profile, dispatch }) {\n  const id = getUserId();\n\n  const { result: user, loading, refresh } = useGet(id, getProfile);\n\n  return user ? (\n    <div className=\"profile\">\n      <div className=\"avatar\">\n        <img className=\"aimg\" src={avatar} alt=\"\" />\n      </div>\n      <div className=\"details\">\n        <div className=\"pencil\" onClick={() => dispatch({ type: EDIT_USER })}>\n          <ImPencil />\n        </div>\n        {console.log(\"ttttttttttttttt\", user)}\n        <div className=\"pdetails\">\n          <h3 className=\"h3span\">First name:</h3> <h3>{user.fname}</h3>\n        </div>\n        <div className=\"pdetails\">\n          <h3 className=\"h3span\">Last name:</h3> <h3>{user.lname}</h3>\n        </div>\n        <div className=\"pdetails\">\n          <h3 className=\"h3span\">Email:</h3> <h3>{user.email}</h3>\n        </div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\nconst mapStateToprops = (store) => {\n  const { profile } = store;\n  return { ...store, profile: profile };\n};\n\nexport default connect(mapStateToprops)(Index);\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dashboard/Cards.js",["280","281","282","283","284","285","286"],"import React, { useState } from \"react\";\nimport avatar from \"../../assets/logo512r.png\";\nimport { connect } from \"react-redux\";\nimport { ADD_USER, ADD_USER_FORM, REMOVE_USER } from \"../../actions\";\nimport { FaEye, FaRegEye, FaTrash } from \"react-icons/fa\";\nimport Carditem from \"./Carditem\";\n\nfunction Cards({\n  user = [],\n  adduser,\n  dispatch,\n  children,\n  remove,\n  edituser,\n  viewuser,\n  adduserbtn,\n}) {\n  return (\n    <div className=\"cards\">\n      {!(user.length === 0) ? (\n        user.map((item) => <Carditem {...item} key={item.id} />)\n      ) : (\n        <div className=\"nouser\">\n          <h3> No user yet </h3>\n        </div>\n      )}\n      {adduser && children} {viewuser && children} {edituser && children}\n      {adduserbtn && (\n        <div className=\"cbtn\">\n          <button\n            className=\"btn\"\n            onClick={(e) => {\n              e.preventDefault();\n              dispatch({ type: ADD_USER_FORM });\n            }}\n          >\n            Add User\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction mapStateToprops(store) {\n  const { data, adduser } = store;\n  return { ...store, user: data, adduser: adduser };\n}\n\nexport default connect(mapStateToprops)(Cards);\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/reducer.js",["287","288","289"],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/actions.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Auth/Adduser.js",["290"],"import React, { useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { EXIT_ADD_FORM, ADD_USER } from \"../../actions\";\n\nfunction Adduser({ data, adduser, dispatch }) {\n  const fname = useRef(\"\");\n  const lname = useRef(\"\");\n  const email = useRef(\"\");\n  const phone = useRef(\"\");\n  const password = useRef(\"\");\n\n  const hundleSubmit = (e) => {\n    e.preventDefault();\n    dispatch({\n      type: ADD_USER,\n      payload: {\n        fname: fname.current.value,\n        lname: lname.current.value,\n        email: email.current.value,\n        phone: phone.current.value,\n        password: password.current.value,\n      },\n    });\n  };\n\n  return (\n    <div className=\"form-adduser\">\n      <h4 className=\"add-user-title\">Add New User</h4>\n      <form className=\"form\" action=\"\">\n        <input type=\"text\" name=\"fname\" ref={fname} placeholder=\"First Name\" />\n        <input type=\"text\" name=\"lname\" ref={lname} placeholder=\"Last Name\" />\n        <input type=\"email\" name=\"email\" ref={email} placeholder=\"Email\" />\n        <input type=\"text\" name=\"phone\" ref={phone} placeholder=\"Phone\" />\n        <input\n          type=\"text\"\n          name=\"password\"\n          ref={password}\n          placeholder=\"Password\"\n        />\n        <button className=\"btn\" onClick={(e) => hundleSubmit(e)}>\n          Save\n        </button>\n        <button\n          className=\"btn\"\n          onClick={(e) => {\n            e.preventDefault();\n            dispatch({ type: EXIT_ADD_FORM });\n          }}\n        >\n          Exit\n        </button>\n      </form>\n    </div>\n  );\n}\nfunction mapStateToprops(store) {\n  const { data, adduser } = store;\n  return { ...store, data: data, adduser: adduser };\n}\n\nexport default connect(mapStateToprops)(Adduser);\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dashboard/Carditem.js",["291","292","293"],"import React from \"react\";\nimport { ADD_USER, ADD_USER_FORM, REMOVE_USER, VIEW_USER } from \"../../actions\";\nimport avatar from \"../../assets/logo512r.png\";\nimport { FaEye, FaRegEye, FaTrash } from \"react-icons/fa\";\nimport { connect } from \"react-redux\";\n\nfunction Carditem(item) {\n  return (\n    <div className=\"card-items\" key={item.id} onClick={() => item.view()}>\n      <div className=\"eye\">\n        <FaRegEye />\n      </div>\n      <div className=\"delete\" onClick={() => item.remove()} key={item.id}>\n        <FaTrash />\n      </div>\n      <div className=\"username\">\n        <h3 className=\"h3span\">User Name:</h3>\n        <h3>{item.fname + \" \" + item.lname}</h3>\n      </div>\n      <div className=\"status\">\n        <h3 className=\"h3span\">Status:</h3> <h3>{item.status}</h3>\n      </div>\n      <div className=\"cavatar\">\n        <img className=\"cardimg\" src={avatar} alt=\"\" />\n      </div>\n    </div>\n  );\n}\nconst mapDispatchToprops = (dispatch, ownProps) => {\n  const { id } = ownProps;\n  return {\n    remove: () => dispatch({ type: REMOVE_USER, payload: { id } }),\n    view: () => dispatch({ type: VIEW_USER, payload: { ...ownProps } }),\n  };\n};\nexport default connect(null, mapDispatchToprops)(Carditem);\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dashboard/ViewUser.js",["294","295","296","297"],"import React, { useRef, useState } from \"react\";\nimport avatar from \"../../assets/logo512r.png\";\nimport { connect } from \"react-redux\";\nimport { EXIT_VEW_USER, EDIT_USER } from \"../../actions\";\n\nfunction ViewUser({ viewdata, dispatch, viewuser, edituser, viewusr }) {\n  const { id, fname, lname, email, status, role, phone } = viewdata;\n  const [value, setValue] = useState(viewdata);\n\n  return (\n    <div className=\"view\">\n      <div className=\"uavatar\">\n        <img className=\"uimg\" src={avatar} alt=\"\" />\n      </div>\n      <div className=\"udetails\">\n        <h4>\n          User name : {fname}-{lname}\n        </h4>\n        <h4>Email : {email}</h4>\n        <h4>Status : {status}</h4>\n        <h4>Role : {role}</h4>\n        <h4>Phone : {phone}</h4>\n      </div>\n      <div className=\"vbuttons\">\n        <button\n          className=\"btn\"\n          onClick={() => dispatch({ type: EXIT_VEW_USER })}\n        >\n          Exit\n        </button>\n        <button\n          className=\"btn\"\n          onClick={() =>\n            dispatch({ type: EDIT_USER, payload: { edit: \"profile\" } })\n          }\n        >\n          Edit\n        </button>\n      </div>\n    </div>\n  );\n}\nfunction mapStateToprops(store) {\n  return { ...store };\n}\n\nexport default connect(mapStateToprops)(ViewUser);\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Auth/Edituser.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dashboard/EditUsr.js",["298","299","300","301","302","303","304","305","306","307","308"],"import React, { useRef, useState } from \"react\";\nimport avatar from \"../../assets/logo512r.png\";\nimport { connect } from \"react-redux\";\nimport {\n  EXIT_VEW_USER,\n  EDIT_USER,\n  EXIT_EDIT_USER,\n  SAVE_UPDATES,\n} from \"../../actions\";\nimport Edituser from \"../Auth/Edituser\";\n\nfunction EditUsr({ viewdata, dispatch, viewuser, edituser, profile, viewusr }) {\n  const { id, fname, lname, email, status, role, phone } = viewdata || profile;\n  const initial = viewdata || profile;\n  const [value, setValue] = useState(initial);\n\n  return (\n    <div className=\"view\">\n      <div className=\"uavatar\">\n        <img className=\"uimg\" src={avatar} alt=\"\" />\n      </div>\n      {edituser && (\n        <form action=\"\" className=\"edetails\">\n          <div className=\"einput\">\n            <label className=\"elabel\" htmlFor=\"fname\">\n              First Name:\n            </label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={value.fname}\n              id=\"\"\n              onChange={(e) => setValue({ ...value, fname: e.target.value })}\n            />\n          </div>\n          <div className=\"einput\">\n            <label className=\"elabel\" htmlFor=\"lname\">\n              Last Name:\n            </label>\n            <input\n              type=\"text\"\n              name=\"lname\"\n              value={value.lname}\n              id=\"\"\n              onChange={(e) => setValue({ ...value, lname: e.target.value })}\n            />\n          </div>\n          <div className=\"einput\">\n            <label className=\"elabel\" htmlFor=\"email\">\n              Email:\n            </label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={value.email}\n              id=\"\"\n              onChange={(e) => setValue({ ...value, email: e.target.value })}\n            />\n          </div>\n          <div className=\"einput\">\n            <label className=\"elabel\" htmlFor=\"Status\">\n              Status:\n            </label>\n            <select\n              className=\"btn\"\n              name=\"\"\n              id=\"\"\n              onChange={(e) => setValue({ ...value, status: e.target.value })}\n            >\n              <option value=\"Active\">Activate</option>\n              <option value=\"Inactive\">Deactivate</option>\n            </select>\n          </div>\n          <div className=\"einput\">\n            <label className=\"elabel\" htmlFor=\"role\">\n              Role:\n            </label>\n            <input\n              type=\"text\"\n              name=\"role\"\n              value={value.role}\n              id=\"\"\n              onChange={(e) => setValue({ ...value, role: e.target.value })}\n            />\n          </div>\n          <div className=\"einput\">\n            <label className=\"elabel\" htmlFor=\"phone\">\n              Phone:\n            </label>\n            <input\n              type=\"text\"\n              name=\"phone\"\n              value={value.phone}\n              id=\"\"\n              onChange={(e) => setValue({ ...value, phone: e.target.value })}\n            />\n          </div>\n          <div className=\"vbuttons\">\n            <button\n              className=\"btn\"\n              onClick={(e) => {\n                e.preventDefault();\n                dispatch({ type: EXIT_EDIT_USER });\n              }}\n            >\n              Exit\n            </button>\n            <button\n              className=\"btn\"\n              onClick={(e) => {\n                e.preventDefault();\n                dispatch({ type: SAVE_UPDATES, payload: value });\n              }}\n            >\n              Save\n            </button>\n          </div>\n        </form>\n      )}\n    </div>\n  );\n}\n\nfunction mapStateToprops(store) {\n  return { ...store };\n}\n\nexport default connect(mapStateToprops)(EditUsr);\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/store.js",["309"],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/config/axiosConfig.js",["310","311"],"\"use strict\";\n\nimport axios from \"axios\";\nimport { store } from \"../store\";\nimport { fetchAccessToken } from \"../client\";\n\nlet instance;\nlet BASE_URL;\nlet isAlreadyFetchingAccessToken = false;\nlet subscribers = [];\n\nconst token = localStorage.getItem(\"token\");\n\nBASE_URL = process.env.REACT_APP_NECBOT_API_URL;\n\nconst defaultOptions = {\n    baseURL: BASE_URL,\n    withCredentials: true,\n    headers: {\n        \"Content-Type\": \"application/json\",\n    },\n};\n\nif (!instance) {\n    instance = axios.create(defaultOptions);\n    instance.interceptors.request.use(function(config) {\n        if (token) {\n            config.headers.Authorization = token ? `Bearer ${token}` : \"\";\n        }\n        return config;\n    });\n\n    function onAccessTokenFetched(access_token) {\n        subscribers = subscribers.filter((callback) => callback(access_token));\n    }\n\n    function addSubscriber(callback) {\n        subscribers.push(callback);\n    }\n\n    instance.interceptors.response.use(\n        function(response) {\n            return response.data;\n        },\n        function(error) {\n            const {\n                config,\n                response: { status },\n            } = error;\n            let originalRequest = config;\n\n            if (originalRequest.url === \"/auth/reset-password\") {\n                return;\n            } else {\n                if (status === 403) {\n                    if (!isAlreadyFetchingAccessToken) {\n                        isAlreadyFetchingAccessToken = true;\n\n                        fetchAccessToken().then((access_token) => {\n                            if (access_token) {\n                                const { AccessToken } = access_token.data;\n                                isAlreadyFetchingAccessToken = false;\n                                onAccessTokenFetched(AccessToken);\n                            }\n                        });\n                    }\n\n                    const retryOriginalRequest = new Promise((resolve) => {\n                        addSubscriber((AccessToken) => {\n                            const newtoken = \"Bearer \" + AccessToken;\n                            const newheaders = {\n                                ...originalRequest.headers,\n                                Authorization: newtoken,\n                            };\n                            const newrequest = {...originalRequest, headers: newheaders };\n                            const newinstance = axios.create();\n                            resolve(newinstance(newrequest));\n                        });\n                    });\n\n                    return retryOriginalRequest;\n                }\n            }\n\n            return Promise.reject(error);\n        }\n    );\n}\nexport default instance;","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/hooks/index.js",["312","313","314","315"],"/**\n * Custom hooks\n *\n * @author Benson Maruchu<benmaruchu@gmail.com>\n * @since 0.1.0\n */\n\n/* dependencies */\nimport { useEffect, useState, useCallback, useContext } from \"react\";\nimport { useToasts } from \"react-toast-notifications\";\n//import { ConfigsContext, LocaleContext, RolesContext } from \"../../configs\";\n\n/**\n * @function\n * @name useGetList\n * @description Custom hook for fetching results from the web\n * @param {Function} onGet Function to be called on fetch data event\n * @param {object} params Additional Params to be passed\n * @returns {*[]} Array which have data, functions\n * @version 0.1.0\n * @since 0.2.0\n */\nexport const useGetList = (onGet, params) => {\n    const { addToast } = useToasts();\n    const [loading, setLoading] = useState(false);\n    const [results, setResults] = useState([]);\n    const [pages, setPages] = useState(0);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [haveNextPage, setHaveNextPage] = useState(false);\n    const [havePreviousPage, setHavePreviousPage] = useState(false);\n    const [sort, sortBy] = useState(null);\n    const [searchQuery, searchBy] = useState(undefined);\n    const [shouldRefresh, setShouldRefresh] = useState(false);\n    const [filters, filterBy] = useState(null);\n\n    useEffect(() => {\n        setLoading(true);\n        onGet({ page: currentPage, sort, q: searchQuery, ...filters, ...params })\n            .then((response) => {\n                setResults(response.data);\n                setPages(response.pagination.totalPages);\n                if (currentPage > 1) {\n                    setHavePreviousPage(true);\n                } else {\n                    setHavePreviousPage(false);\n                }\n\n                if (currentPage < response.pagination.totalPages) {\n                    setHaveNextPage(true);\n                } else {\n                    setHaveNextPage(false);\n                }\n\n                setLoading(false);\n            })\n            .catch((error) => {\n                setLoading(false);\n                addToast(error.message, { appearance: \"error\" });\n            });\n    }, [currentPage, sort, filters, searchQuery, shouldRefresh]);\n\n    const refresh = useCallback(() => setShouldRefresh(!shouldRefresh), [\n        shouldRefresh,\n    ]);\n\n    return {\n        results,\n        pages,\n        currentPage,\n        havePreviousPage,\n        haveNextPage,\n        loading,\n        setCurrentPage,\n        sortBy,\n        searchBy,\n        refresh,\n        filterBy,\n    };\n};\n\n/**\n * @function\n * @name useGets\n * @description Custom hook for fetching results from the web\n * @param {Function} onGet Function to be called on fetch data event\n * @param {object} params Additional Params to be passed\n * @returns {*[]} Array which have data, functions\n * @version 0.1.0\n * @since 0.2.0\n */\nexport const useGets = (onGet, params) => {\n    const { addToast } = useToasts();\n    const [loading, setLoading] = useState(false);\n    const [results, setResults] = useState([]);\n    const [sort, sortBy] = useState(null);\n    const [searchQuery, searchBy] = useState(undefined);\n    const [shouldRefresh, setShouldRefresh] = useState(false);\n    const [filters, filterBy] = useState(null);\n\n    useEffect(() => {\n        setLoading(true);\n        onGet({ sort, q: searchQuery, ...filters, ...params })\n            .then((response) => {\n                setResults(response);\n                setLoading(false);\n            })\n            .catch((error) => {\n                setLoading(false);\n                addToast(error.message, { appearance: \"error\" });\n            });\n    }, [sort, filters, searchQuery, shouldRefresh]);\n\n    const refresh = useCallback(() => setShouldRefresh(!shouldRefresh), [\n        shouldRefresh,\n    ]);\n\n    return {\n        results,\n        loading,\n        sortBy,\n        searchBy,\n        refresh,\n        filterBy,\n    };\n};\n\n/**\n * @function\n * @name useGet\n * @description Custom hook for getting a single result from server\n *\n * @param {string} id Resource Id\n * @param {Function} onGet Client function invoked for retrieving data\n * @returns {*[]} Array for Result and loading state\n * @version 0.2.0\n * @since 0.1.0\n */\nexport const useGet = (id, onGet) => {\n    const { addToast } = useToasts();\n    const [loading, setLoading] = useState(false);\n    const [result, setResult] = useState(null);\n    const [shouldRefresh, setShouldRefresh] = useState(false);\n\n    useEffect(() => {\n        setLoading(true);\n\n        onGet(id)\n            .then((response) => {\n                setResult(response);\n                setLoading(false);\n            })\n            .catch((error) => {\n                setLoading(false);\n                addToast(error.message, { appearance: \"error\" });\n            });\n    }, [shouldRefresh]);\n\n    const refresh = useCallback(() => setShouldRefresh(!shouldRefresh), [\n        shouldRefresh,\n    ]);\n\n    return { result, loading, refresh };\n};\n\n/**\n * @function\n * @name useConfigs\n * @description Configs context hooks\n *\n * @returns {object} Configs Context\n *\n * @version 0.1.0\n * @since 0.1.0\n */\n// export const useConfigs = () => {\n//     return useContext(ConfigsContext);\n// };\n\n// export const useLocale = () => {\n//     return useContext(LocaleContext);\n// };\n\n// export const useRole = () => {\n//     return useContext(RolesContext);\n// };","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/index.js",["316","317","318","319","320","321","322"],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Navibar/index.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Menubar/sidebarData.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Menubar/index.js",["323","324","325"],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Forms/Stepform/ForgotPassword/ForgotPasswordForm.js",["326"],"import React from \"react\";\nimport { useForm, useStep } from \"react-hooks-helper\";\nimport ForgotPass from \"./ForgotPass\";\nimport ResetPass from \"./ResetPass\";\n\nfunction StepForm() {\n  const Default = {\n    email: \"\",\n    code: \"\",\n    newpass: \"\",\n    confirmpass: \"\",\n  };\n\n  const steps = [{ id: \"forgotPassword\" }, { id: \"resetpassword\" }];\n  const [formData, setForm] = useForm(Default);\n  const { step, navigation } = useStep({ steps, initialStep: 0 });\n  const props = { formData, setForm, navigation };\n\n  switch (step.id) {\n    case \"forgotPassword\":\n      return <ForgotPass {...props} />;\n    case \"resetpassword\":\n      return <ResetPass {...props} />;\n  }\n\n  return <div> </div>;\n}\n\nexport default StepForm;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Forms/Stepform/ForgotPassword/ForgotPass.js",["327","328","329"],"import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { getCode } from \"../../../../client\";\nimport Card from \"@material-ui/core/Card\";\n\nconst style = {\n  maxWidth: 300,\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nfunction ForgotPass({ formData, setForm, navigation }) {\n  const { email, code, newpass } = formData;\n\n  async function handle() {\n    let responsecode = \"1234\";\n    if (responsecode) {\n      navigation.next();\n    }\n  }\n\n  return (\n    <Container maxWidth=\"xs\">\n      <Card variant=\"outlined\" style={style}>\n        <h3>Forgot Password</h3>\n        <TextField\n          label=\"email / phone\"\n          value={email}\n          onChange={setForm}\n          name=\"email\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <Button\n          variant=\"contained\"\n          fullWidth\n          color=\"primary\"\n          style={{ marginTop: \"1rem\" }}\n          onClick={handle}\n        >\n          Submit\n        </Button>\n      </Card>\n    </Container>\n  );\n}\n\nexport default ForgotPass;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Forms/Stepform/ForgotPassword/ResetPass.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Forms/Login.js",["330","331","332"],"import React, { useRef, useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport { login } from \"../../../client/client\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Spinner from \"../../Spinner/Spiner\";\nimport \"./form.css\";\nconst style = {\n  maxWidth: 300,\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nconst spinerStyle = {\n  display: \"flex\",\n  flexDirection: \"rows\",\n  gap: \"12px\",\n};\n\nfunction Login() {\n  const { addToast } = useToasts();\n  const [loading, setLoading] = useState(false);\n\n  //   const [formData, setForm] = useState({});\n  const username = useRef(\"\");\n  const password = useRef(\"\");\n  const formref = useRef();\n\n  async function handle() {\n    try {\n      setLoading(true);\n      const response = await login({\n        username: username.current.value,\n        password: password.current.value,\n      });\n      formref.current.reset();\n      if (response) {\n        setLoading(false);\n        addToast(\"... was created successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n      }\n      setLoading(false);\n      addToast(\"Wrong Credentials!\", { appearance: \"error\" });\n    } catch (error) {\n      setLoading(false);\n      addToast(\"Failed\", { appearance: \"error\" });\n    }\n  }\n\n  return (\n    <div className=\"login-form\">\n      <Card variant=\"outlined\" style={style}>\n        <h3> Sign in </h3>{\" \"}\n        <TextField\n          label=\"Email \"\n          margin=\"normal\"\n          inputRef={username}\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n          ref={formref}\n        />{\" \"}\n        <TextField\n          label=\"Password \"\n          margin=\"normal\"\n          inputRef={password}\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n          ref={formref}\n        />{\" \"}\n        <Button\n          variant=\"contained\"\n          fullWidth\n          color=\"primary\"\n          style={{ marginTop: \"1rem\" }}\n          onClick={handle}\n        >\n          {loading ? (\n            <div style={spinerStyle}>\n              <Spinner loading={loading} /> Loading...{\" \"}\n            </div>\n          ) : (\n            \"Login\"\n          )}{\" \"}\n        </Button>{\" \"}\n        <h4>\n          <Link to=\"/reset-password\" style={{ textDecoration: \"none\" }}>\n            Forgot password ?\n          </Link>{\" \"}\n        </h4>{\" \"}\n      </Card>{\" \"}\n    </div>\n  );\n}\n\nexport default Login;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Forms/ForgotPassword/ForgotPasswordForm.js",["333"],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Forms/ForgotPassword/ForgotPass.js",["334","335","336","337","338"],"import React, { useRef, useState, useEffect } from \"react\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { getCode } from \"../../../../client\";\nimport Card from \"@material-ui/core/Card\";\n\nconst style = {\n  maxWidth: 300,\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nfunction ForgotPass({ formData, setForm, navigation }) {\n  const { addToast } = useToasts();\n  const [loading, setLoading] = useState(false);\n  const { email, code, newpass } = formData;\n\n  async function handle() {\n    setLoading(true);\n    try {\n      const { code } = await getCode({ email });\n\n      if (code) {\n        setLoading(false);\n        addToast(\"... your recovery code successfully sent to your phone\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n        navigation.next();\n        return;\n      }\n      setLoading(false);\n      addToast(\"Account Not found!\", { appearance: \"error\" });\n    } catch (error) {\n      setLoading(false);\n      addToast(\"Failed\", { appearance: \"error\" });\n    }\n  }\n\n  return (\n    <Container maxWidth=\"xs\" className=\"login-form\">\n      <Card variant=\"outlined\" style={style}>\n        <h3> Forgot Password </h3>{\" \"}\n        <TextField\n          label=\"email / phone\"\n          value={email}\n          onChange={setForm}\n          name=\"email\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <Button\n          variant=\"contained\"\n          fullWidth\n          color=\"primary\"\n          style={{ marginTop: \"1rem\" }}\n          onClick={handle}\n        >\n          Submit{\" \"}\n        </Button>{\" \"}\n      </Card>{\" \"}\n    </Container>\n  );\n}\n\nexport default ForgotPass;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Forms/ForgotPassword/ResetPass.js",["339","340","341"],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Navibar/Navbar.js",["342","343","344","345","346"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\nimport { SidebarData } from \"./Menubar/sidebarData\";\nimport * as FaIcons from \"react-icons/fa\";\nimport * as AiIcons from \"react-icons/ai\";\nimport * as IoIcons from \"react-icons/io\";\nimport \"../Navibar/navbar.css\";\nimport \"../home.css\";\n\nfunction Navbar() {\n  const [sidebar, setSidebar] = useState(false);\n  const showsidebar = () => setSidebar(!sidebar);\n  return (\n    <>\n      <div className=\"navba\">\n        <Container className=\"navcontaine\">\n          <Link to=\"#\" className=\"navlinks1\">\n            Home{\" \"}\n          </Link>{\" \"}\n          <Link to=\"#\" className=\"navlinks1\">\n            Feeds{\" \"}\n          </Link>{\" \"}\n          <Link to=\"/login\" className=\"navlinks1\">\n            Login{\" \"}\n          </Link>{\" \"}\n        </Container>{\" \"}\n      </div>{\" \"}\n    </>\n  );\n}\n\nexport default Navbar;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Navibar/Menubar/sidebarData.js",["347"],"import React from \"react\";\nimport * as FaIcons from \"react-icons/fa\";\nimport * as AiIcons from \"react-icons/ai\";\nimport * as IoIcons from \"react-icons/io\";\n\nexport const SidebarData = [{\n        title: \"Home\",\n        path: \"/\",\n        icon: < AiIcons.AiFillHome / > ,\n        cName: \"nav-text\",\n    },\n    {\n        title: \"Feeds\",\n        path: \"/feeds\",\n        icon: < IoIcons.IoMdPeople / > ,\n        cName: \"nav-text\",\n    },\n    {\n        title: \"Login\",\n        path: \"/login\",\n        icon: < IoIcons.IoMdHelpCircle / > ,\n        cName: \"nav-text\",\n    },\n];","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Footer/Footer.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Spinner/Spiner.js",["348"],"import React from \"react\";\nimport { useState } from \"react\";\nimport { css } from \"@emotion/core\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\n// Can be a string as well. Need to ensure each key-value pair ends with ;\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: #fff;\n`;\n\nfunction Spiner({ loading }) {\n  let [color, setColor] = useState(\"#ffffff\");\n\n  return (\n    <div className=\"\">\n      <ClipLoader color={color} loading={loading} css={override} size={25} />\n    </div>\n  );\n}\n\nexport default Spiner;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/index.js",["349"],"import React from \"react\";\nimport { useForm, useStep } from \"react-hooks-helper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Owner from \"./Owner\";\nimport InspectionForm from \"./InspectionForm\";\nimport VehicleInfo from \"./VehicleInformatin\";\nimport VehicleInfoCont from \"./VehicleInfoCont\";\nimport EngineType from \"./EngineType\";\nimport ConversionKitInfo from \"./ConversionKitInfo\";\nimport CgnCylinderInfo from \"./CgnCylinderInfo\";\nimport CgnCylinderInfoCont from \"./CgnCylinderInfoCont\";\nimport Preview from \"./Preview\";\nimport \"./reg.css\";\n\nfunction Index() {\n  const Default = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    plateno: \"\",\n    location: \"\",\n    newInstallation: \"\",\n    periodic: \"\",\n    afterAccident: \"\",\n    ownername: \"\",\n    vihecleRegno: \"\",\n    manYear: \"\",\n    make: \"\",\n    model: \"\",\n    chasisno: \"\",\n    engineno: \"\",\n    milliege: \"\",\n    biFuel: \"\",\n    Dedicated: \"\",\n    DualFuel: \"\",\n    type: \"\",\n    manufacturer: \"\",\n    serialno: \"\",\n    installername: \"\",\n    cylinderno3: \"3\",\n    cylinderposition3: \"\",\n    cylindertype3: \"\",\n    cmanufacturer3: \"\",\n    cmanuContact3: \"\",\n    servicepressure3: \"\",\n    cmanufacturedDate3: \"\",\n    waterVolume3: \"\",\n    expiryDate3: \"\",\n    tbscertificate3: \"\",\n    cylinderno1: \"1\",\n    cylinderposition1: \"\",\n    cylindertype1: \"\",\n    cmanufacturer1: \"\",\n    cmanuContact1: \"\",\n    servicepressure1: \"\",\n    cmanufacturedDate1: \"\",\n    waterVolume1: \"\",\n    expiryDate1: \"\",\n    tbscertificate1: \"\",\n    cylinderno2: \"2\",\n    cylinderposition2: \"\",\n    cylindertype2: \"\",\n    cmanufacturer2: \"\",\n    cmanuContact2: \"\",\n    servicepressure2: \"\",\n    cmanufacturedDate2: \"\",\n    waterVolume2: \"\",\n    expiryDate2: \"\",\n    tbscertificate2: \"\",\n  };\n  const steps = [\n    { id: \"Owner\" },\n    { id: \"Inspection-type\" },\n    { id: \"Vehicle-information\" },\n    { id: \"Vehicle-informationCont\" },\n    { id: \"Type-of-ngv\" },\n    { id: \"Conversion-kit-information\" },\n    { id: \"Cng-cylinders-information\" },\n    { id: \"Cng-cylinders-informationCont\" },\n    { id: \"preview\" },\n  ];\n  const [formData, setForm] = useForm(Default);\n  const { step, navigation } = useStep({ steps, initialStep: 0 });\n  const props = { formData, setForm, navigation };\n\n  switch (step.id) {\n    case \"Owner\":\n      return (\n        <Grid\n          container\n          justify=\"center\"\n          direction=\"column\"\n          alignContent=\"center\"\n          style={{ height: \"100hv\", border: \"3px\", boxSizing: \"border-box\" }}\n        >\n          <Owner {...props} />{\" \"}\n        </Grid>\n      );\n\n    case \"Inspection-type\":\n      return (\n        <Grid\n          container\n          justify=\"center\"\n          direction=\"column\"\n          alignContent=\"center\"\n          style={{\n            height: \"100hv\",\n            border: \"3px\",\n            boxSizing: \"border-box\",\n            paddingTop: \"40px\",\n          }}\n        >\n          <InspectionForm {...props} />{\" \"}\n        </Grid>\n      );\n    case \"Vehicle-information\":\n      return (\n        <Grid\n          container\n          justify=\"center\"\n          direction=\"column\"\n          alignContent=\"center\"\n          style={{\n            height: \"100hv\",\n            border: \"9px\",\n            boxSizing: \"border-box\",\n            paddingTop: \"40px\",\n          }}\n        >\n          <VehicleInfo {...props} />{\" \"}\n        </Grid>\n      );\n    case \"Vehicle-informationCont\":\n      return (\n        <Grid\n          container\n          justify=\"center\"\n          direction=\"column\"\n          alignContent=\"center\"\n          style={{\n            height: \"100hv\",\n            border: \"3px\",\n            boxSizing: \"border-box\",\n            paddingTop: \"40px\",\n          }}\n        >\n          <VehicleInfoCont {...props} />{\" \"}\n        </Grid>\n      );\n    case \"Type-of-ngv\":\n      return (\n        <Grid\n          container\n          justify=\"center\"\n          direction=\"column\"\n          alignContent=\"center\"\n          style={{\n            height: \"100hv\",\n            border: \"3px\",\n            boxSizing: \"border-box\",\n            paddingTop: \"40px\",\n          }}\n        >\n          <EngineType {...props} />{\" \"}\n        </Grid>\n      );\n    case \"Conversion-kit-information\":\n      return (\n        <Grid\n          container\n          justify=\"center\"\n          direction=\"column\"\n          alignContent=\"center\"\n          style={{\n            height: \"100hv\",\n            border: \"3px\",\n            boxSizing: \"border-box\",\n            paddingTop: \"40px\",\n          }}\n        >\n          <ConversionKitInfo {...props} />{\" \"}\n        </Grid>\n      );\n    case \"Cng-cylinders-information\":\n      return (\n        <Grid\n          container\n          justify=\"center\"\n          direction=\"column\"\n          alignContent=\"center\"\n          style={{\n            height: \"100hv\",\n            border: \"3px\",\n            boxSizing: \"border-box\",\n          }}\n        >\n          <CgnCylinderInfo {...props} />{\" \"}\n        </Grid>\n      );\n    case \"Cng-cylinders-informationCont\":\n      return (\n        <Grid\n          container\n          justify=\"center\"\n          direction=\"column\"\n          alignContent=\"center\"\n          style={{\n            height: \"100hv\",\n            border: \"3px\",\n            boxSizing: \"border-box\",\n          }}\n        >\n          <CgnCylinderInfoCont {...props} />{\" \"}\n        </Grid>\n      );\n    case \"preview\":\n      return (\n        <Box\n          p={5}\n          style={{\n            border: \"3px\",\n            boxSizing: \"border-box\",\n\n            maxHeight: \"550px\",\n            overflowY: \"auto\",\n          }}\n        >\n          <Preview {...props} />{\" \"}\n        </Box>\n      );\n  }\n\n  return <div> </div>;\n}\n\nexport default Index;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/InspectionForm.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/VehicleInformatin.js",["350","351","352","353","354","355","356","357"],"import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\n\nconst style = {\n  maxWidth: 300,\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nfunction VehicleInfo({ formData, setForm, navigation }) {\n  const {\n    newInstallation,\n    periodic,\n    afterAccident,\n    ownername,\n    vihecleRegno,\n    manYear,\n    make,\n    model,\n    chasisno,\n    engineno,\n    milliege,\n  } = formData;\n\n  async function handle() {\n    let responsecode = \"1234\";\n    if (responsecode) {\n      navigation.next();\n    }\n  }\n  const Default = {\n    newInstallation: \"\",\n    periodic: \"\",\n    afterAccident: \"\",\n    ownername: \"\",\n    vihecleRegno,\n    manYear: \"\",\n    make: \"\",\n    model: \"\",\n    chasisno: \"\",\n    engineno: \"\",\n    milliege: \"\",\n  };\n  return (\n    <Container maxWidth=\"xs\">\n      <Card variant=\"outlined\" style={style}>\n        <h3> VEHICLE INFORMATION </h3>{\" \"}\n        <TextField\n          label=\"Name of Owner\"\n          value={ownername}\n          onChange={setForm}\n          name=\"newInstallation\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Vehicle Reg No\"\n          value={vihecleRegno}\n          onChange={setForm}\n          name=\"vihecleRegno\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Year of Man.\"\n          value={manYear}\n          onChange={setForm}\n          name=\"manYear\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Make\"\n          value={make}\n          onChange={setForm}\n          name=\"make\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <div style={{ marginTop: \"1rem\" }}>\n          {\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"2px\" }}\n            onClick={() => navigation.previous()}\n          >\n            Back{\" \"}\n          </Button>{\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"1rem\" }}\n            onClick={handle}\n          >\n            Next{\" \"}\n          </Button>{\" \"}\n        </div>{\" \"}\n      </Card>{\" \"}\n    </Container>\n  );\n}\n\nexport default VehicleInfo;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/VehicleInfoCont.js",["358","359","360","361","362","363","364"],"import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\n\nconst style = {\n  maxWidth: 300,\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nfunction VehicleInfocont({ formData, setForm, navigation }) {\n  const {\n    newInstallation,\n    periodic,\n    afterAccident,\n    ownername,\n    vihecleRegno,\n    manYear,\n    make,\n    model,\n    chasisno,\n    engineno,\n    milliege,\n  } = formData;\n\n  async function handle() {\n    let responsecode = \"1234\";\n    if (responsecode) {\n      navigation.next();\n    }\n  }\n  const Default = {\n    newInstallation: \"\",\n    periodic: \"\",\n    afterAccident: \"\",\n    ownername: \"\",\n    vihecleRegno,\n    manYear: \"\",\n    make: \"\",\n    model: \"\",\n    chasisno: \"\",\n    engineno: \"\",\n    milliege: \"\",\n  };\n  return (\n    <Container maxWidth=\"xs\">\n      <Card variant=\"outlined\" style={style}>\n        <h3> Continuation... </h3>{\" \"}\n        <TextField\n          label=\"Model\"\n          value={model}\n          onChange={setForm}\n          name=\"model\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Chasis No or VIN\"\n          value={chasisno}\n          onChange={setForm}\n          name=\"chasisno\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Engine No / Type\"\n          value={engineno}\n          onChange={setForm}\n          name=\"engineno\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Milleage at Inspection (km)\"\n          value={milliege}\n          onChange={setForm}\n          name=\"milliege\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <div style={{ marginTop: \"1rem\" }}>\n          {\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"2px\" }}\n            onClick={() => navigation.previous()}\n          >\n            Back{\" \"}\n          </Button>{\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"1rem\" }}\n            onClick={handle}\n          >\n            Next{\" \"}\n          </Button>{\" \"}\n        </div>{\" \"}\n      </Card>{\" \"}\n    </Container>\n  );\n}\n\nexport default VehicleInfocont;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/EngineType.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/ConversionKitInfo.js",["365"],"import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\n\nconst style = {\n  maxWidth: 300,\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nfunction ConversionKit({ formData, setForm, navigation }) {\n  const { type, serialno, manufacturer, installername } = formData;\n\n  async function handle() {\n    let responsecode = \"1234\";\n    if (responsecode) {\n      navigation.next();\n    }\n  }\n\n  return (\n    <Container maxWidth=\"xs\">\n      <Card variant=\"outlined\" style={style}>\n        <h3> CONVERSION KIT INFORMATION </h3>{\" \"}\n        <TextField\n          label=\"Manufacturer\"\n          value={manufacturer}\n          onChange={setForm}\n          name=\"manufacturer\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Serial No\"\n          value={serialno}\n          onChange={setForm}\n          name=\"serialno\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Name of Installer\"\n          value={installername}\n          onChange={setForm}\n          name=\"installername\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <div style={{ marginTop: \"1rem\" }}>\n          {\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"2px\" }}\n            onClick={() => navigation.previous()}\n          >\n            Back{\" \"}\n          </Button>{\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"1rem\" }}\n            onClick={handle}\n          >\n            Next{\" \"}\n          </Button>{\" \"}\n        </div>{\" \"}\n      </Card>{\" \"}\n    </Container>\n  );\n}\n\nexport default ConversionKit;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/CgnCylinderInfoCont.js",["366"],"import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\n\nconst style = {\n  display: \"flex\",\n  flexDirection: \"row\",\n};\nconst stylemain = {\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n\n  width: \"800px\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nfunction CgnCylinderInfoCont({ formData, setForm, navigation }) {\n  const {\n    servicepressure1,\n    cmanufacturedDate1,\n    waterVolume1,\n    expiryDate1,\n    tbscertificate1,\n    servicepressure2,\n    cmanufacturedDate2,\n    waterVolume2,\n    expiryDate2,\n    tbscertificate2,\n    servicepressure3,\n    cmanufacturedDate3,\n    waterVolume3,\n    expiryDate3,\n    tbscertificate3,\n  } = formData;\n\n  async function handle() {\n    let responsecode = \"1234\";\n    if (responsecode) {\n      navigation.next();\n    }\n  }\n\n  return (\n    <Container>\n      <Card style={stylemain}>\n        <h3> CNG CYLINDERS INFORMATION Cont ... </h3>{\" \"}\n        <Card fullWidth style={style}>\n          <Card>\n            <TextField\n              label=\"Service Pressure(MPa)\"\n              value={servicepressure1}\n              onChange={setForm}\n              name=\"servicepressure1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n            />\n            <TextField\n              label=\"Manufactured Date\"\n              value={cmanufacturedDate1}\n              onChange={setForm}\n              name=\"cmanufacturedDate1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n            />\n            <TextField\n              label=\"Water volume(litres)\"\n              value={waterVolume1}\n              onChange={setForm}\n              name=\"waterVolume1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n            />\n            <TextField\n              label=\"Expiry Date\"\n              value={expiryDate1}\n              onChange={setForm}\n              name=\"expiryDate1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n            />\n            <TextField\n              label=\"TBS certificare\"\n              value={tbscertificate1}\n              onChange={setForm}\n              name=\"tbscertificate1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n            />\n          </Card>{\" \"}\n          <Card>\n            <TextField\n              label=\"Service Pressure(MPa)\"\n              value={servicepressure2}\n              onChange={setForm}\n              name=\"servicepressure2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n            />\n            <TextField\n              label=\"Manufactured Date\"\n              value={cmanufacturedDate2}\n              onChange={setForm}\n              name=\"cmanufacturedDate2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n            />\n            <TextField\n              label=\"Water volume(litres)\"\n              value={waterVolume2}\n              onChange={setForm}\n              name=\"waterVolume2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n            />\n            <TextField\n              label=\"Expiry Date\"\n              value={expiryDate2}\n              onChange={setForm}\n              name=\"expiryDate2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n            />\n            <TextField\n              label=\"TBS certificare\"\n              value={tbscertificate2}\n              onChange={setForm}\n              name=\"tbscertificate2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n            />\n          </Card>{\" \"}\n          <Card>\n            <TextField\n              label=\"Service Pressure(MPa)\"\n              value={servicepressure3}\n              onChange={setForm}\n              name=\"servicepressure3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              fullWidth\n            />\n            <TextField\n              label=\"Manufactured Date\"\n              value={cmanufacturedDate3}\n              onChange={setForm}\n              name=\"cmanufacturedDate3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              fullWidth\n            />\n            <TextField\n              label=\"Water volume(litres)\"\n              value={waterVolume3}\n              onChange={setForm}\n              name=\"waterVolume3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              fullWidth\n            />\n            <TextField\n              label=\"Expiry Date\"\n              value={expiryDate3}\n              onChange={setForm}\n              name=\"expiryDate3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              fullWidth\n            />\n            <TextField\n              label=\"TBS certificare\"\n              value={tbscertificate3}\n              onChange={setForm}\n              name=\"tbscertificate3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              fullWidth\n            />\n          </Card>{\" \"}\n        </Card>{\" \"}\n        <div style={{ marginTop: \"1rem\" }}>\n          {\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"2px\" }}\n            onClick={() => navigation.previous()}\n          >\n            Back{\" \"}\n          </Button>{\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"1rem\" }}\n            onClick={() => navigation.next()}\n          >\n            Next{\" \"}\n          </Button>{\" \"}\n        </div>{\" \"}\n      </Card>{\" \"}\n    </Container>\n  );\n}\n\nexport default CgnCylinderInfoCont;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/CgnCylinderInfo.js",["367"],"import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\n\nconst style = {\n  display: \"flex\",\n  flexDirection: \"row\",\n};\nconst stylemain = {\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n\n  width: \"800px\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nfunction CgnCylinderInfo({ formData, setForm, navigation }) {\n  const {\n    cylinderno1,\n    cylinderposition1,\n    cylindertype1,\n    cmanufacturer1,\n    cmanuContact1,\n    cylinderno2,\n    cylinderposition2,\n    cylindertype2,\n    cmanufacturer2,\n    cmanuContact2,\n    cylinderno3,\n    cylinderposition3,\n    cylindertype3,\n    cmanufacturer3,\n    cmanuContact3,\n  } = formData;\n\n  async function handle() {\n    let responsecode = \"1234\";\n    if (responsecode) {\n      navigation.next();\n    }\n  }\n\n  return (\n    <Container>\n      <Card style={stylemain}>\n        <h3> CNG CYLINDERS INFORMATION </h3>{\" \"}\n        <Card fullWidth style={style}>\n          <Card>\n            <TextField\n              label=\"Cylinder No.\"\n              value={cylinderno1}\n              onChange={setForm}\n              name=\"cylinderno1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Cylinder position on vehicle\"\n              value={cylinderposition1}\n              onChange={setForm}\n              name=\"cylinderposition1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Cylinder Type\"\n              value={cylindertype1}\n              onChange={setForm}\n              name=\"cylindertype1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Manufacturer Name\"\n              value={cmanufacturer1}\n              onChange={setForm}\n              name=\"cmanufacturer1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Manufacturer Contact\"\n              value={cmanuContact1}\n              onChange={setForm}\n              name=\"cmanuContact1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n          </Card>{\" \"}\n          <Card>\n            <TextField\n              label=\"Cylinder No.\"\n              value={cylinderno2}\n              onChange={setForm}\n              name=\"cylinderno2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n            />\n            <TextField\n              label=\"Cylinder position on vehicle\"\n              value={cylinderposition2}\n              onChange={setForm}\n              name=\"cylinderposition2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Cylinder Type\"\n              value={cylindertype2}\n              onChange={setForm}\n              name=\"cylindertype2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Manufacturer Name\"\n              value={cmanufacturer2}\n              onChange={setForm}\n              name=\"cmanufacturer2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Manufacturer Contact\"\n              value={cmanuContact2}\n              onChange={setForm}\n              name=\"cmanuContact2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n          </Card>{\" \"}\n          <Card>\n            <TextField\n              label=\"Cylinder No.\"\n              value={cylinderno3}\n              onChange={setForm}\n              name=\"cylinderno3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Cylinder position on vehicle\"\n              value={cylinderposition3}\n              onChange={setForm}\n              name=\"cylinderposition3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Cylinder Type\"\n              value={cylindertype3}\n              onChange={setForm}\n              name=\"cylindertype3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Manufacturer Name\"\n              value={cmanufacturer3}\n              onChange={setForm}\n              name=\"cmanufacturer3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Manufacturer Contact\"\n              value={cmanuContact3}\n              onChange={setForm}\n              name=\"cmanuContact3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n          </Card>{\" \"}\n        </Card>{\" \"}\n        <div style={{ marginTop: \"1rem\" }}>\n          {\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"2px\" }}\n            onClick={() => navigation.previous()}\n          >\n            Back{\" \"}\n          </Button>{\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"1rem\" }}\n            onClick={() => navigation.next()}\n          >\n            Next{\" \"}\n          </Button>{\" \"}\n        </div>{\" \"}\n      </Card>{\" \"}\n    </Container>\n  );\n}\n\nexport default CgnCylinderInfo;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/Preview.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/RenderAccordion.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Pdf/Pdf.js",["368"],"import React from \"react\";\nimport ReactToPrint from \"react-to-print\";\nimport Regform from \"../Dash_board/Printform/Printform\";\n\nconst thStyle = {\n  fontFamily: \"Anton\",\n  fontWeight: \"normal\",\n  fontStyle: \"normal\",\n};\n\nclass ComponentToPrint extends React.Component {\n  render() {\n    return <Regform />;\n  }\n}\n\nclass Example extends React.Component {\n  render() {\n    return (\n      <div>\n        <ReactToPrint\n          trigger={() => <button> Print this out! </button>}\n          content={() => this.componentRef}\n        />{\" \"}\n        <ComponentToPrint ref={(el) => (this.componentRef = el)} />{\" \"}\n      </div>\n    );\n  }\n}\n\nexport default Example;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/Owner.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Printform/Printform.js",["369","370","371","372"],"import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport { borders } from \"@material-ui/system\";\nimport Box from \"@material-ui/core/Box\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport \"./table.css\";\n// import url from \"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/assets/signatures/1.jpg\";\nimport stamp from \"../../../assets/signatures/masaka.jpg\";\nimport signature from \"../../../assets/signatures/5.jpg\";\n\nconst defaultProps = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  bgcolor: \"background.paper\",\n  style: {\n    width: \"705px\",\n    height: \"3rem\",\n    marginLeft: \"45px\",\n    gap: \"35px\",\n  },\n  borderColor: \"text.primary\",\n};\n\nfunction Printform() {\n  return (\n    <Container style={{ minWidth: \"100vh\", width: \"21.8cm\" }}>\n      <div className=\"pdfform\">\n        <div className=\"pdftitle\">\n          <h4\n            className=\"title\"\n            style={{\n              width: \"fit-content\",\n              fontSize: \"12px\",\n              padding: \"30px 0px\",\n            }}\n          >\n            PILOT NGV PROGRAMME - TANZANIA\n          </h4>\n          <h2 className=\"title\" style={{ width: \"fit-content\" }}>\n            NGV INSPECTION CERTIFICATE\n          </h2>\n          <h4\n            className=\"title\"\n            style={{\n              width: \"fit-content\",\n              fontSize: \"14px\",\n              padding: \"20px 0px 0px 0px\",\n            }}\n          >\n            VALID FROM 6 FEB 2021 TO 6 AUG 2021\n          </h4>\n        </div>\n        <div className=\"inspectionType\">\n          <Box border={1} {...defaultProps}>\n            <h3\n              style={{ padding: \"0px 14px 0px 8px\", fontSize: \"14px\" }}\n              className=\"insp\"\n            >\n              INSPECTION TYPE:{\" \"}\n            </h3>{\" \"}\n            <h5 style={{ padding: \"0px 14px 0px 0px\" }} className=\"insp\">\n              New Installation [ ... ]\n            </h5>\n            <h5 style={{ padding: \"0px 13px 0px 0px\" }} className=\"insp\">\n              Periodic [ ... ]\n            </h5>\n            <h5 style={{ padding: \"0px 10px 0px 0px\" }} className=\"insp\">\n              After Accident [ ... ]\n            </h5>\n          </Box>\n        </div>\n\n        <table className=\"vehicleinfo\">\n          <thead>\n            <tr>\n              <th colspan=\"7\" style={{ background: \"#646060\", color: \"#fff\" }}>\n                VEHICLE INFORMATION\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr className=\"trow\">\n              <td style={{ width: \"145px\" }}>Name of Owner</td>\n              <td style={{ width: \"80px\" }}>Vehicle Reg. No</td>\n              <td style={{ width: \"80px\" }}>Year of man.</td>\n              <td style={{ width: \"80px\" }}>Make</td>\n              <td style={{ width: \"80px\" }}>Model </td>\n              <td style={{ width: \"auto\" }}>\n                Chassis No. or VIN Engine No/Type\n              </td>\n              <td style={{ width: \"80px\" }}>Mileage at Inspection (km)</td>\n            </tr>\n            <tr className=\"trow\">\n              <td></td>\n              <td></td>\n              <td></td>\n              <td></td>\n              <td></td>\n              <td>\n                3\n                <div styl={{ background: \"none\" }}>\n                  <div id=\"span1\" class=\"t\">\n                    1\n                  </div>\n                </div>\n              </td>\n              <td></td>\n            </tr>\n          </tbody>\n        </table>\n        <table className=\"vehicleinfo\">\n          <thead>\n            <tr>\n              <th colspan=\"7\" style={{ background: \"#646060\", color: \"#fff\" }}>\n                TYPE OF NGV\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr className=\"trow\">\n              <td style={{ width: \"235px\" }}>Bi-fuel [....]</td>\n              <td style={{ width: \"235px\" }}>Dedicated [....]</td>\n              <td style={{ width: \"235px\" }}>Dual fuel [....]</td>\n            </tr>\n          </tbody>\n        </table>\n        <table className=\"converkit\">\n          <thead>\n            <tr>\n              <th colspan=\"2\" style={{ background: \"#646060\", color: \"#fff\" }}>\n                CONVERSION KIT INFORMATION\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr className=\"\">\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                }}\n              >\n                Type\n              </td>\n              <td></td>\n            </tr>{\" \"}\n            <tr className=\"\">\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                }}\n              >\n                Manufacturer\n              </td>\n              <td></td>\n            </tr>{\" \"}\n            <tr className=\"\">\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                }}\n              >\n                Serial No\n              </td>\n              <td></td>\n            </tr>{\" \"}\n            <tr className=\"\">\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                }}\n              >\n                Name of Installer\n              </td>\n              <td></td>\n            </tr>{\" \"}\n          </tbody>\n        </table>\n        <table className=\"cylinder\">\n          <thead>\n            <tr>\n              <th\n                colspan=\"4\"\n                style={{\n                  background: \"#646060\",\n                  color: \"#fff\",\n                }}\n              >\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                  }}\n                >\n                  <div\n                    style={{\n                      width: \"210px\",\n                      paddingLeft: \"3px\",\n                      borderRight: \"1px  solid black\",\n                      height: \"100%\",\n                      paddingTop: \"0px\",\n                      paddingBottom: \"0px\",\n                    }}\n                  >\n                    CNG CYLINDERS INFROMATION\n                  </div>\n                  <div style={{ margin: \"auto\" }}>Cylinder No.</div>\n                </div>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr className=\"\" style={{ height: \"1px\" }}>\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                }}\n              >\n                Cylinder No.\n              </td>\n              <td>1</td>\n              <td>2</td>\n              <td>3</td>\n            </tr>{\" \"}\n            <tr className=\"\">\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                }}\n              >\n                Cylinder position in the Vehicle\n              </td>\n              <td></td> <td></td> <td></td>\n            </tr>{\" \"}\n            <tr className=\"\">\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                }}\n              >\n                Cylinder Type\n              </td>\n              <td></td> <td></td> <td></td>\n            </tr>{\" \"}\n            <tr className=\"\">\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                }}\n              >\n                Manufacture Name\n              </td>\n              <td></td> <td></td> <td></td>\n            </tr>{\" \"}\n            <tr className=\"\">\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                }}\n              >\n                Manufacturer Address/Contact\n              </td>\n              <td></td> <td></td> <td></td>\n            </tr>{\" \"}\n            <tr className=\"\">\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                }}\n              >\n                Service Pressure (MPa)\n              </td>\n              <td></td> <td></td> <td></td>\n            </tr>{\" \"}\n            <tr className=\"\">\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                }}\n              >\n                Manufactured Date\n              </td>\n              <td></td> <td></td> <td></td>\n            </tr>{\" \"}\n            <tr className=\"\">\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                }}\n              >\n                Water Volume (litres)\n              </td>\n              <td></td> <td></td> <td></td>\n            </tr>{\" \"}\n            <tr className=\"\">\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                }}\n              >\n                Expiry Date\n              </td>\n              <td></td> <td></td> <td></td>\n            </tr>{\" \"}\n            <tr className=\"\">\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                }}\n              >\n                Certificate of Conformity to Tanzania Standards (TBS)\n              </td>\n              <td></td> <td></td> <td></td>\n            </tr>{\" \"}\n          </tbody>\n        </table>\n        <table className=\"tbs\">\n          <thead>\n            <tr>\n              <th\n                colspan=\"2\"\n                style={{\n                  background: \"#646060\",\n                  color: \"#fff\",\n\n                  textAlign: \"center !important\",\n                }}\n              >\n                INSPECTION STANDARD OR CODE OF PRACTICE USED\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr className=\"\" style={{ height: \"1px\" }}>\n              <td>\n                <table className=\"inspectionstandards\">\n                  <thead>\n                    <tr>\n                      <th colspan=\"2\" style={{}}>\n                        <div\n                          style={{\n                            display: \"flex\",\n                            flexDirection: \"row\",\n                          }}\n                        >\n                          <div\n                            style={{\n                              paddingLeft: \"3px\",\n                              height: \"100%\",\n                              paddingTop: \"0px\",\n                              paddingBottom: \"0px\",\n                              fontStyle: \"italic\",\n                              fontWeight: \"bold\",\n                            }}\n                          >\n                            Item\n                          </div>\n                        </div>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr className=\"\" style={{ height: \"1px\" }}>\n                      <td\n                        style={{\n                          width: \"213px\",\n                          textAlign: \"start\",\n                          paddingLeft: \"5px\",\n                        }}\n                      >\n                        CNG cylinder mounting on the brackets\n                      </td>\n                    </tr>{\" \"}\n                    <tr className=\"\">\n                      <td\n                        style={{\n                          width: \"213px\",\n                          textAlign: \"start\",\n                          paddingLeft: \"5px\",\n                        }}\n                      >\n                        CNG cylinder Condition\n                      </td>\n                    </tr>{\" \"}\n                    <tr className=\"\">\n                      <td\n                        style={{\n                          width: \"213px\",\n                          textAlign: \"start\",\n                          paddingLeft: \"5px\",\n                        }}\n                      >\n                        PRD condition and vent line\n                      </td>\n                    </tr>{\" \"}\n                    <tr className=\"\">\n                      <td\n                        style={{\n                          width: \"213px\",\n                          textAlign: \"start\",\n                          paddingLeft: \"5px\",\n                        }}\n                      >\n                        Fuel line from CNG cylinder to Pressure Regulator\n                      </td>\n                    </tr>{\" \"}\n                    <tr className=\"\">\n                      <td\n                        style={{\n                          width: \"213px\",\n                          textAlign: \"start\",\n                          paddingLeft: \"5px\",\n                        }}\n                      >\n                        Pressure Regulator\n                      </td>\n                    </tr>{\" \"}\n                    <tr className=\"\">\n                      <td\n                        style={{\n                          width: \"213px\",\n                          textAlign: \"start\",\n                          paddingLeft: \"5px\",\n                        }}\n                      >\n                        Refuelling connection and mounting\n                      </td>\n                    </tr>{\" \"}\n                    <tr className=\"\">\n                      <td\n                        style={{\n                          width: \"213px\",\n                          textAlign: \"start\",\n                          paddingLeft: \"5px\",\n                        }}\n                      >\n                        Piping and hoses condition and connections under the\n                        bonnet\n                      </td>\n                    </tr>{\" \"}\n                    <tr className=\"\">\n                      <td\n                        style={{\n                          width: \"213px\",\n                          textAlign: \"start\",\n                          paddingLeft: \"5px\",\n                        }}\n                      >\n                        Dressing of wiring\n                      </td>\n                    </tr>{\" \"}\n                  </tbody>\n                </table>\n              </td>\n              <td>\n                <div\n                  style={{\n                    width: \"377px\",\n                    height: \"200px\",\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    gap: \"55px\",\n                  }}\n                >\n                  <div\n                    style={{\n                      border: \"1px solid black\",\n                      height: \"23px\",\n                      fontWeight: \"bold\",\n                      textAlign: \"start\",\n                      padding: \"2px\",\n                      fontStyle: \"italic\",\n                    }}\n                  >\n                    Inspection Procedure\n                  </div>{\" \"}\n                  <div style={{}}>\n                    <p\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        gap: \"15px\",\n                        paddingLeft: \"35px\",\n                        fontStyle: \"italic\",\n                        fontWeight: \"normal\",\n                      }}\n                    >\n                      <h5> &#8226;</h5>\n                      <h5\n                        style={{\n                          fontSize: \"12px\",\n                          width: \"400px\",\n                          textAlign: \"start\",\n                          fontWeight: \"normal\",\n                        }}\n                      >\n                        NFPA-52: Vehicular Gaseous Fuel Systems Code. 2010\n                        Edition\n                      </h5>{\" \"}\n                    </p>\n                    <p\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        gap: \"15px\",\n                        paddingLeft: \"35px\",\n                        fontStyle: \"italic\",\n                        fontWeight: \"normal\",\n                      }}\n                    >\n                      <h5> &#8226;</h5>\n                      <h5\n                        style={{\n                          fontSize: \"12px\",\n                          width: \"400px\",\n                          textAlign: \"start\",\n                          fontWeight: \"normal\",\n                        }}\n                      >\n                        CGA C-6.4: Compressed Gas Association - Standards for\n                        Visual Inspection of Steel Compressed Gas Cylinders,\n                        2001\n                      </h5>{\" \"}\n                    </p>\n                  </div>\n                </div>\n              </td>\n            </tr>{\" \"}\n          </tbody>\n        </table>\n        <div\n          style={{\n            width: \"705px\",\n            marginLeft: \"45px\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            marginTop: \"30px\",\n            gap: \"70px\",\n          }}\n        >\n          <div style={{ width: \"200px\", height: \"150px\", background: \"green\" }}>\n            <img style={{ width: \"200px\", height: \"150px\" }} src={signature} />\n          </div>\n          <div style={{ width: \"200px\", background: \"red\", height: \"120px\" }}>\n            <img style={{ width: \"200px\", height: \"150px\" }} src={stamp} />\n          </div>\n        </div>\n      </div>\n    </Container>\n  );\n}\n\nexport default Printform;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Charts/Spline.js",["373"],"import { Chart } from \"react-google-charts\";\nimport * as React from \"react\";\nimport { render } from \"react-dom\";\n\nconst options = {\n  title: \"Months vs. Number of cars inspected\",\n  hAxis: { title: \"Months\", viewWindow: { min: 0, max: 12 } },\n  vAxis: {\n    title: \"Number of cars inspected\",\n    viewWindow: { min: 0, max: 120 },\n  },\n  legend: \"none\",\n};\nconst data = [\n  [\"Months\", \"Number of cars inspected\"],\n  [0, 0],\n  [1, 5],\n  [2, 14],\n  [3, 5],\n  [4, 3],\n  [5, 7],\n  [6, 7],\n  [7, 10],\n  [8, 7],\n  [9, 7],\n  [10, 7],\n  [11, 7],\n  [12, 7],\n];\n\nfunction Spline() {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        background: \"red\",\n\n        width: \"auto\",\n      }}\n    >\n      <Chart\n        chartType=\"LineChart\"\n        data={data}\n        options={options}\n        width=\"100%\"\n        height=\"500px\"\n        legendToggle\n      />\n    </div>\n  );\n}\n\nexport default Spline;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Profile/Profile.js",["374","375","376","377","378","379"],{"ruleId":"380","replacedBy":"381"},{"ruleId":"382","replacedBy":"383"},{"ruleId":"384","severity":1,"message":"385","line":16,"column":10,"nodeType":"386","messageId":"387","endLine":16,"endColumn":18},{"ruleId":"384","severity":1,"message":"388","line":16,"column":20,"nodeType":"386","messageId":"387","endLine":16,"endColumn":30},{"ruleId":"384","severity":1,"message":"389","line":3,"column":8,"nodeType":"386","messageId":"387","endLine":3,"endColumn":12},{"ruleId":"384","severity":1,"message":"390","line":11,"column":7,"nodeType":"386","messageId":"387","endLine":11,"endColumn":12},{"ruleId":"384","severity":1,"message":"391","line":12,"column":7,"nodeType":"386","messageId":"387","endLine":12,"endColumn":13},{"ruleId":"392","severity":1,"message":"393","line":6,"column":3,"nodeType":"394","messageId":"395","endLine":12,"endColumn":4},{"ruleId":"380","replacedBy":"396"},{"ruleId":"382","replacedBy":"397"},{"ruleId":"384","severity":1,"message":"398","line":6,"column":19,"nodeType":"386","messageId":"387","endLine":6,"endColumn":29},{"ruleId":"384","severity":1,"message":"399","line":7,"column":9,"nodeType":"386","messageId":"387","endLine":7,"endColumn":16},{"ruleId":"384","severity":1,"message":"400","line":1,"column":20,"nodeType":"386","messageId":"387","endLine":1,"endColumn":29},{"ruleId":"384","severity":1,"message":"401","line":3,"column":10,"nodeType":"386","messageId":"387","endLine":3,"endColumn":14},{"ruleId":"384","severity":1,"message":"402","line":40,"column":9,"nodeType":"386","messageId":"387","endLine":40,"endColumn":21},{"ruleId":"380","replacedBy":"403"},{"ruleId":"382","replacedBy":"404"},{"ruleId":"384","severity":1,"message":"405","line":1,"column":10,"nodeType":"386","messageId":"387","endLine":1,"endColumn":19},{"ruleId":"384","severity":1,"message":"406","line":2,"column":10,"nodeType":"386","messageId":"387","endLine":2,"endColumn":15},{"ruleId":"384","severity":1,"message":"407","line":4,"column":10,"nodeType":"386","messageId":"387","endLine":4,"endColumn":20},{"ruleId":"384","severity":1,"message":"408","line":5,"column":10,"nodeType":"386","messageId":"387","endLine":5,"endColumn":15},{"ruleId":"384","severity":1,"message":"409","line":90,"column":17,"nodeType":"386","messageId":"387","endLine":90,"endColumn":28},{"ruleId":"410","severity":1,"message":"411","line":91,"column":28,"nodeType":"412","messageId":"413","endLine":91,"endColumn":30},{"ruleId":"384","severity":1,"message":"414","line":321,"column":23,"nodeType":"386","messageId":"387","endLine":321,"endColumn":29},{"ruleId":"384","severity":1,"message":"415","line":14,"column":25,"nodeType":"386","messageId":"387","endLine":14,"endColumn":32},{"ruleId":"384","severity":1,"message":"416","line":14,"column":34,"nodeType":"386","messageId":"387","endLine":14,"endColumn":41},{"ruleId":"384","severity":1,"message":"417","line":1,"column":17,"nodeType":"386","messageId":"387","endLine":1,"endColumn":25},{"ruleId":"384","severity":1,"message":"418","line":2,"column":8,"nodeType":"386","messageId":"387","endLine":2,"endColumn":14},{"ruleId":"384","severity":1,"message":"419","line":4,"column":10,"nodeType":"386","messageId":"387","endLine":4,"endColumn":18},{"ruleId":"384","severity":1,"message":"420","line":4,"column":35,"nodeType":"386","messageId":"387","endLine":4,"endColumn":46},{"ruleId":"384","severity":1,"message":"421","line":5,"column":10,"nodeType":"386","messageId":"387","endLine":5,"endColumn":15},{"ruleId":"384","severity":1,"message":"422","line":5,"column":17,"nodeType":"386","messageId":"387","endLine":5,"endColumn":25},{"ruleId":"384","severity":1,"message":"423","line":5,"column":27,"nodeType":"386","messageId":"387","endLine":5,"endColumn":34},{"ruleId":"384","severity":1,"message":"424","line":2,"column":5,"nodeType":"386","messageId":"387","endLine":2,"endColumn":18},{"ruleId":"384","severity":1,"message":"425","line":4,"column":5,"nodeType":"386","messageId":"387","endLine":4,"endColumn":20},{"ruleId":"384","severity":1,"message":"426","line":18,"column":5,"nodeType":"386","messageId":"387","endLine":18,"endColumn":15},{"ruleId":"384","severity":1,"message":"401","line":2,"column":10,"nodeType":"386","messageId":"387","endLine":2,"endColumn":14},{"ruleId":"384","severity":1,"message":"419","line":2,"column":10,"nodeType":"386","messageId":"387","endLine":2,"endColumn":18},{"ruleId":"384","severity":1,"message":"427","line":2,"column":20,"nodeType":"386","messageId":"387","endLine":2,"endColumn":33},{"ruleId":"384","severity":1,"message":"421","line":4,"column":10,"nodeType":"386","messageId":"387","endLine":4,"endColumn":15},{"ruleId":"384","severity":1,"message":"428","line":1,"column":17,"nodeType":"386","messageId":"387","endLine":1,"endColumn":23},{"ruleId":"384","severity":1,"message":"429","line":7,"column":11,"nodeType":"386","messageId":"387","endLine":7,"endColumn":13},{"ruleId":"384","severity":1,"message":"430","line":8,"column":10,"nodeType":"386","messageId":"387","endLine":8,"endColumn":15},{"ruleId":"384","severity":1,"message":"431","line":8,"column":17,"nodeType":"386","messageId":"387","endLine":8,"endColumn":25},{"ruleId":"384","severity":1,"message":"428","line":1,"column":17,"nodeType":"386","messageId":"387","endLine":1,"endColumn":23},{"ruleId":"384","severity":1,"message":"432","line":5,"column":3,"nodeType":"386","messageId":"387","endLine":5,"endColumn":16},{"ruleId":"384","severity":1,"message":"433","line":6,"column":3,"nodeType":"386","messageId":"387","endLine":6,"endColumn":12},{"ruleId":"384","severity":1,"message":"434","line":10,"column":8,"nodeType":"386","messageId":"387","endLine":10,"endColumn":16},{"ruleId":"384","severity":1,"message":"429","line":13,"column":11,"nodeType":"386","messageId":"387","endLine":13,"endColumn":13},{"ruleId":"384","severity":1,"message":"435","line":13,"column":15,"nodeType":"386","messageId":"387","endLine":13,"endColumn":20},{"ruleId":"384","severity":1,"message":"436","line":13,"column":22,"nodeType":"386","messageId":"387","endLine":13,"endColumn":27},{"ruleId":"384","severity":1,"message":"437","line":13,"column":29,"nodeType":"386","messageId":"387","endLine":13,"endColumn":34},{"ruleId":"384","severity":1,"message":"438","line":13,"column":36,"nodeType":"386","messageId":"387","endLine":13,"endColumn":42},{"ruleId":"384","severity":1,"message":"439","line":13,"column":44,"nodeType":"386","messageId":"387","endLine":13,"endColumn":48},{"ruleId":"384","severity":1,"message":"440","line":13,"column":50,"nodeType":"386","messageId":"387","endLine":13,"endColumn":55},{"ruleId":"441","severity":1,"message":"442","line":1,"column":1,"nodeType":"443","messageId":"444","endLine":1,"endColumn":14,"fix":"445"},{"ruleId":"441","severity":1,"message":"442","line":1,"column":1,"nodeType":"443","messageId":"444","endLine":1,"endColumn":14,"fix":"446"},{"ruleId":"384","severity":1,"message":"406","line":4,"column":10,"nodeType":"386","messageId":"387","endLine":4,"endColumn":15},{"ruleId":"384","severity":1,"message":"447","line":9,"column":44,"nodeType":"386","messageId":"387","endLine":9,"endColumn":54},{"ruleId":"448","severity":1,"message":"449","line":60,"column":8,"nodeType":"450","endLine":60,"endColumn":64,"suggestions":"451"},{"ruleId":"448","severity":1,"message":"449","line":111,"column":8,"nodeType":"450","endLine":111,"endColumn":51,"suggestions":"452"},{"ruleId":"448","severity":1,"message":"453","line":156,"column":8,"nodeType":"450","endLine":156,"endColumn":23,"suggestions":"454"},{"ruleId":"384","severity":1,"message":"455","line":12,"column":8,"nodeType":"386","messageId":"387","endLine":12,"endColumn":15},{"ruleId":"384","severity":1,"message":"456","line":13,"column":8,"nodeType":"386","messageId":"387","endLine":13,"endColumn":17},{"ruleId":"384","severity":1,"message":"457","line":19,"column":3,"nodeType":"386","messageId":"387","endLine":19,"endColumn":11},{"ruleId":"384","severity":1,"message":"458","line":21,"column":3,"nodeType":"386","messageId":"387","endLine":21,"endColumn":8},{"ruleId":"384","severity":1,"message":"415","line":30,"column":25,"nodeType":"386","messageId":"387","endLine":30,"endColumn":32},{"ruleId":"384","severity":1,"message":"416","line":30,"column":34,"nodeType":"386","messageId":"387","endLine":30,"endColumn":41},{"ruleId":"448","severity":1,"message":"459","line":46,"column":6,"nodeType":"450","endLine":46,"endColumn":12,"suggestions":"460"},{"ruleId":"384","severity":1,"message":"417","line":1,"column":17,"nodeType":"386","messageId":"387","endLine":1,"endColumn":25},{"ruleId":"461","severity":2,"message":"462","line":9,"column":21,"nodeType":"386","messageId":"463","endLine":9,"endColumn":28},{"ruleId":"461","severity":2,"message":"464","line":10,"column":47,"nodeType":"386","messageId":"463","endLine":10,"endColumn":58},{"ruleId":"465","severity":1,"message":"466","line":19,"column":3,"nodeType":"467","messageId":"468","endLine":24,"endColumn":4},{"ruleId":"384","severity":1,"message":"469","line":5,"column":10,"nodeType":"386","messageId":"387","endLine":5,"endColumn":17},{"ruleId":"384","severity":1,"message":"470","line":21,"column":18,"nodeType":"386","messageId":"387","endLine":21,"endColumn":22},{"ruleId":"384","severity":1,"message":"471","line":21,"column":24,"nodeType":"386","messageId":"387","endLine":21,"endColumn":31},{"ruleId":"384","severity":1,"message":"400","line":1,"column":35,"nodeType":"386","messageId":"387","endLine":1,"endColumn":44},{"ruleId":"384","severity":1,"message":"472","line":2,"column":16,"nodeType":"386","messageId":"387","endLine":2,"endColumn":26},{"ruleId":"384","severity":1,"message":"473","line":3,"column":8,"nodeType":"386","messageId":"387","endLine":3,"endColumn":17},{"ruleId":"465","severity":1,"message":"466","line":19,"column":3,"nodeType":"467","messageId":"468","endLine":24,"endColumn":4},{"ruleId":"384","severity":1,"message":"428","line":1,"column":17,"nodeType":"386","messageId":"387","endLine":1,"endColumn":23},{"ruleId":"384","severity":1,"message":"400","line":1,"column":35,"nodeType":"386","messageId":"387","endLine":1,"endColumn":44},{"ruleId":"384","severity":1,"message":"415","line":23,"column":10,"nodeType":"386","messageId":"387","endLine":23,"endColumn":17},{"ruleId":"384","severity":1,"message":"470","line":24,"column":18,"nodeType":"386","messageId":"387","endLine":24,"endColumn":22},{"ruleId":"384","severity":1,"message":"471","line":24,"column":24,"nodeType":"386","messageId":"387","endLine":24,"endColumn":31},{"ruleId":"384","severity":1,"message":"428","line":1,"column":17,"nodeType":"386","messageId":"387","endLine":1,"endColumn":23},{"ruleId":"384","severity":1,"message":"400","line":1,"column":35,"nodeType":"386","messageId":"387","endLine":1,"endColumn":44},{"ruleId":"384","severity":1,"message":"415","line":23,"column":10,"nodeType":"386","messageId":"387","endLine":23,"endColumn":17},{"ruleId":"384","severity":1,"message":"474","line":4,"column":10,"nodeType":"386","messageId":"387","endLine":4,"endColumn":21},{"ruleId":"384","severity":1,"message":"475","line":5,"column":13,"nodeType":"386","messageId":"387","endLine":5,"endColumn":20},{"ruleId":"384","severity":1,"message":"476","line":6,"column":13,"nodeType":"386","messageId":"387","endLine":6,"endColumn":20},{"ruleId":"384","severity":1,"message":"477","line":7,"column":13,"nodeType":"386","messageId":"387","endLine":7,"endColumn":20},{"ruleId":"384","severity":1,"message":"478","line":13,"column":9,"nodeType":"386","messageId":"387","endLine":13,"endColumn":20},{"ruleId":"384","severity":1,"message":"475","line":2,"column":13,"nodeType":"386","messageId":"387","endLine":2,"endColumn":20},{"ruleId":"384","severity":1,"message":"479","line":14,"column":15,"nodeType":"386","messageId":"387","endLine":14,"endColumn":23},{"ruleId":"465","severity":1,"message":"466","line":87,"column":3,"nodeType":"467","messageId":"468","endLine":233,"endColumn":4},{"ruleId":"384","severity":1,"message":"480","line":21,"column":5,"nodeType":"386","messageId":"387","endLine":21,"endColumn":20},{"ruleId":"384","severity":1,"message":"481","line":22,"column":5,"nodeType":"386","messageId":"387","endLine":22,"endColumn":13},{"ruleId":"384","severity":1,"message":"482","line":23,"column":5,"nodeType":"386","messageId":"387","endLine":23,"endColumn":18},{"ruleId":"384","severity":1,"message":"483","line":28,"column":5,"nodeType":"386","messageId":"387","endLine":28,"endColumn":10},{"ruleId":"384","severity":1,"message":"484","line":29,"column":5,"nodeType":"386","messageId":"387","endLine":29,"endColumn":13},{"ruleId":"384","severity":1,"message":"485","line":30,"column":5,"nodeType":"386","messageId":"387","endLine":30,"endColumn":13},{"ruleId":"384","severity":1,"message":"486","line":31,"column":5,"nodeType":"386","messageId":"387","endLine":31,"endColumn":13},{"ruleId":"384","severity":1,"message":"487","line":40,"column":9,"nodeType":"386","messageId":"387","endLine":40,"endColumn":16},{"ruleId":"384","severity":1,"message":"480","line":21,"column":5,"nodeType":"386","messageId":"387","endLine":21,"endColumn":20},{"ruleId":"384","severity":1,"message":"481","line":22,"column":5,"nodeType":"386","messageId":"387","endLine":22,"endColumn":13},{"ruleId":"384","severity":1,"message":"482","line":23,"column":5,"nodeType":"386","messageId":"387","endLine":23,"endColumn":18},{"ruleId":"384","severity":1,"message":"488","line":24,"column":5,"nodeType":"386","messageId":"387","endLine":24,"endColumn":14},{"ruleId":"384","severity":1,"message":"489","line":26,"column":5,"nodeType":"386","messageId":"387","endLine":26,"endColumn":12},{"ruleId":"384","severity":1,"message":"490","line":27,"column":5,"nodeType":"386","messageId":"387","endLine":27,"endColumn":9},{"ruleId":"384","severity":1,"message":"487","line":40,"column":9,"nodeType":"386","messageId":"387","endLine":40,"endColumn":16},{"ruleId":"384","severity":1,"message":"491","line":20,"column":11,"nodeType":"386","messageId":"387","endLine":20,"endColumn":15},{"ruleId":"384","severity":1,"message":"492","line":43,"column":18,"nodeType":"386","messageId":"387","endLine":43,"endColumn":24},{"ruleId":"384","severity":1,"message":"492","line":43,"column":18,"nodeType":"386","messageId":"387","endLine":43,"endColumn":24},{"ruleId":"384","severity":1,"message":"493","line":5,"column":7,"nodeType":"386","messageId":"387","endLine":5,"endColumn":14},{"ruleId":"384","severity":1,"message":"494","line":3,"column":10,"nodeType":"386","messageId":"387","endLine":3,"endColumn":17},{"ruleId":"384","severity":1,"message":"495","line":5,"column":8,"nodeType":"386","messageId":"387","endLine":5,"endColumn":22},{"ruleId":"496","severity":1,"message":"497","line":569,"column":13,"nodeType":"498","endLine":569,"endColumn":80},{"ruleId":"496","severity":1,"message":"497","line":572,"column":13,"nodeType":"498","endLine":572,"endColumn":76},{"ruleId":"384","severity":1,"message":"499","line":3,"column":10,"nodeType":"386","messageId":"387","endLine":3,"endColumn":16},{"ruleId":"384","severity":1,"message":"417","line":1,"column":17,"nodeType":"386","messageId":"387","endLine":1,"endColumn":25},{"ruleId":"384","severity":1,"message":"400","line":1,"column":27,"nodeType":"386","messageId":"387","endLine":1,"endColumn":36},{"ruleId":"384","severity":1,"message":"500","line":3,"column":10,"nodeType":"386","messageId":"387","endLine":3,"endColumn":19},{"ruleId":"384","severity":1,"message":"501","line":6,"column":10,"nodeType":"386","messageId":"387","endLine":6,"endColumn":16},{"ruleId":"384","severity":1,"message":"502","line":7,"column":9,"nodeType":"386","messageId":"387","endLine":7,"endColumn":19},{"ruleId":"384","severity":1,"message":"503","line":11,"column":41,"nodeType":"386","messageId":"387","endLine":11,"endColumn":49},"no-native-reassign",["504"],"no-negated-in-lhs",["505"],"no-unused-vars","'userData' is defined but never used.","Identifier","unusedVar","'getProfile' is defined but never used.","'Card' is defined but never used.","'login' is assigned a value but never used.","'forgot' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["504"],["505"],"'setIsLoged' is assigned a value but never used.","'history' is assigned a value but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'responsecode' is assigned a value but never used.",["504"],["505"],"'stringify' is defined but never used.","'store' is defined but never used.","'SAVE_TOKEN' is defined but never used.","'merge' is defined but never used.","'accessToken' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'plural' is assigned a value but never used.","'loading' is assigned a value but never used.","'refresh' is assigned a value but never used.","'useState' is defined but never used.","'avatar' is defined but never used.","'ADD_USER' is defined but never used.","'REMOVE_USER' is defined but never used.","'FaEye' is defined but never used.","'FaRegEye' is defined but never used.","'FaTrash' is defined but never used.","'ACTIVATE_USER' is defined but never used.","'DEACTIVATE_USER' is defined but never used.","'removeUser' is defined but never used.","'ADD_USER_FORM' is defined but never used.","'useRef' is defined but never used.","'id' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'EXIT_VEW_USER' is defined but never used.","'EDIT_USER' is defined but never used.","'Edituser' is defined but never used.","'fname' is assigned a value but never used.","'lname' is assigned a value but never used.","'email' is assigned a value but never used.","'status' is assigned a value but never used.","'role' is assigned a value but never used.","'phone' is assigned a value but never used.","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"506","text":"507"},{"range":"508","text":"507"},"'useContext' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'addToast', 'onGet', and 'params'. Either include them or remove the dependency array. If 'onGet' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["509"],["510"],"React Hook useEffect has missing dependencies: 'addToast', 'id', and 'onGet'. Either include them or remove the dependency array. If 'onGet' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["511"],"'Regform' is defined but never used.","'Printform' is defined but never used.","'Redirect' is defined but never used.","'Route' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'email', 'fname', 'initial', 'lname', 'phone', 'userRole', and 'username'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["512"],"no-undef","'sidebar' is not defined.","undef","'showsidebar' is not defined.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'getCode' is defined but never used.","'code' is assigned a value but never used.","'newpass' is assigned a value but never used.","'useHistory' is defined but never used.","'Container' is defined but never used.","'SidebarData' is defined but never used.","'FaIcons' is defined but never used.","'AiIcons' is defined but never used.","'IoIcons' is defined but never used.","'showsidebar' is assigned a value but never used.","'setColor' is assigned a value but never used.","'newInstallation' is assigned a value but never used.","'periodic' is assigned a value but never used.","'afterAccident' is assigned a value but never used.","'model' is assigned a value but never used.","'chasisno' is assigned a value but never used.","'engineno' is assigned a value but never used.","'milliege' is assigned a value but never used.","'Default' is assigned a value but never used.","'ownername' is assigned a value but never used.","'manYear' is assigned a value but never used.","'make' is assigned a value but never used.","'type' is assigned a value but never used.","'handle' is defined but never used.","'thStyle' is assigned a value but never used.","'borders' is defined but never used.","'BootstrapTable' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'render' is defined but never used.","'getUserId' is defined but never used.","'useGet' is defined but never used.","'getProfile' is assigned a value but never used.","'username' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[0,13],"",[0,13],{"desc":"513","fix":"514"},{"desc":"515","fix":"516"},{"desc":"517","fix":"518"},{"desc":"519","fix":"520"},"Update the dependencies array to be: [currentPage, sort, filters, searchQuery, shouldRefresh, onGet, params, addToast]",{"range":"521","text":"522"},"Update the dependencies array to be: [sort, filters, searchQuery, shouldRefresh, onGet, params, addToast]",{"range":"523","text":"524"},"Update the dependencies array to be: [addToast, id, onGet, shouldRefresh]",{"range":"525","text":"526"},"Update the dependencies array to be: [dispatch, email, fname, initial, lname, phone, user, userRole, username]",{"range":"527","text":"528"},[2102,2158],"[currentPage, sort, filters, searchQuery, shouldRefresh, onGet, params, addToast]",[3596,3639],"[sort, filters, searchQuery, shouldRefresh, onGet, params, addToast]",[4760,4775],"[addToast, id, onGet, shouldRefresh]",[1464,1470],"[dispatch, email, fname, initial, lname, phone, user, userRole, username]"]