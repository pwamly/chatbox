[{"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/index.js":"1","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/App.js":"2","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/index.js":"3","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Head/index.js":"4","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Head/Home.js":"5","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Head/Dashboard.js":"6","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/ProtectRoute.js":"7","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/client/index.js":"8","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/client/client.js":"9","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Profile/index.js":"10","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/reducer.js":"11","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/actions.js":"12","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/store.js":"13","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/config/axiosConfig.js":"14","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/hooks/index.js":"15","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/index.js":"16","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Navibar/index.js":"17","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Menubar/sidebarData.js":"18","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Menubar/index.js":"19","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Forms/Stepform/ForgotPassword/ForgotPasswordForm.js":"20","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Forms/Stepform/ForgotPassword/ForgotPass.js":"21","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Forms/Stepform/ForgotPassword/ResetPass.js":"22","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Forms/Login.js":"23","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Forms/ForgotPassword/ForgotPasswordForm.js":"24","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Forms/ForgotPassword/ForgotPass.js":"25","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Forms/ForgotPassword/ResetPass.js":"26","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Navibar/Navbar.js":"27","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Navibar/Menubar/sidebarData.js":"28","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Footer/Footer.js":"29","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Spinner/Spiner.js":"30","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/index.js":"31","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/InspectionForm.js":"32","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/VehicleInformatin.js":"33","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/VehicleInfoCont.js":"34","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/EngineType.js":"35","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/ConversionKitInfo.js":"36","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/CgnCylinderInfoCont.js":"37","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/CgnCylinderInfo.js":"38","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/Preview.js":"39","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/RenderAccordion.js":"40","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Pdf/Pdf.js":"41","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/Owner.js":"42","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Printform/Printform.js":"43","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Charts/Spline.js":"44","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Profile/Profile.js":"45","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Team/Index.js":"46","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Team/Regteam.js":"47","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Team/Table/Table.js":"48","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Report/Report.js":"49","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Report/Table/Table.js":"50","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Pdf/previe.js":"51","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Report/View.js":"52"},{"size":149,"mtime":1615786140699,"results":"53","hashOfConfig":"54"},{"size":1562,"mtime":1615841499626,"results":"55","hashOfConfig":"54"},{"size":960,"mtime":1615592446248,"results":"56","hashOfConfig":"54"},{"size":250,"mtime":1609344225763,"results":"57","hashOfConfig":"54"},{"size":302,"mtime":1609343793693,"results":"58","hashOfConfig":"54"},{"size":495,"mtime":1614415531116,"results":"59","hashOfConfig":"54"},{"size":517,"mtime":1615841686155,"results":"60","hashOfConfig":"54"},{"size":396,"mtime":1614415530748,"results":"61","hashOfConfig":"54"},{"size":14887,"mtime":1616064411072,"results":"62","hashOfConfig":"54"},{"size":1380,"mtime":1614415531132,"results":"63","hashOfConfig":"54"},{"size":3353,"mtime":1615829795525,"results":"64","hashOfConfig":"54"},{"size":841,"mtime":1615829150273,"results":"65","hashOfConfig":"54"},{"size":390,"mtime":1615749793455,"results":"66","hashOfConfig":"54"},{"size":2735,"mtime":1615393579272,"results":"67","hashOfConfig":"54"},{"size":5335,"mtime":1616059975693,"results":"68","hashOfConfig":"54"},{"size":2728,"mtime":1615922805850,"results":"69","hashOfConfig":"54"},{"size":2617,"mtime":1615752540458,"results":"70","hashOfConfig":"54"},{"size":873,"mtime":1615574163951,"results":"71","hashOfConfig":"54"},{"size":95,"mtime":1614385153969,"results":"72","hashOfConfig":"54"},{"size":719,"mtime":1614585039537,"results":"73","hashOfConfig":"54"},{"size":1369,"mtime":1614612303807,"results":"74","hashOfConfig":"54"},{"size":1852,"mtime":1615783942663,"results":"75","hashOfConfig":"54"},{"size":2846,"mtime":1615785983086,"results":"76","hashOfConfig":"54"},{"size":719,"mtime":1614613242248,"results":"77","hashOfConfig":"54"},{"size":2022,"mtime":1615389868559,"results":"78","hashOfConfig":"54"},{"size":2684,"mtime":1615401645652,"results":"79","hashOfConfig":"54"},{"size":946,"mtime":1615386234725,"results":"80","hashOfConfig":"54"},{"size":568,"mtime":1614715441366,"results":"81","hashOfConfig":"54"},{"size":216,"mtime":1614925281232,"results":"82","hashOfConfig":"54"},{"size":543,"mtime":1614703809707,"results":"83","hashOfConfig":"54"},{"size":7139,"mtime":1615884231127,"results":"84","hashOfConfig":"54"},{"size":2587,"mtime":1615881437504,"results":"85","hashOfConfig":"54"},{"size":2769,"mtime":1615852327660,"results":"86","hashOfConfig":"54"},{"size":2788,"mtime":1614842643581,"results":"87","hashOfConfig":"54"},{"size":2133,"mtime":1615372931136,"results":"88","hashOfConfig":"54"},{"size":2210,"mtime":1614842290121,"results":"89","hashOfConfig":"54"},{"size":7284,"mtime":1615879862172,"results":"90","hashOfConfig":"54"},{"size":7608,"mtime":1615877808032,"results":"91","hashOfConfig":"54"},{"size":6851,"mtime":1615963724764,"results":"92","hashOfConfig":"54"},{"size":1492,"mtime":1615759293071,"results":"93","hashOfConfig":"54"},{"size":658,"mtime":1615719285104,"results":"94","hashOfConfig":"54"},{"size":2057,"mtime":1615759633928,"results":"95","hashOfConfig":"54"},{"size":30291,"mtime":1616028706645,"results":"96","hashOfConfig":"54"},{"size":938,"mtime":1615310218652,"results":"97","hashOfConfig":"54"},{"size":7546,"mtime":1615829873988,"results":"98","hashOfConfig":"54"},{"size":433,"mtime":1615751019615,"results":"99","hashOfConfig":"54"},{"size":5660,"mtime":1615920196587,"results":"100","hashOfConfig":"54"},{"size":5671,"mtime":1615918916516,"results":"101","hashOfConfig":"54"},{"size":745,"mtime":1615726872374,"results":"102","hashOfConfig":"54"},{"size":13415,"mtime":1616065473871,"results":"103","hashOfConfig":"54"},{"size":645,"mtime":1614926701297,"results":"104","hashOfConfig":"54"},{"size":1581,"mtime":1615737103527,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"86wbd6",{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"108"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"108"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"123"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"108"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"140","usedDeprecatedRules":"108"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"143","usedDeprecatedRules":"108"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"108"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"108"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"154","messages":"155","errorCount":2,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"108"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"108"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"108"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"108"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"108"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"108"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"108"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"108"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"108"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"108"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"108"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"108"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"108"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"108"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"108"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"108"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"108"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"108"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"108"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"108"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"108"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"108"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"108"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"108"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"108"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"244","messages":"245","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"108"},"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/index.js",[],["247","248"],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/App.js",["249","250","251"],"import React from \"react\";\nimport {\n  Redirect,\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport { ProtectRoute } from \"./components/ProtectRoute\";\n\nimport Home from \"./components/Home\";\nimport Form from \"./components/Forms/Stepform/ForgotPassword/ForgotPasswordForm\";\n// import Dashboard from \"./components/Dashboard\";\nimport Dashboard from \"./components/Dash_board\";\nimport { Provider } from \"react-redux\";\nimport { ToastProvider } from \"react-toast-notifications\";\nimport { userData, getProfile } from \"./client/index\";\nimport { store } from \"./store\";\nimport Pdf from \"./components/Pdf/Pdf\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ToastProvider placement=\"top-center\">\n        <div className=\"site\">\n          <Router>\n            <Switch>\n              <Route exact path=\"/login\">\n                <Home />\n              </Route>{\" \"}\n              <Route exact path=\"/form\">\n                <Pdf />\n              </Route>{\" \"}\n              <ProtectRoute\n                path=\"/dashboard\"\n                exact\n                component={Dashboard}\n              ></ProtectRoute>{\" \"}\n              <ProtectRoute path=\"/dashboard\" component={Dashboard}>\n                {\" \"}\n              </ProtectRoute>{\" \"}\n              <Redirect exact to=\"/dashboard\" />\n              <Route path=\"*\" component={() => <h2> 404 Not Found </h2>} />\n            </Switch>{\" \"}\n          </Router>{\" \"}\n        </div>{\" \"}\n      </ToastProvider>{\" \"}\n    </Provider>\n  );\n}\n\nexport default App;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/index.js",["252","253","254"],"import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Card from \"@material-ui/core/Card\";\nimport Container from \"@material-ui/core/Container\";\nimport ForgotPassword from \"./Forms/ForgotPassword/ForgotPasswordForm\";\nimport Login from \"./Forms/Login\";\nimport Navbar from \"./Navibar/Navbar\";\nimport Footer from \"../Footer/Footer\";\nimport \"./home.css\";\n\nconst login = true;\nconst forgot = \"\";\n\nfunction index() {\n  return (\n    <>\n      {\" \"}\n      <div>\n        <Router>\n          <Navbar />\n          <Container className=\"main-home\">\n            <Switch>\n              <Route path=\"/login\">\n                <Login />\n              </Route>{\" \"}\n              <Route path=\"/reset-password\">\n                <ForgotPassword />\n              </Route>{\" \"}\n            </Switch>{\" \"}\n          </Container>{\" \"}\n        </Router>{\" \"}\n        <Footer />\n      </div>{\" \"}\n    </>\n  );\n}\n\nexport default index;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Head/index.js",["255"],"import React from \"react\";\nimport Home from \"./Home\";\nimport Dashboard from \"./Dashboard\";\nconst login = false;\nfunction index() {\n  {\n    if (login) {\n      return <Dashboard />;\n    } else {\n      return <Home />;\n    }\n  }\n}\nexport default index;\n",["256","257"],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Head/Home.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Head/Dashboard.js",[],["258","259"],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/ProtectRoute.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/client/index.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/client/client.js",["260","261","262","263","264","265","266","267","268"],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Profile/index.js",["269","270"],"import React from \"react\";\nimport avatar from \"../../assets/logo512r.png\";\nimport { connect } from \"react-redux\";\nimport { ImPencil } from \"react-icons/im\";\nimport { EDIT_USER } from \"../../actions\";\nimport { httpActions, getUserId } from \"../../client\";\nimport { useGet } from \"../../hooks\";\n\nconst { getProfile } = httpActions;\n\nfunction Index({ data, profile, dispatch }) {\n  const id = getUserId();\n\n  const { result: user, loading, refresh } = useGet(id, getProfile);\n\n  return user ? (\n    <div className=\"profile\">\n      <div className=\"avatar\">\n        <img className=\"aimg\" src={avatar} alt=\"\" />\n      </div>\n      <div className=\"details\">\n        <div className=\"pencil\" onClick={() => dispatch({ type: EDIT_USER })}>\n          <ImPencil />\n        </div>\n        {console.log(\"ttttttttttttttt\", user)}\n        <div className=\"pdetails\">\n          <h3 className=\"h3span\">First name:</h3> <h3>{user.fname}</h3>\n        </div>\n        <div className=\"pdetails\">\n          <h3 className=\"h3span\">Last name:</h3> <h3>{user.lname}</h3>\n        </div>\n        <div className=\"pdetails\">\n          <h3 className=\"h3span\">Email:</h3> <h3>{user.email}</h3>\n        </div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\nconst mapStateToprops = (store) => {\n  const { profile } = store;\n  return { ...store, profile: profile };\n};\n\nexport default connect(mapStateToprops)(Index);\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/reducer.js",["271","272","273","274"],"import {\n    ACTIVATE_USER,\n    ADD_USER,\n    DEACTIVATE_USER,\n    REMOVE_USER,\n    EDIT_USER,\n    EXIT_ADD_FORM,\n    EXIT_EDIT_USER,\n    ADD_USER_FORM,\n    CLEAR_PROFILE_DATA,\n    VIEW_USER,\n    EXIT_VEW_USER,\n    SAVE_UPDATES,\n    SAVE_TOKEN,\n    SAVE_INITIAL_DATA,\n    SAVE_REPORT_DATA,\n    SAVE_FORM_DATA,\n    SAVE_PROFILE_DATA,\n    CLEAR_REPORT_DATA,\n} from \"./actions\";\n// import { removeUser, registerUser } from \"./client/\";\nlet removeUser, registerUser;\n\nfunction reducer(state, action) {\n    /*forms*/\n    if (action.type === EXIT_ADD_FORM) {\n        return {...state, adduser: false };\n    }\n    if (action.type === ADD_USER_FORM) {\n        return {...state, adduser: true };\n    }\n\n    /*user data*/\n    if (action.type === ADD_USER) {\n        return {...state, adduser: true };\n    }\n\n    if (action.type === REMOVE_USER) {\n        // return {...state, data: removeUser(action.payload), viewuser: false };\n    }\n\n    if (action.type === VIEW_USER) {\n        if (action.payload) {\n            const { modalShown } = action.payload;\n            return {\n                ...state,\n                showProfile: modalShown,\n            };\n        }\n        return {...state };\n    }\n    if (action.type === SAVE_INITIAL_DATA) {\n        if (action.payload) {\n            return {\n                ...state,\n                profile: {...action.payload },\n            };\n        }\n        return {...state };\n    }\n\n    if (action.type === EXIT_VEW_USER) {\n        return {\n            ...state,\n            showProfile: false,\n        };\n    }\n    if (action.type === EDIT_USER) {\n        return {...state, edituser: true };\n    }\n    if (action.type === EXIT_EDIT_USER) {\n        return {...state, edituser: false };\n    }\n    if (action.type === SAVE_UPDATES) {\n        let { data } = state;\n        const { payload } = action;\n\n        for (let i = 0; i < data.length; i++) {\n            if (data[i].id === payload.id) {\n                data[i] = payload;\n                if (payload.role === \"admin\") {\n                    state.profile = payload;\n                }\n            }\n        }\n\n        return {\n            ...state,\n            edituser: false,\n            data,\n            viewdata: null,\n            adduserbtn: true,\n        };\n    }\n\n    //................. AUTH\n\n    if (action.type === SAVE_TOKEN) {\n        if (action.payload) {\n            const { access_token } = action.payload;\n            console.log(\"token from login\", access_token);\n            return {...state, token: access_token };\n        }\n    }\n\n    //......... form data\n\n    if (action.type === SAVE_FORM_DATA) {\n        if (action.payload) {\n            const { email } = action.payload;\n            console.log(\"token from login\", email);\n            return {...state, formdata: { email } };\n        }\n    }\n    if (action.type === CLEAR_REPORT_DATA) {\n        return {...state, reportdata: {} };\n    }\n    if (action.type === SAVE_REPORT_DATA) {\n        if (action.payload) {\n            return {...state, reportdata: {...action.payload } };\n        }\n    }\n    if (action.type === SAVE_PROFILE_DATA) {\n        if (action.payload) {\n            return {...state, teamdata: {...action.payload } };\n        }\n    }\n    if (action.type === CLEAR_PROFILE_DATA) {\n        return {...state, teamdata: {} };\n    }\n\n    return state;\n}\n\nexport default reducer;","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/actions.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/store.js",["275"],"\"use strict\";\nimport { createStore } from \"redux\";\nimport reducer from \"./reducer\";\n\nlet store;\nconst initstore = {\n    data: [],\n    adduser: false,\n    edituser: false,\n    profile: {},\n    viewuser: false,\n    showProfile: false,\n    adduserbtn: true,\n    token: \"\",\n    reportdata: {},\n    teamdata: {},\n};\nif (!store) {\n    store = createStore(reducer, initstore);\n}\n\nexport { store };","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/config/axiosConfig.js",["276","277"],"\"use strict\";\n\nimport axios from \"axios\";\nimport { store } from \"../store\";\nimport { fetchAccessToken } from \"../client\";\n\nlet instance;\nlet BASE_URL;\nlet isAlreadyFetchingAccessToken = false;\nlet subscribers = [];\n\nconst token = localStorage.getItem(\"token\");\n\nBASE_URL = process.env.REACT_APP_NECBOT_API_URL;\n\nconst defaultOptions = {\n    baseURL: BASE_URL,\n    withCredentials: true,\n    headers: {\n        \"Content-Type\": \"application/json\",\n    },\n};\n\nif (!instance) {\n    instance = axios.create(defaultOptions);\n    instance.interceptors.request.use(function(config) {\n        if (token) {\n            config.headers.Authorization = token ? `Bearer ${token}` : \"\";\n        }\n        return config;\n    });\n\n    function onAccessTokenFetched(access_token) {\n        subscribers = subscribers.filter((callback) => callback(access_token));\n    }\n\n    function addSubscriber(callback) {\n        subscribers.push(callback);\n    }\n\n    instance.interceptors.response.use(\n        function(response) {\n            return response.data;\n        },\n        function(error) {\n            const {\n                config,\n                response: { status },\n            } = error;\n            let originalRequest = config;\n\n            if (originalRequest.url === \"/auth/reset-password\") {\n                return;\n            } else {\n                if (status === 403) {\n                    if (!isAlreadyFetchingAccessToken) {\n                        isAlreadyFetchingAccessToken = true;\n\n                        fetchAccessToken().then((access_token) => {\n                            if (access_token) {\n                                const { AccessToken } = access_token.data;\n                                isAlreadyFetchingAccessToken = false;\n                                onAccessTokenFetched(AccessToken);\n                            }\n                        });\n                    }\n\n                    const retryOriginalRequest = new Promise((resolve) => {\n                        addSubscriber((AccessToken) => {\n                            const newtoken = \"Bearer \" + AccessToken;\n                            const newheaders = {\n                                ...originalRequest.headers,\n                                Authorization: newtoken,\n                            };\n                            const newrequest = {...originalRequest, headers: newheaders };\n                            const newinstance = axios.create();\n                            resolve(newinstance(newrequest));\n                        });\n                    });\n\n                    return retryOriginalRequest;\n                }\n            }\n\n            return Promise.reject(error);\n        }\n    );\n}\nexport default instance;","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/hooks/index.js",["278","279","280","281"],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/index.js",["282","283","284","285","286","287","288"],"import React, { useEffect } from \"react\";\nimport Navbar from \"./Navibar/index\";\nimport { IconContext } from \"react-icons\";\nimport Container from \"@material-ui/core/Container\";\nimport Footer from \"../Footer/Footer\";\nimport { connect } from \"react-redux\";\nimport { getUserId, httpActions } from \"../../client/index\";\nimport Team from \"./Team/Index\";\nimport { useGet } from \"../../hooks\";\nimport \"./dashbar.css\";\nimport RegistrationForm from \"./Registration\";\nimport { ProtectRoute } from \"../../components/ProtectRoute\";\nimport Regform from \"../Pdf/Pdf\";\nimport Printform from \"../Dash_board/Printform/Printform\";\nimport Spline from \"./Charts/Spline\";\nimport Profile from \"../Dash_board/Profile/Profile\";\nimport { SAVE_INITIAL_DATA } from \"../../actions\";\nimport Report from \"./Report/Report\";\n\nimport {\n  Redirect,\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from \"react-router-dom\";\n\nconst { getProfile } = httpActions;\n\nfunction Index({ modalShown, toggleModal, showProfile, dispatch }) {\n  let initial;\n  const vendorId = getUserId();\n  const { result: user, loading, refresh } = useGet(vendorId, getProfile);\n  const { fname, lname, email, username, phone, userRole, signature } =\n    user || {};\n\n  if (fname && lname) {\n    initial = `${fname} ${lname}`\n      .split(\" \")\n      .map((n, i, a) => (i === 0 || i + 1 === a.length ? n[0] : null))\n      .join(\"\")\n      .toUpperCase();\n  }\n\n  useEffect(() => {\n    dispatch({\n      type: SAVE_INITIAL_DATA,\n      payload: {\n        fname,\n        lname,\n        email,\n        username,\n        phone,\n        userRole,\n        initial,\n        signature,\n      },\n    });\n  }, [user]);\n\n  return (\n    <>\n      {\" \"}\n      {showProfile && <Profile />}{\" \"}\n      <IconContext.Provider value={{ color: \"#fff\" }}>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n          }}\n        >\n          <Router>\n            <Navbar props={initial} />{\" \"}\n            <Container className=\"dashboard\">\n              <Switch>\n                <ProtectRoute path=\"/dashboard\" exact component={Spline} />{\" \"}\n                <ProtectRoute\n                  path=\"/dashboard/registration\"\n                  exact\n                  component={RegistrationForm}\n                />{\" \"}\n                <ProtectRoute path=\"/dashboard/team\" component={Team} />{\" \"}\n                <ProtectRoute path=\"/dashboard/reports\" component={Report} />{\" \"}\n              </Switch>{\" \"}\n            </Container>{\" \"}\n          </Router>{\" \"}\n          <Footer />{\" \"}\n        </div>{\" \"}\n      </IconContext.Provider>{\" \"}\n    </>\n  );\n}\nconst mapStateToprops = (store) => {\n  return { ...store };\n};\n\nexport default connect(mapStateToprops)(Index);\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Navibar/index.js",["289"],"import React, { useState } from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { SidebarData } from \"../Menubar/sidebarData\";\nimport { connect } from \"react-redux\";\nimport * as FaIcons from \"react-icons/fa\";\nimport * as AiIcons from \"react-icons/ai\";\nimport * as IoIcons from \"react-icons/io\";\nimport \"../Navibar/navbar.css\";\nimport { logout as signout } from \"../../../client\";\nimport { VIEW_USER, CLEAR_REPORT_DATA } from \"../../../actions\";\n\nfunction Index({ dispatch, props }) {\n  const [sidebar, setSidebar] = useState(false);\n  const showsidebar = () => setSidebar(!sidebar);\n  const [modalShown, toggleModal] = useState(false);\n\n  function handle(title) {\n    if (title == \"Registration\") {\n      dispatch({ type: CLEAR_REPORT_DATA });\n    }\n  }\n  const logout = {\n    title: \"Reports\",\n    path: \"/reports\",\n    icon: <IoIcons.IoIosPaper />,\n    cName: \"nav-text\",\n  };\n  return (\n    <>\n      <div className=\"navbar\">\n        <Link to=\"#\" className=\"menu-bars\">\n          <FaIcons.FaBars onClick={showsidebar} />{\" \"}\n        </Link>{\" \"}\n        <div className=\"pavatar\">\n          <div\n            className=\"avatar\"\n            onClick={() => {\n              toggleModal(!modalShown);\n              dispatch({ type: VIEW_USER, payload: { modalShown } });\n            }}\n          >\n            <span className=\"initial\"> {props} </span>{\" \"}\n          </div>{\" \"}\n        </div>{\" \"}\n      </div>{\" \"}\n      <nav className={sidebar ? \"nav-menu active\" : \"nav-menu\"}>\n        <ul className=\"nav-menu-items\" onClick={showsidebar}>\n          <li className=\"navbar-toggle\">\n            <Link to=\"#\" className=\"menu-bars\">\n              <AiIcons.AiOutlineClose />\n            </Link>{\" \"}\n          </li>{\" \"}\n          {SidebarData.map((item, index) => {\n            return (\n              <li key={index} className={item.cName}>\n                <NavLink\n                  className=\"menu-bar\"\n                  to={item.path}\n                  activeClassName=\"active\"\n                  onClick={() => handle(item.title)}\n                >\n                  {item.icon} <span> {item.title} </span>{\" \"}\n                </NavLink>{\" \"}\n              </li>\n            );\n          })}{\" \"}\n          <li key=\"123\" className={logout.cName}>\n            <Link onClick={() => signout()} className=\"menu-bar\">\n              {\" \"}\n              {logout.icon} <span> Logout </span>{\" \"}\n            </Link>{\" \"}\n          </li>{\" \"}\n        </ul>{\" \"}\n      </nav>{\" \"}\n    </>\n  );\n}\nconst MapStateToprops = (store) => {\n  return { ...store };\n};\nexport default connect(MapStateToprops)(Index);\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Menubar/sidebarData.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Menubar/index.js",["290","291","292"],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Forms/Stepform/ForgotPassword/ForgotPasswordForm.js",["293"],"import React from \"react\";\nimport { useForm, useStep } from \"react-hooks-helper\";\nimport ForgotPass from \"./ForgotPass\";\nimport ResetPass from \"./ResetPass\";\n\nfunction StepForm() {\n  const Default = {\n    email: \"\",\n    code: \"\",\n    newpass: \"\",\n    confirmpass: \"\",\n  };\n\n  const steps = [{ id: \"forgotPassword\" }, { id: \"resetpassword\" }];\n  const [formData, setForm] = useForm(Default);\n  const { step, navigation } = useStep({ steps, initialStep: 0 });\n  const props = { formData, setForm, navigation };\n\n  switch (step.id) {\n    case \"forgotPassword\":\n      return <ForgotPass {...props} />;\n    case \"resetpassword\":\n      return <ResetPass {...props} />;\n  }\n\n  return <div> </div>;\n}\n\nexport default StepForm;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Forms/Stepform/ForgotPassword/ForgotPass.js",["294","295","296"],"import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { getCode } from \"../../../../client\";\nimport Card from \"@material-ui/core/Card\";\n\nconst style = {\n  maxWidth: 300,\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nfunction ForgotPass({ formData, setForm, navigation }) {\n  const { email, code, newpass } = formData;\n\n  async function handle() {\n    let responsecode = \"1234\";\n    if (responsecode) {\n      navigation.next();\n    }\n  }\n\n  return (\n    <Container maxWidth=\"xs\">\n      <Card variant=\"outlined\" style={style}>\n        <h3>Forgot Password</h3>\n        <TextField\n          label=\"email / phone\"\n          value={email}\n          onChange={setForm}\n          name=\"email\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <Button\n          variant=\"contained\"\n          fullWidth\n          color=\"primary\"\n          style={{ marginTop: \"1rem\" }}\n          onClick={handle}\n        >\n          Submit\n        </Button>\n      </Card>\n    </Container>\n  );\n}\n\nexport default ForgotPass;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Forms/Stepform/ForgotPassword/ResetPass.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Forms/Login.js",["297","298","299"],"import React, { useRef, useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport { login } from \"../../../client/client\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Spinner from \"../../Spinner/Spiner\";\nimport \"./form.css\";\nconst style = {\n  maxWidth: 300,\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nconst spinerStyle = {\n  display: \"flex\",\n  flexDirection: \"rows\",\n  gap: \"12px\",\n};\n\nfunction Login() {\n  const { addToast } = useToasts();\n  const [loading, setLoading] = useState(false);\n\n  //   const [formData, setForm] = useState({});\n  const username = useRef(\"\");\n  const password = useRef(\"\");\n  const formref = useRef();\n\n  async function handle() {\n    try {\n      setLoading(true);\n      const response = await login({\n        username: username.current.value,\n        password: password.current.value,\n      });\n      formref.current.reset();\n      if (response) {\n        setLoading(false);\n        addToast(\"... was created successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n      }\n      setLoading(false);\n      addToast(\"Wrong Credentials!\", { appearance: \"error\" });\n    } catch (error) {\n      setLoading(false);\n      addToast(\"Failed\", { appearance: \"error\" });\n    }\n  }\n\n  return (\n    <div className=\"login-form\">\n      <Card variant=\"outlined\" style={style}>\n        <h3> Sign in </h3>{\" \"}\n        <TextField\n          label=\"Email \"\n          margin=\"normal\"\n          inputRef={username}\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n          ref={formref}\n        />{\" \"}\n        <TextField\n          label=\"Password \"\n          margin=\"normal\"\n          inputRef={password}\n          type=\"password\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n          ref={formref}\n        />{\" \"}\n        <Button\n          variant=\"contained\"\n          fullWidth\n          color=\"primary\"\n          style={{ marginTop: \"1rem\" }}\n          onClick={handle}\n        >\n          {loading ? (\n            <div style={spinerStyle}>\n              <Spinner loading={loading} /> Loading...{\" \"}\n            </div>\n          ) : (\n            \"Login\"\n          )}{\" \"}\n        </Button>{\" \"}\n        <h4>\n          <Link to=\"/reset-password\" style={{ textDecoration: \"none\" }}>\n            Forgot password ?\n          </Link>{\" \"}\n        </h4>{\" \"}\n      </Card>{\" \"}\n    </div>\n  );\n}\n\nexport default Login;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Forms/ForgotPassword/ForgotPasswordForm.js",["300"],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Forms/ForgotPassword/ForgotPass.js",["301","302","303","304","305"],"import React, { useRef, useState, useEffect } from \"react\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { getCode } from \"../../../../client\";\nimport Card from \"@material-ui/core/Card\";\n\nconst style = {\n  maxWidth: 300,\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nfunction ForgotPass({ formData, setForm, navigation }) {\n  const { addToast } = useToasts();\n  const [loading, setLoading] = useState(false);\n  const { email, code, newpass } = formData;\n\n  async function handle() {\n    setLoading(true);\n    try {\n      const { code } = await getCode({ email });\n\n      if (code) {\n        setLoading(false);\n        addToast(\"... your recovery code successfully sent to your phone\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n        navigation.next();\n        return;\n      }\n      setLoading(false);\n      addToast(\"Account Not found!\", { appearance: \"error\" });\n    } catch (error) {\n      setLoading(false);\n      addToast(\"Failed\", { appearance: \"error\" });\n    }\n  }\n\n  return (\n    <Container maxWidth=\"xs\" className=\"login-form\">\n      <Card variant=\"outlined\" style={style}>\n        <h3> Forgot Password </h3>{\" \"}\n        <TextField\n          label=\"email / phone\"\n          value={email}\n          onChange={setForm}\n          name=\"email\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <Button\n          variant=\"contained\"\n          fullWidth\n          color=\"primary\"\n          style={{ marginTop: \"1rem\" }}\n          onClick={handle}\n        >\n          Submit{\" \"}\n        </Button>{\" \"}\n      </Card>{\" \"}\n    </Container>\n  );\n}\n\nexport default ForgotPass;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Forms/ForgotPassword/ResetPass.js",["306","307","308"],"import React, { useRef, useState, useEffect } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Card from \"@material-ui/core/Card\";\nimport { postCode } from \"../../../../client/client\";\n\nconst style = {\n  maxWidth: 300,\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nfunction ResetPass({ formData, setForm, navigation }) {\n  const { addToast } = useToasts();\n  const [loading, setLoading] = useState(false);\n\n  const { email, code, newpass, confirmpass } = formData;\n\n  async function handle() {\n    if (confirmpass !== newpass) {\n      addToast(\"passwords not match\", { appearance: \"error\" });\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await postCode({ email, usercode: code, newpass });\n      const { isSuccessful } = response;\n\n      if (isSuccessful) {\n        setLoading(false);\n        addToast(\"... your password is successfully updated\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n      } else {\n        setLoading(false);\n        addToast(\"Account Not found!\", { appearance: \"error\" });\n      }\n    } catch (error) {\n      setLoading(false);\n      addToast(\"Failed\", { appearance: \"error\" });\n    }\n  }\n\n  return (\n    <Container maxWidth=\"xs\" className=\"login-form\">\n      <Card style={style}>\n        {\" \"}\n        <h3> Reset Password </h3>{\" \"}\n        <TextField\n          label=\"code\"\n          value={code}\n          onChange={setForm}\n          name=\"code\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"New password\"\n          value={newpass}\n          onChange={setForm}\n          name=\"newpass\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Confirm password\"\n          value={confirmpass}\n          onChange={setForm}\n          name=\"confirmpass\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <Button\n          variant=\"contained\"\n          fullWidth\n          color=\"primary\"\n          style={{ marginTop: \"1rem\" }}\n          onClick={handle}\n        >\n          Submit{\" \"}\n        </Button>{\" \"}\n      </Card>{\" \"}\n    </Container>\n  );\n}\n\nexport default ResetPass;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Navibar/Navbar.js",["309","310","311","312","313"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\nimport { SidebarData } from \"./Menubar/sidebarData\";\nimport * as FaIcons from \"react-icons/fa\";\nimport * as AiIcons from \"react-icons/ai\";\nimport * as IoIcons from \"react-icons/io\";\nimport \"../Navibar/navbar.css\";\nimport \"../home.css\";\n\nfunction Navbar() {\n  const [sidebar, setSidebar] = useState(false);\n  const showsidebar = () => setSidebar(!sidebar);\n  return (\n    <>\n      <div className=\"navba\">\n        <Container className=\"navcontaine\">\n          <Link to=\"#\" className=\"navlinks1\">\n            Home{\" \"}\n          </Link>{\" \"}\n          <Link to=\"#\" className=\"navlinks1\">\n            Feeds{\" \"}\n          </Link>{\" \"}\n          <Link to=\"/login\" className=\"navlinks1\">\n            Login{\" \"}\n          </Link>{\" \"}\n        </Container>{\" \"}\n      </div>{\" \"}\n    </>\n  );\n}\n\nexport default Navbar;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Home/Navibar/Menubar/sidebarData.js",["314"],"import React from \"react\";\nimport * as FaIcons from \"react-icons/fa\";\nimport * as AiIcons from \"react-icons/ai\";\nimport * as IoIcons from \"react-icons/io\";\n\nexport const SidebarData = [{\n        title: \"Home\",\n        path: \"/\",\n        icon: < AiIcons.AiFillHome / > ,\n        cName: \"nav-text\",\n    },\n    {\n        title: \"Feeds\",\n        path: \"/feeds\",\n        icon: < IoIcons.IoMdPeople / > ,\n        cName: \"nav-text\",\n    },\n    {\n        title: \"Login\",\n        path: \"/login\",\n        icon: < IoIcons.IoMdHelpCircle / > ,\n        cName: \"nav-text\",\n    },\n];","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Footer/Footer.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Spinner/Spiner.js",["315"],"import React from \"react\";\nimport { useState } from \"react\";\nimport { css } from \"@emotion/core\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\n// Can be a string as well. Need to ensure each key-value pair ends with ;\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: #fff;\n`;\n\nfunction Spiner({ loading }) {\n  let [color, setColor] = useState(\"#ffffff\");\n\n  return (\n    <div className=\"\">\n      <ClipLoader color={color} loading={loading} css={override} size={25} />\n    </div>\n  );\n}\n\nexport default Spiner;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/index.js",["316","317","318","319"],"import React from \"react\";\nimport { useForm, useStep } from \"react-hooks-helper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Owner from \"./Owner\";\nimport { connect } from \"react-redux\";\nimport InspectionForm from \"./InspectionForm\";\nimport VehicleInfo from \"./VehicleInformatin\";\nimport VehicleInfoCont from \"./VehicleInfoCont\";\nimport EngineType from \"./EngineType\";\nimport ConversionKitInfo from \"./ConversionKitInfo\";\nimport CgnCylinderInfo from \"./CgnCylinderInfo\";\nimport CgnCylinderInfoCont from \"./CgnCylinderInfoCont\";\nimport Preview from \"./Preview\";\nimport \"./reg.css\";\n\nfunction Index({ reportdata }) {\n  const {\n    createdAt = \"\",\n    validto = \"\",\n    name = \"\",\n    email = \"\",\n    phone = \"\",\n    location = \"\",\n    newInstallation = \"...v...\",\n    periodic = \".....\",\n    afterAccident = \"....\",\n    ownername = \"\",\n    vihecleRegno = \"\",\n    manYear = \"\",\n    make = \"\",\n    model = \"\",\n    chasisno = \"\",\n    engineno = \"\",\n    milliege = \"\",\n    biFuel = \"...\",\n    Dedicated = \"...V...\",\n    DualFuel = \"....\",\n    type = \"\",\n    manufacturer = \"\",\n    serialno = \"-\",\n    installername = \"\",\n    cylinderno3 = \"3\",\n    cylinderposition3 = \"\",\n    cylinderSerialNo3 = \"\",\n    cylindertype3 = \"\",\n    cmanufacturer3 = \"\",\n    cmanuContact3 = \"\",\n    servicepressure3 = \"\",\n    cmanufacturedDate3 = \"\",\n    waterVolume3 = \"\",\n    cexpiryDate3 = \"\",\n    tbscertificate3 = \"\",\n    cylinderno1 = \"1\",\n    cylinderposition1 = \"\",\n    cylindertype1 = \"\",\n    cylinderSerialNo1 = \"\",\n    cmanufacturer1 = \"\",\n    cmanuContact1 = \"\",\n    servicepressure1 = \"\",\n    cmanufacturedDate1 = \"\",\n    waterVolume1 = \"\",\n    cexpiryDate1 = \"\",\n    tbscertificate1 = \"\",\n    cylinderno2 = \"2\",\n    cylinderSerialNo2 = \"\",\n    cylinderposition2 = \"\",\n    cylindertype2 = \"\",\n    cmanufacturer2 = \"\",\n    cmanuContact2 = \"\",\n    servicepressure2 = \"\",\n    cmanufacturedDate2 = \"\",\n    waterVolume2 = \"\",\n    cexpiryDate2 = \"\",\n    tbscertificate2 = \"\",\n    inspectorID = \"\",\n    validfrom = \"\",\n  } = reportdata;\n\n  const Default = {\n    name,\n    email,\n    phone,\n    location,\n    newInstallation,\n    periodic,\n    afterAccident,\n    ownername,\n    vihecleRegno,\n    manYear,\n    make,\n    model,\n    chasisno,\n    engineno,\n    milliege,\n    biFuel,\n    Dedicated,\n    DualFuel,\n    type,\n    manufacturer,\n    serialno,\n    installername,\n    cylinderno3,\n    cylinderposition3,\n    cylindertype3,\n    cmanufacturer3,\n    cmanuContact3,\n    servicepressure3,\n    cmanufacturedDate3,\n    waterVolume3,\n    cexpiryDate3,\n    tbscertificate3,\n    cylinderno1,\n    cylinderposition1,\n    cylindertype1,\n    cmanufacturer1,\n    cmanuContact1,\n    servicepressure1,\n    cmanufacturedDate1,\n    waterVolume1,\n    cexpiryDate1,\n    tbscertificate1,\n    cylinderno2,\n    cylinderposition2,\n    cylindertype2,\n    cmanufacturer2,\n    cmanuContact2,\n    cylinderSerialNo1,\n    cylinderSerialNo2,\n    cylinderSerialNo3,\n    servicepressure2,\n    cmanufacturedDate2,\n    waterVolume2,\n    cexpiryDate2,\n    tbscertificate2,\n    validfrom,\n  };\n\n  const steps = [\n    { id: \"Owner\" },\n    { id: \"Inspection-type\" },\n    { id: \"Vehicle-information\" },\n    { id: \"Vehicle-informationCont\" },\n    { id: \"Type-of-ngv\" },\n    { id: \"Conversion-kit-information\" },\n    { id: \"Cng-cylinders-information\" },\n    { id: \"Cng-cylinders-informationCont\" },\n    { id: \"preview\" },\n  ];\n  const [formData, setForm] = useForm(Default);\n  const { step, navigation } = useStep({ steps, initialStep: 0 });\n  const props = { formData, setForm, navigation };\n\n  switch (step.id) {\n    case \"Owner\":\n      return (\n        <Grid\n          container\n          justify=\"center\"\n          direction=\"column\"\n          alignContent=\"center\"\n          style={{ height: \"100hv\", border: \"3px\", boxSizing: \"border-box\" }}\n        >\n          <Owner {...props} />{\" \"}\n        </Grid>\n      );\n\n    case \"Inspection-type\":\n      return (\n        <Grid\n          container\n          justify=\"center\"\n          direction=\"column\"\n          alignContent=\"center\"\n          style={{\n            height: \"100hv\",\n            border: \"3px\",\n            boxSizing: \"border-box\",\n            paddingTop: \"40px\",\n          }}\n        >\n          <InspectionForm {...props} />{\" \"}\n        </Grid>\n      );\n    case \"Vehicle-information\":\n      return (\n        <Grid\n          container\n          justify=\"center\"\n          direction=\"column\"\n          alignContent=\"center\"\n          style={{\n            height: \"100hv\",\n            border: \"9px\",\n            boxSizing: \"border-box\",\n            paddingTop: \"40px\",\n          }}\n        >\n          <VehicleInfo {...props} />{\" \"}\n        </Grid>\n      );\n    case \"Vehicle-informationCont\":\n      return (\n        <Grid\n          container\n          justify=\"center\"\n          direction=\"column\"\n          alignContent=\"center\"\n          style={{\n            height: \"100hv\",\n            border: \"3px\",\n            boxSizing: \"border-box\",\n            paddingTop: \"40px\",\n          }}\n        >\n          <VehicleInfoCont {...props} />{\" \"}\n        </Grid>\n      );\n    case \"Type-of-ngv\":\n      return (\n        <Grid\n          container\n          justify=\"center\"\n          direction=\"column\"\n          alignContent=\"center\"\n          style={{\n            height: \"100hv\",\n            border: \"3px\",\n            boxSizing: \"border-box\",\n            paddingTop: \"40px\",\n          }}\n        >\n          <EngineType {...props} />{\" \"}\n        </Grid>\n      );\n    case \"Conversion-kit-information\":\n      return (\n        <Grid\n          container\n          justify=\"center\"\n          direction=\"column\"\n          alignContent=\"center\"\n          style={{\n            height: \"100hv\",\n            border: \"3px\",\n            boxSizing: \"border-box\",\n            paddingTop: \"40px\",\n          }}\n        >\n          <ConversionKitInfo {...props} />{\" \"}\n        </Grid>\n      );\n    case \"Cng-cylinders-information\":\n      return (\n        <Grid\n          container\n          justify=\"center\"\n          direction=\"column\"\n          alignContent=\"center\"\n          style={{\n            height: \"100hv\",\n            border: \"3px\",\n            boxSizing: \"border-box\",\n          }}\n        >\n          <CgnCylinderInfo {...props} />{\" \"}\n        </Grid>\n      );\n    case \"Cng-cylinders-informationCont\":\n      return (\n        <Grid\n          container\n          justify=\"center\"\n          direction=\"column\"\n          alignContent=\"center\"\n          style={{\n            height: \"100hv\",\n            border: \"3px\",\n            boxSizing: \"border-box\",\n          }}\n        >\n          <CgnCylinderInfoCont {...props} />{\" \"}\n        </Grid>\n      );\n    case \"preview\":\n      return (\n        <Box\n          p={5}\n          style={{\n            border: \"3px\",\n            boxSizing: \"border-box\",\n            maxHeight: \"550px\",\n            overflowY: \"auto\",\n          }}\n        >\n          <Preview {...props} />{\" \"}\n        </Box>\n      );\n  }\n\n  return <div> </div>;\n}\nconst MapStateToprops = (store) => {\n  return { ...store };\n};\nexport default connect(MapStateToprops)(Index);\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/InspectionForm.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/VehicleInformatin.js",["320","321","322","323","324","325","326","327"],"import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\n\nconst style = {\n  maxWidth: 300,\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nfunction VehicleInfo({ formData, setForm, navigation }) {\n  const {\n    newInstallation,\n    periodic,\n    afterAccident,\n    ownername,\n    vihecleRegno,\n    manYear,\n    make,\n    model,\n    chasisno,\n    engineno,\n    milliege,\n  } = formData;\n\n  async function handle() {\n    let responsecode = \"1234\";\n    if (responsecode) {\n      navigation.next();\n    }\n  }\n  const Default = {\n    newInstallation: \"\",\n    periodic: \"\",\n    afterAccident: \"\",\n    ownername: \"\",\n    vihecleRegno,\n    manYear: \"\",\n    make: \"\",\n    model: \"\",\n    chasisno: \"\",\n    engineno: \"\",\n    milliege: \"\",\n  };\n  return (\n    <Container maxWidth=\"xs\">\n      <Card variant=\"outlined\" style={style}>\n        <h3> VEHICLE INFORMATION </h3>{\" \"}\n        <TextField\n          label=\"Name of Owner\"\n          value={ownername}\n          onChange={setForm}\n          name=\"ownername\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Vehicle Reg No\"\n          value={vihecleRegno}\n          onChange={setForm}\n          name=\"vihecleRegno\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Year of Man.\"\n          value={manYear}\n          onChange={setForm}\n          name=\"manYear\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Make\"\n          value={make}\n          onChange={setForm}\n          name=\"make\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <div style={{ marginTop: \"1rem\" }}>\n          {\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"2px\" }}\n            onClick={() => navigation.previous()}\n          >\n            Back{\" \"}\n          </Button>{\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"1rem\" }}\n            onClick={handle}\n          >\n            Next{\" \"}\n          </Button>{\" \"}\n        </div>{\" \"}\n      </Card>{\" \"}\n    </Container>\n  );\n}\n\nexport default VehicleInfo;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/VehicleInfoCont.js",["328","329","330","331","332","333","334"],"import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\n\nconst style = {\n  maxWidth: 300,\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nfunction VehicleInfocont({ formData, setForm, navigation }) {\n  const {\n    newInstallation,\n    periodic,\n    afterAccident,\n    ownername,\n    vihecleRegno,\n    manYear,\n    make,\n    model,\n    chasisno,\n    engineno,\n    milliege,\n  } = formData;\n\n  async function handle() {\n    let responsecode = \"1234\";\n    if (responsecode) {\n      navigation.next();\n    }\n  }\n  const Default = {\n    newInstallation: \"\",\n    periodic: \"\",\n    afterAccident: \"\",\n    ownername: \"\",\n    vihecleRegno,\n    manYear: \"\",\n    make: \"\",\n    model: \"\",\n    chasisno: \"\",\n    engineno: \"\",\n    milliege: \"\",\n  };\n  return (\n    <Container maxWidth=\"xs\">\n      <Card variant=\"outlined\" style={style}>\n        <h3> Continuation... </h3>{\" \"}\n        <TextField\n          label=\"Model\"\n          value={model}\n          onChange={setForm}\n          name=\"model\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Chasis No or VIN\"\n          value={chasisno}\n          onChange={setForm}\n          name=\"chasisno\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Engine No / Type\"\n          value={engineno}\n          onChange={setForm}\n          name=\"engineno\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Milleage at Inspection (km)\"\n          value={milliege}\n          onChange={setForm}\n          name=\"milliege\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <div style={{ marginTop: \"1rem\" }}>\n          {\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"2px\" }}\n            onClick={() => navigation.previous()}\n          >\n            Back{\" \"}\n          </Button>{\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"1rem\" }}\n            onClick={handle}\n          >\n            Next{\" \"}\n          </Button>{\" \"}\n        </div>{\" \"}\n      </Card>{\" \"}\n    </Container>\n  );\n}\n\nexport default VehicleInfocont;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/EngineType.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/ConversionKitInfo.js",["335"],"import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\n\nconst style = {\n  maxWidth: 300,\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nfunction ConversionKit({ formData, setForm, navigation }) {\n  const { type, serialno, manufacturer, installername } = formData;\n\n  async function handle() {\n    let responsecode = \"1234\";\n    if (responsecode) {\n      navigation.next();\n    }\n  }\n\n  return (\n    <Container maxWidth=\"xs\">\n      <Card variant=\"outlined\" style={style}>\n        <h3> CONVERSION KIT INFORMATION </h3>{\" \"}\n        <TextField\n          label=\"Manufacturer\"\n          value={manufacturer}\n          onChange={setForm}\n          name=\"manufacturer\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Serial No\"\n          value={serialno}\n          onChange={setForm}\n          name=\"serialno\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Name of Installer\"\n          value={installername}\n          onChange={setForm}\n          name=\"installername\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <div style={{ marginTop: \"1rem\" }}>\n          {\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"2px\" }}\n            onClick={() => navigation.previous()}\n          >\n            Back{\" \"}\n          </Button>{\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"1rem\" }}\n            onClick={handle}\n          >\n            Next{\" \"}\n          </Button>{\" \"}\n        </div>{\" \"}\n      </Card>{\" \"}\n    </Container>\n  );\n}\n\nexport default ConversionKit;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/CgnCylinderInfoCont.js",["336"],"import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\n\nconst style = {\n  display: \"flex\",\n  flexDirection: \"row\",\n};\nconst stylemain = {\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n\n  width: \"800px\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nfunction CgnCylinderInfoCont({ formData, setForm, navigation }) {\n  const {\n    servicepressure1,\n    cmanufacturedDate1,\n    waterVolume1,\n    tbscertificate1,\n    servicepressure2,\n    cmanufacturedDate2,\n    waterVolume2,\n    cexpiryDate1,\n    cexpiryDate2,\n    cexpiryDate3,\n    tbscertificate2,\n    servicepressure3,\n    cmanufacturedDate3,\n    waterVolume3,\n    tbscertificate3,\n  } = formData;\n\n  async function handle() {\n    let responsecode = \"1234\";\n    if (responsecode) {\n      navigation.next();\n    }\n  }\n\n  return (\n    <Container>\n      <Card style={stylemain}>\n        <h3> CNG CYLINDERS INFORMATION Cont ... </h3>{\" \"}\n        <Card fullWidth style={style}>\n          <Card>\n            <TextField\n              label=\"Service Pressure(MPa)\"\n              value={servicepressure1}\n              onChange={setForm}\n              name=\"servicepressure1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n            />\n            <TextField\n              value={cmanufacturedDate1}\n              id=\"date\"\n              onChange={setForm}\n              name=\"cmanufacturedDate1\"\n              label=\"Manufactured Date\"\n              type=\"date\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              defaultValue=\"0000-00-00\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <TextField\n              label=\"Water volume(litres)\"\n              value={waterVolume1}\n              onChange={setForm}\n              name=\"waterVolume1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n            />\n            <TextField\n              value={cexpiryDate1}\n              id=\"date\"\n              onChange={setForm}\n              name=\"cexpiryDate1\"\n              label=\"Expiry Date\"\n              type=\"date\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              defaultValue=\"0000-00-00\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n\n            <TextField\n              label=\"TBS certificare\"\n              value={tbscertificate1}\n              onChange={setForm}\n              name=\"tbscertificate1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n            />\n          </Card>{\" \"}\n          <Card>\n            <TextField\n              label=\"Service Pressure(MPa)\"\n              value={servicepressure2}\n              onChange={setForm}\n              name=\"servicepressure2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n            />\n            <TextField\n              value={cmanufacturedDate2}\n              id=\"date\"\n              onChange={setForm}\n              name=\"cmanufacturedDate2\"\n              label=\"Manufactured Date\"\n              type=\"date\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              defaultValue=\"0000-00-00\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <TextField\n              label=\"Water volume(litres)\"\n              value={waterVolume2}\n              onChange={setForm}\n              name=\"waterVolume2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n            />\n\n            <TextField\n              value={cexpiryDate2}\n              id=\"date\"\n              onChange={setForm}\n              name=\"cexpiryDate2\"\n              label=\"Expiry Date\"\n              type=\"date\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              defaultValue=\"0000-00-00\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n\n            <TextField\n              label=\"TBS certificare\"\n              value={tbscertificate2}\n              onChange={setForm}\n              name=\"tbscertificate2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n            />\n          </Card>{\" \"}\n          <Card>\n            <TextField\n              label=\"Service Pressure(MPa)\"\n              value={servicepressure3}\n              onChange={setForm}\n              name=\"servicepressure3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              fullWidth\n            />\n\n            <TextField\n              value={cmanufacturedDate3}\n              id=\"date\"\n              onChange={setForm}\n              name=\"cmanufacturedDate3\"\n              label=\"Manufactured Date\"\n              type=\"date\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              defaultValue=\"0000-00-00\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n            <TextField\n              label=\"Water volume(litres)\"\n              value={waterVolume3}\n              onChange={setForm}\n              name=\"waterVolume3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              fullWidth\n            />\n            <TextField\n              value={cexpiryDate3}\n              id=\"date\"\n              onChange={setForm}\n              name=\"cexpiryDate3\"\n              label=\"Expiry Date\"\n              type=\"date\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              defaultValue=\"0000-00-00\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n\n            <TextField\n              label=\"TBS certificare\"\n              value={tbscertificate3}\n              onChange={setForm}\n              name=\"tbscertificate3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              fullWidth\n            />\n          </Card>{\" \"}\n        </Card>{\" \"}\n        <div style={{ marginTop: \"1rem\" }}>\n          {\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"2px\" }}\n            onClick={() => navigation.previous()}\n          >\n            Back{\" \"}\n          </Button>{\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"1rem\" }}\n            onClick={() => navigation.next()}\n          >\n            Next{\" \"}\n          </Button>{\" \"}\n        </div>{\" \"}\n      </Card>{\" \"}\n    </Container>\n  );\n}\n\nexport default CgnCylinderInfoCont;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/CgnCylinderInfo.js",["337"],"import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\n\nconst style = {\n  display: \"flex\",\n  flexDirection: \"row\",\n};\nconst stylemain = {\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n\n  width: \"800px\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nfunction CgnCylinderInfo({ formData, setForm, navigation }) {\n  const {\n    cylinderno1,\n    cylinderposition1,\n    cylindertype1,\n    cmanufacturer1,\n    cmanuContact1,\n    cylinderno2,\n    cylinderposition2,\n    cylindertype2,\n    cmanufacturer2,\n    cmanuContact2,\n    cylinderno3,\n    cylinderSerialNo1,\n    cylinderSerialNo2,\n    cylinderSerialNo3,\n    cylinderposition3,\n    cylindertype3,\n    cmanufacturer3,\n    cmanuContact3,\n  } = formData;\n\n  async function handle() {\n    let responsecode = \"1234\";\n    if (responsecode) {\n      navigation.next();\n    }\n  }\n\n  return (\n    <Container>\n      <Card style={stylemain}>\n        <h3> CNG CYLINDERS INFORMATION </h3>{\" \"}\n        <Card fullWidth style={style}>\n          <Card>\n            <TextField\n              label=\"Cylinder No.\"\n              value={cylinderno1}\n              onChange={setForm}\n              name=\"cylinderno1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              defaultValue=\"1\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Cylinder position on vehicle\"\n              value={cylinderposition1}\n              onChange={setForm}\n              name=\"cylinderposition1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Cylinder Type\"\n              value={cylindertype1}\n              onChange={setForm}\n              name=\"cylindertype1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Cylinder Serial No\"\n              value={cylinderSerialNo1}\n              onChange={setForm}\n              name=\"cylinderSerialNo1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Manufacturer Name\"\n              value={cmanufacturer1}\n              onChange={setForm}\n              name=\"cmanufacturer1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Manufacturer Contact\"\n              value={cmanuContact1}\n              onChange={setForm}\n              name=\"cmanuContact1\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n          </Card>{\" \"}\n          <Card>\n            <TextField\n              label=\"Cylinder No.\"\n              value={cylinderno2}\n              onChange={setForm}\n              name=\"cylinderno2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              defaultValue=\"2\"\n            />\n            <TextField\n              label=\"Cylinder position on vehicle\"\n              value={cylinderposition2}\n              onChange={setForm}\n              name=\"cylinderposition2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Cylinder Type\"\n              value={cylindertype2}\n              onChange={setForm}\n              name=\"cylindertype2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Cylinder Serial No\"\n              value={cylinderSerialNo2}\n              onChange={setForm}\n              name=\"cylinderSerialNo2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Manufacturer Name\"\n              value={cmanufacturer2}\n              onChange={setForm}\n              name=\"cmanufacturer2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Manufacturer Contact\"\n              value={cmanuContact2}\n              onChange={setForm}\n              name=\"cmanuContact2\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n          </Card>{\" \"}\n          <Card>\n            <TextField\n              label=\"Cylinder No.\"\n              value={cylinderno3}\n              onChange={setForm}\n              name=\"cylinderno3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              defaultValue=\"3\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Cylinder position on vehicle\"\n              value={cylinderposition3}\n              onChange={setForm}\n              name=\"cylinderposition3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Cylinder Type\"\n              value={cylindertype3}\n              onChange={setForm}\n              name=\"cylindertype3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Cylinder Serial No\"\n              value={cylinderSerialNo3}\n              onChange={setForm}\n              name=\"cylinderSerialNo3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Manufacturer Name\"\n              value={cmanufacturer3}\n              onChange={setForm}\n              name=\"cmanufacturer3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n            <TextField\n              label=\"Manufacturer Contact\"\n              value={cmanuContact3}\n              onChange={setForm}\n              name=\"cmanuContact3\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              maxWidth=\"\"\n            />\n          </Card>{\" \"}\n        </Card>{\" \"}\n        <div style={{ marginTop: \"1rem\" }}>\n          {\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"2px\" }}\n            onClick={() => navigation.previous()}\n          >\n            Back{\" \"}\n          </Button>{\" \"}\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginRight: \"1rem\" }}\n            onClick={() => navigation.next()}\n          >\n            Next{\" \"}\n          </Button>{\" \"}\n        </div>{\" \"}\n      </Card>{\" \"}\n    </Container>\n  );\n}\n\nexport default CgnCylinderInfo;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/Preview.js",["338","339","340"],"import React, { useRef, useState, useEffect } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport RenderAccordion from \"./RenderAccordion\";\nimport { postVehicleInfo } from \"../../../client/client\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Spinner from \"../../Spinner/Spiner\";\n\nconst style = {\n  maxWidth: 300,\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nconst spinerStyle = {\n  display: \"flex\",\n  flexDirection: \"rows\",\n  gap: \"12px\",\n};\n\nfunction Preview(data) {\n  const { formData, navigation, nameid } = data;\n  const {\n    name,\n    email,\n    phone,\n    location,\n    validfrom,\n    newInstallation,\n    periodic,\n    afterAccident,\n    ownername,\n    vihecleRegno,\n    manYear,\n    make,\n    model,\n    chasisno,\n    engineno,\n    milliege,\n    biFuel,\n    Dedicated,\n    DualFuel,\n    type,\n    manufacturer,\n    serialno,\n    installername,\n    cylinderno1,\n    cylinderposition1,\n    cylindertype1,\n    cmanufacturer1,\n    cmanuContact1,\n    servicepressure1,\n    cmanufacturedDate1,\n    waterVolume1,\n    cexpiryDate1,\n    tbscertificate1,\n    cylinderno2,\n    cylinderposition2,\n    cylindertype2,\n    cmanufacturer2,\n    cmanuContact2,\n    servicepressure2,\n    cmanufacturedDate2,\n    cylinderSerialNo1,\n    cylinderSerialNo2,\n    cylinderSerialNo3,\n    waterVolume2,\n    cexpiryDate2,\n    tbscertificate2,\n    cylinderno3,\n    cylinderposition3,\n    cylindertype3,\n    cmanufacturer3,\n    cmanuContact3,\n    servicepressure3,\n    cmanufacturedDate3,\n    waterVolume3,\n    cexpiryDate3,\n    tbscertificate3,\n  } = formData;\n\n  const { addToast } = useToasts();\n  const [loading, setLoading] = useState(false);\n\n  async function handle() {\n    try {\n      setLoading(true);\n      const response = await postVehicleInfo(formData);\n\n      if (response) {\n        setLoading(false);\n        addToast(\"... was created successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n        return;\n      }\n      setLoading(false);\n      addToast(\"Wrong Credentials!\", { appearance: \"error\" });\n    } catch (error) {\n      setLoading(false);\n      addToast(\"Failed\", { appearance: \"error\" });\n    }\n  }\n  const { go } = navigation;\n  return (\n    <Container maxWidth=\"sm\" style={{ height: \"90%\" }}>\n      <h3> Review </h3>{\" \"}\n      <RenderAccordion\n        summary=\"OWNER DETAILS\"\n        details={[\n          { nameid: \"Owner\" },\n          { \"Full Name\": name },\n          { Email: email },\n          { Phone: phone },\n          { Location: location },\n        ]}\n        go={go}\n        nameid={nameid}\n      />{\" \"}\n      <RenderAccordion\n        summary=\"INSPECTION TYPE\"\n        details={[\n          { nameid: \"Inspection-type\" },\n          { \"New installation\": newInstallation },\n          { Periodic: periodic },\n          { \"After Accident\": afterAccident },\n          { \"Valid From\": validfrom },\n        ]}\n        go={go}\n        nameid={nameid}\n      />{\" \"}\n      <RenderAccordion\n        summary=\"VEHICLE INFORMATION\"\n        details={[\n          { nameid: \"Vehicle-information\" },\n          { \"Name of Owner\": ownername },\n          { \"Vehicle Reg No\": vihecleRegno },\n          { \"Year of Man\": manYear },\n          { Make: make },\n          { Model: model },\n          { \"Chasis No or VIN\": chasisno },\n          { \"Engine No / Type\": engineno },\n          { \"Milleage at Inspection(km)\": milliege },\n        ]}\n        go={go}\n      />{\" \"}\n      <RenderAccordion\n        summary=\"TYPE OF NGV\"\n        details={[\n          { nameid: \"Type-of-ngv\" },\n          { \"Bi-Fuel\": biFuel },\n          { Dedicated: Dedicated },\n          { \"Dual Fuel\": DualFuel },\n        ]}\n        go={go}\n      />{\" \"}\n      <RenderAccordion\n        summary=\"CONVERSION KIT INFORMATION\"\n        details={[\n          { nameid: \"Conversion-kit-information\" },\n          { Type: type },\n          { Manufacturer: manufacturer },\n          { \"Serial No\": serialno },\n          { \"Name of Installer\": installername },\n        ]}\n        go={go}\n      />{\" \"}\n      <RenderAccordion\n        summary=\"CNG CYLINDER INFORMATION 1\"\n        details={[\n          { nameid: \"Cng-cylinders-information\" },\n          { \"Cylinder No\": cylinderno1 },\n          { \"Cylinder Position\": cylinderposition1 },\n          { \"Cylinder Type\": cylindertype1 },\n          { \"Cylinder Serial No\": cylinderSerialNo1 },\n          { \"Manufacture Name\": cmanufacturer1 },\n          { \"Manufacturer Address\": cmanuContact1 },\n          { \"Service Presssure(MPa)\": servicepressure1 },\n          { \"Manufactured Date\": cmanufacturedDate1 },\n          { \"Water volume(Ltr)\": waterVolume1 },\n          { \"Expiry Date\": cexpiryDate1 },\n          { \"TBS Certificate\": tbscertificate1 },\n        ]}\n        go={go}\n      />{\" \"}\n      <RenderAccordion\n        summary=\"CNG CYLINDER INFORMATION 2\"\n        details={[\n          { nameid: \"Cng-cylinders-information\" },\n          { \"Cylinder No\": cylinderno2 },\n          { \"Cylinder Position\": cylinderposition2 },\n          { \"Cylinder Type\": cylindertype2 },\n          { \"Cylinder Serial No\": cylinderSerialNo2 },\n          { \"Manufacture Name\": cmanufacturer2 },\n          { \"Manufacturer Address\": cmanuContact2 },\n          { \"Service Presssure(MPa)\": servicepressure2 },\n          { \"Manufactured Date\": cmanufacturedDate2 },\n          { \"Water volume(Ltr)\": waterVolume2 },\n          { \"Expiry Date\": cexpiryDate2 },\n          { \"TBS Certificate\": tbscertificate2 },\n        ]}\n        go={go}\n      />{\" \"}\n      <RenderAccordion\n        summary=\"CNG CYLINDER INFORMATION 3\"\n        details={[\n          { nameid: \"Cng-cylinders-information\" },\n          { \"Cylinder No\": cylinderno3 },\n          { \"Cylinder Position\": cylinderposition3 },\n          { \"Cylinder Type\": cylindertype3 },\n          { \"Cylinder Serial No\": cylinderSerialNo3 },\n          { \"Manufacture Name\": cmanufacturer3 },\n          { \"Manufacturer Address\": cmanuContact3 },\n          { \"Service Presssure(MPa)\": servicepressure3 },\n          { \"Manufactured Date\": cmanufacturedDate3 },\n          { \"Water volume(Ltr)\": waterVolume3 },\n          { \"Expiry Date\": cexpiryDate3 },\n          { \"TBS Certificate\": tbscertificate3 },\n        ]}\n        go={go}\n      />{\" \"}\n      <Button\n        variant=\"contained\"\n        width=\"md\"\n        color=\"primary\"\n        style={{ marginTop: \"1rem\" }}\n        onClick={handle}\n      >\n        {loading ? (\n          <div style={spinerStyle}>\n            <Spinner loading={loading} /> Loading...{\" \"}\n          </div>\n        ) : (\n          \"Save\"\n        )}{\" \"}\n      </Button>{\" \"}\n    </Container>\n  );\n}\nexport default Preview;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/RenderAccordion.js",[],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Pdf/Pdf.js",["341"],"import React from \"react\";\nimport ReactToPrint from \"react-to-print\";\nimport Regform from \"../Dash_board/Printform/Printform\";\n\nconst thStyle = {\n  fontFamily: \"Anton\",\n  fontWeight: \"normal\",\n  fontStyle: \"normal\",\n};\n\nclass ComponentToPrint extends React.Component {\n  render() {\n    return <Regform />;\n  }\n}\n\nclass Example extends React.Component {\n  render() {\n    return (\n      <div>\n        <ReactToPrint\n          trigger={() => <button> Print this out! </button>}\n          content={() => this.componentRef}\n        />{\" \"}\n        <ComponentToPrint ref={(el) => (this.componentRef = el)} />{\" \"}\n      </div>\n    );\n  }\n}\n\nexport default Example;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Registration/Owner.js",["342"],"import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\n\nconst style = {\n  maxWidth: 300,\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nfunction Owner({ formData, setForm, navigation }) {\n  const { name, email, phone, plateno, location } = formData;\n\n  async function handle() {\n    let responsecode = \"1234\";\n    if (responsecode) {\n      navigation.next();\n    }\n  }\n\n  return (\n    <Container maxWidth=\"xs\">\n      <Card variant=\"outlined\" style={style}>\n        <h3> OWNER INFORMATION </h3>{\" \"}\n        <TextField\n          label=\"Full Name\"\n          value={name}\n          onChange={setForm}\n          name=\"name\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Location\"\n          value={location}\n          onChange={setForm}\n          name=\"location\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Email\"\n          value={email}\n          onChange={setForm}\n          name=\"email\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <TextField\n          label=\"Phone\"\n          value={phone}\n          onChange={setForm}\n          name=\"phone\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          autoComplete=\"off\"\n          fullWidth\n        />\n        <Button\n          variant=\"contained\"\n          fullWidth\n          color=\"primary\"\n          style={{ marginTop: \"1rem\" }}\n          onClick={handle}\n        >\n          Next{\" \"}\n        </Button>{\" \"}\n      </Card>{\" \"}\n    </Container>\n  );\n}\n\nexport default Owner;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Printform/Printform.js",["343","344","345","346","347","348","349","350","351","352","353","354","355","356"],"import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport { borders } from \"@material-ui/system\";\nimport Box from \"@material-ui/core/Box\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport \"./print.css\";\nimport Masaka from \"../../../assets/signatures/masaka.jpg\";\nimport sign from \"../../../assets/signatures/sign.jpg\";\nimport Majengo from \"../../../assets/signatures/majengo.jpg\";\nimport Rajabu from \"../../../assets/signatures/rajabu.jpg\";\nimport { connect } from \"react-redux\";\n\nconst defaultProps = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  bgcolor: \"background.paper\",\n  style: {\n    width: \"705px\",\n    height: \"3rem\",\n    marginLeft: \"45px\",\n    gap: \"35px\",\n  },\n  borderColor: \"text.primary\",\n};\n\nfunction Printform({ reportdata, profile, dispatch }) {\n  const {\n    createdAt = \"\",\n    validto = \"\",\n    validfrom = \"\",\n    name = \"\",\n    email = \"\",\n    phone = \"\",\n    location = \"\",\n    newInstallation = \"...v...\",\n    periodic = \".....\",\n    afterAccident = \"....\",\n    ownername = \"\",\n    vihecleRegno = \"\",\n    manYear = \"\",\n    make = \"\",\n    model = \"\",\n    chasisno = \"\",\n    engineno = \"\",\n    milliege = \"\",\n    biFuel = \"...\",\n    Dedicated = \"...V...\",\n    DualFuel = \"....\",\n    type = \"\",\n    manufacturer = \"\",\n    serialno = \"-\",\n    installername = \"\",\n    cylinderno3 = \"3\",\n    cylinderposition3 = \"\",\n    cylinderSerialNo3 = \"\",\n    cylindertype3 = \"\",\n    cmanufacturer3 = \"\",\n    cmanuContact3 = \"\",\n    servicepressure3 = \"\",\n    cmanufacturedDate3 = \"\",\n    waterVolume3 = \"\",\n    cexpiryDate3 = \"\",\n    tbscertificate3 = \"\",\n    cylinderno1 = \"1\",\n    cylinderposition1 = \"\",\n    cylindertype1 = \"\",\n    cylinderSerialNo1 = \"\",\n    cmanufacturer1 = \"\",\n    cmanuContact1 = \"\",\n    servicepressure1 = \"\",\n    cmanufacturedDate1 = \"\",\n    waterVolume1 = \"\",\n    cexpiryDate1 = \"\",\n    tbscertificate1 = \"\",\n    cylinderno2 = \"2\",\n    cylinderSerialNo2 = \"\",\n    cylinderposition2 = \"\",\n    cylindertype2 = \"\",\n    cmanufacturer2 = \"\",\n    cmanuContact2 = \"\",\n    servicepressure2 = \"\",\n    cmanufacturedDate2 = \"\",\n    waterVolume2 = \"\",\n    cexpiryDate2 = \"\",\n    tbscertificate2 = \"\",\n    inspectorID = \"\",\n  } = reportdata;\n\n  const signature = profile.signature;\n  let stamp = {};\n\n  if (signature == \"majengo\") {\n    stamp = { name: Majengo };\n  }\n  if (signature == \"masaka\") {\n    stamp = { name: Masaka };\n  }\n  if (signature == \"rajabu\") {\n    stamp = { name: Rajabu };\n  }\n  return (\n    <Container\n      style={{\n        height: \"100hv\",\n        width: \"21.8cm\",\n      }}\n    >\n      <div className=\"pdfform\">\n        <div className=\"pdftitle\">\n          <h4\n            className=\"title\"\n            style={{\n              width: \"fit-content\",\n              fontSize: \"12px\",\n              padding: \"30px 0px\",\n            }}\n          >\n            PILOT NGV PROGRAMME - TANZANIA{\" \"}\n          </h4>{\" \"}\n          <h2 className=\"title\" style={{ width: \"fit-content\" }}>\n            NGV INSPECTION CERTIFICATE{\" \"}\n          </h2>{\" \"}\n          <h4\n            className=\"title\"\n            style={{\n              width: \"fit-content\",\n              fontSize: \"14px\",\n              padding: \"20px 0px 0px 0px\",\n            }}\n          >\n            VALID FROM{\" \"}\n            <span style={{ fontStyle: \"italic\", fontWeight: \"bold\" }}>\n              {\" \"}\n              {validfrom.slice(0, 10).replace(\"T\", \" \")}\n            </span>{\" \"}\n            <span> TO </span>{\" \"}\n            <span style={{ fontStyle: \"italic\", fontWeight: \"bold\" }}>\n              {\" \"}\n              {new Date(validto).toISOString().slice(0, 10).replace(\"T\", \" \")}\n            </span>{\" \"}\n          </h4>{\" \"}\n        </div>{\" \"}\n        <div className=\"inspectionType\">\n          <Box border={1} {...defaultProps}>\n            <h3\n              style={{ padding: \"0px 14px 0px 8px\", fontSize: \"14px\" }}\n              className=\"insp\"\n            >\n              INSPECTION TYPE:{\" \"}\n            </h3>{\" \"}\n            <h5 style={{ padding: \"0px 14px 0px 0px\" }} className=\"insp\">\n              New Installation {newInstallation}{\" \"}\n            </h5>{\" \"}\n            <h5 style={{ padding: \"0px 13px 0px 0px\" }} className=\"insp\">\n              Periodic {periodic}{\" \"}\n            </h5>{\" \"}\n            <h5 style={{ padding: \"0px 10px 0px 0px\" }} className=\"insp\">\n              After Accident {afterAccident}{\" \"}\n            </h5>{\" \"}\n          </Box>{\" \"}\n        </div>{\" \"}\n        <table className=\"vehicleinfo\">\n          <thead>\n            <tr>\n              <th colspan=\"7\" style={{ background: \"#646060\", color: \"#fff\" }}>\n                VEHICLE INFORMATION{\" \"}\n              </th>{\" \"}\n            </tr>{\" \"}\n          </thead>{\" \"}\n          <tbody>\n            <tr className=\"trow\" style={{ border: \"1px solid black\" }}>\n              <td\n                style={{\n                  width: \"145px\",\n                  borderRight: \"solid 1px black\",\n                }}\n              >\n                Name of Owner{\" \"}\n              </td>{\" \"}\n              <td\n                style={{\n                  width: \"80px\",\n                  borderRight: \"solid 1px black\",\n                }}\n              >\n                {\" \"}\n                Vehicle Reg.No{\" \"}\n              </td>{\" \"}\n              <td style={{ width: \"80px\", borderRight: \"solid 1px black\" }}>\n                {\" \"}\n                Year of man.{\" \"}\n              </td>{\" \"}\n              <td style={{ width: \"80px\", borderRight: \"solid 1px black\" }}>\n                {\" \"}\n                Make{\" \"}\n              </td>{\" \"}\n              <td style={{ width: \"80px\", borderRight: \"solid 1px black\" }}>\n                {\" \"}\n                Model{\" \"}\n              </td>{\" \"}\n              <td style={{ width: \"auto\", borderRight: \"solid 1px black\" }}>\n                Chassis No.or VIN Engine No / Type{\" \"}\n              </td>{\" \"}\n              <td style={{ width: \"80px\", borderRight: \"solid 1px black\" }}>\n                {\" \"}\n                Mileage at Inspection(km){\" \"}\n              </td>{\" \"}\n            </tr>{\" \"}\n            <tr className=\"trow\">\n              <td style={{ borderRight: \"solid 1px black\" }}>\n                {\" \"}\n                <span style={{ fontStyle: \"italic\" }}> {ownername} </span>{\" \"}\n              </td>{\" \"}\n              <td style={{ borderRight: \"solid 1px black\" }}>\n                <span style={{ fontStyle: \"italic\" }}> {vihecleRegno} </span>{\" \"}\n              </td>{\" \"}\n              <td style={{ borderRight: \"solid 1px black\" }}>\n                {\" \"}\n                <span style={{ fontStyle: \"italic\" }}>\n                  {\" \"}\n                  {manYear.slice(0, 4).replace(\"T\", \" \")}\n                </span>{\" \"}\n              </td>{\" \"}\n              <td style={{ borderRight: \"solid 1px black\" }}>\n                <span style={{ fontStyle: \"italic\" }}> {make} </span>{\" \"}\n              </td>{\" \"}\n              <td style={{ borderRight: \"solid 1px black\" }}>\n                {\" \"}\n                <span style={{ fontStyle: \"italic\" }}> {model} </span>{\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}>\n                <span style={{ fontStyle: \"italic\" }}> {chasisno} </span>{\" \"}\n                <div>\n                  <div id=\"span1\" class=\"t\">\n                    <span style={{ fontStyle: \"italic\", color: \"blue\" }}>\n                      {\" \"}\n                      {engineno}{\" \"}\n                    </span>{\" \"}\n                  </div>{\" \"}\n                </div>{\" \"}\n              </td>{\" \"}\n              <td style={{ borderLeft: \"solid 1px black\" }}>\n                {\" \"}\n                <span style={{ fontStyle: \"italic\" }}> {milliege} </span>{\" \"}\n              </td>{\" \"}\n            </tr>{\" \"}\n          </tbody>{\" \"}\n        </table>{\" \"}\n        <table className=\"vehicleinfo\">\n          <thead>\n            <tr style={{ border: \"solid 1px black\" }}>\n              <th colspan=\"7\" style={{ background: \"#646060\", color: \"#fff\" }}>\n                TYPE OF NGV{\" \"}\n              </th>{\" \"}\n            </tr>{\" \"}\n          </thead>{\" \"}\n          <tbody>\n            <tr className=\"trow\" style={{ border: \"solid 1px black\" }}>\n              <td style={{ width: \"235px\", borderRight: \"solid 1px black\" }}>\n                {\" \"}\n                Bi - fuel {biFuel}{\" \"}\n              </td>{\" \"}\n              <td style={{ width: \"235px\", borderRight: \"solid 1px black\" }}>\n                {\" \"}\n                Dedicated {Dedicated}{\" \"}\n              </td>{\" \"}\n              <td style={{ width: \"235px\", borderRight: \"solid 1px black\" }}>\n                {\" \"}\n                Dual fuel {DualFuel}{\" \"}\n              </td>{\" \"}\n            </tr>{\" \"}\n          </tbody>{\" \"}\n        </table>{\" \"}\n        <table className=\"converkit\">\n          <thead>\n            <tr style={{ border: \"1px solid black\" }}>\n              <th\n                colspan=\"2\"\n                style={{\n                  background: \"#646060\",\n                  color: \"#fff\",\n                  border: \"1px solid black\",\n                }}\n              >\n                CONVERSION KIT INFORMATION{\" \"}\n              </th>{\" \"}\n            </tr>{\" \"}\n          </thead>{\" \"}\n          <tbody>\n            <tr style={{ border: \"1px solid black\" }}>\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                  border: \"solid 1px black\",\n                }}\n              >\n                Type{\" \"}\n              </td>{\" \"}\n              <td\n                style={{\n                  border: \"solid 1px black\",\n                  textAlign: \"start\",\n                }}\n              >\n                <span> {type} </span>{\" \"}\n              </td>{\" \"}\n            </tr>{\" \"}\n            <tr style={{ border: \"solid 1px black\" }}>\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                  border: \"solid 1px black\",\n                }}\n              >\n                Manufacturer{\" \"}\n              </td>{\" \"}\n              <td\n                style={{\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                  border: \"solid 1px black\",\n                }}\n              >\n                <span> {manufacturer} </span>{\" \"}\n              </td>{\" \"}\n            </tr>{\" \"}\n            <tr className=\"\">\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                  border: \"solid 1px black\",\n                }}\n              >\n                Serial No{\" \"}\n              </td>{\" \"}\n              <td\n                style={{\n                  border: \"solid 1px black\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                }}\n              >\n                {\" \"}\n                <span> {serialno} </span>{\" \"}\n              </td>{\" \"}\n            </tr>{\" \"}\n            <tr className=\"\">\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                  border: \"solid 1px black\",\n                }}\n              >\n                Name of Installer{\" \"}\n              </td>{\" \"}\n              <td\n                style={{\n                  border: \"solid 1px black\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                }}\n              >\n                {\" \"}\n                <span> {installername} </span>{\" \"}\n              </td>{\" \"}\n            </tr>{\" \"}\n          </tbody>{\" \"}\n        </table>{\" \"}\n        <table className=\"cylinder\">\n          <thead>\n            <tr style={{ border: \"solid 1px black\" }}>\n              <th\n                colspan=\"4\"\n                style={{\n                  background: \"#646060\",\n                  color: \"#fff\",\n                }}\n              >\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                  }}\n                >\n                  <div\n                    style={{\n                      width: \"210px\",\n                      paddingLeft: \"3px\",\n                      borderRight: \"1px  solid black\",\n                      height: \"100%\",\n                      paddingTop: \"0px\",\n                      paddingBottom: \"0px\",\n                      borderRight: \"solid 1px black\",\n                    }}\n                  >\n                    CNG CYLINDERS INFROMATION{\" \"}\n                  </div>{\" \"}\n                  <div style={{ margin: \"auto\" }}> Cylinder No. </div>{\" \"}\n                </div>{\" \"}\n              </th>{\" \"}\n            </tr>{\" \"}\n          </thead>{\" \"}\n          <tbody>\n            <tr className=\"\" style={{ height: \"1px\" }}>\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                  border: \"solid 1px black\",\n                }}\n              >\n                Cylinder No.{\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}> {cylinderno1} </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}> {cylinderno2} </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}> {cylinderno3} </td>{\" \"}\n            </tr>{\" \"}\n            <tr className=\"\" style={{ height: \"1px\" }}>\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                  border: \"solid 1px black\",\n                }}\n              >\n                Cylinder Serial No.{\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}>\n                {\" \"}\n                {cylinderSerialNo1}{\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}>\n                {\" \"}\n                {cylinderSerialNo2}{\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}>\n                {\" \"}\n                {cylinderSerialNo3}{\" \"}\n              </td>{\" \"}\n            </tr>{\" \"}\n            <tr className=\"\">\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                  border: \"solid 1px black\",\n                }}\n              >\n                Cylinder position in the Vehicle{\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\", width: \"23.3%\" }}>\n                {\" \"}\n                {cylinderposition1}{\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\", width: \"23.3%\" }}>\n                {\" \"}\n                {cylinderposition2}{\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\", width: \"23.3%\" }}>\n                {\" \"}\n                {cylinderposition3}{\" \"}\n              </td>{\" \"}\n            </tr>{\" \"}\n            <tr className=\"\">\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                  border: \"solid 1px black\",\n                }}\n              >\n                Cylinder Type{\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}> {cylindertype1} </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}> {cylindertype2} </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}> {cylindertype3} </td>{\" \"}\n            </tr>{\" \"}\n            <tr className=\"\">\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                  border: \"solid 1px black\",\n                }}\n              >\n                Manufacture Name{\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}> {cmanufacturer1} </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}> {cmanufacturer2} </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}> {cmanufacturer3} </td>{\" \"}\n            </tr>{\" \"}\n            <tr className=\"\">\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                  border: \"solid 1px black\",\n                }}\n              >\n                Manufacturer Address / Contact{\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}> {cmanuContact1} </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}> {cmanuContact2} </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}> {cmanuContact3} </td>{\" \"}\n            </tr>{\" \"}\n            <tr className=\"\">\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                  border: \"solid 1px black\",\n                }}\n              >\n                Service Pressure(MPa){\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}>\n                {\" \"}\n                {servicepressure1}{\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}>\n                {\" \"}\n                {servicepressure2}{\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}>\n                {\" \"}\n                {servicepressure3}{\" \"}\n              </td>{\" \"}\n            </tr>{\" \"}\n            <tr className=\"\">\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                  border: \"solid 1px black\",\n                }}\n              >\n                Manufactured Date{\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}>\n                {\" \"}\n                {new Date(cmanufacturedDate1)\n                  .toISOString()\n                  .slice(0, 10)\n                  .replace(\"T\", \" \")}{\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}>\n                {\" \"}\n                {new Date(cmanufacturedDate2)\n                  .toISOString()\n                  .slice(0, 10)\n                  .replace(\"T\", \" \")}{\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}>\n                {\" \"}\n                {new Date(cmanufacturedDate3)\n                  .toISOString()\n                  .slice(0, 10)\n                  .replace(\"T\", \" \")}{\" \"}\n              </td>{\" \"}\n            </tr>{\" \"}\n            <tr className=\"\">\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                  border: \"solid 1px black\",\n                }}\n              >\n                Water Volume(litres){\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}> {waterVolume1} </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}> {waterVolume2} </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}> {waterVolume3} </td>{\" \"}\n            </tr>{\" \"}\n            <tr className=\"\">\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                }}\n              >\n                Expiry Date{\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}>\n                {\" \"}\n                {new Date(cexpiryDate1)\n                  .toISOString()\n                  .slice(0, 10)\n                  .replace(\"T\", \" \")}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}>\n                {\" \"}\n                {new Date(cexpiryDate2)\n                  .toISOString()\n                  .slice(0, 10)\n                  .replace(\"T\", \" \")}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}>\n                {\" \"}\n                {new Date(cexpiryDate3)\n                  .toISOString()\n                  .slice(0, 10)\n                  .replace(\"T\", \" \")}{\" \"}\n              </td>{\" \"}\n            </tr>{\" \"}\n            <tr className=\"\">\n              <td\n                style={{\n                  width: \"213px\",\n                  textAlign: \"start\",\n                  paddingLeft: \"5px\",\n                  border: \"solid 1px black\",\n                }}\n              >\n                Certificate of Conformity to Tanzania Standards(TBS){\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}> {tbscertificate1} </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}> {tbscertificate2} </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}> {tbscertificate3} </td>{\" \"}\n            </tr>{\" \"}\n          </tbody>{\" \"}\n        </table>{\" \"}\n        <div\n          style={{\n            width: \"705px\",\n            marginLeft: \"45px\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            marginTop: \"20px\",\n            gap: \"70px\",\n          }}\n        >\n          <div style={{ width: \"200px\", height: \"150px\" }}>\n            <img style={{ width: \"200px\", height: \"150px\" }} src={sign} />{\" \"}\n          </div>{\" \"}\n          <div style={{ width: \"200px\", height: \"120px\" }}>\n            <img style={{ width: \"200px\", height: \"150px\" }} src={stamp.name} />{\" \"}\n          </div>{\" \"}\n        </div>\n        <table className=\"tbs\">\n          <thead>\n            <tr>\n              <th\n                colspan=\"2\"\n                style={{\n                  background: \"#646060\",\n                  color: \"#fff\",\n\n                  textAlign: \"center !important\",\n                }}\n              >\n                INSPECTION STANDARD OR CODE OF PRACTICE USED{\" \"}\n              </th>{\" \"}\n            </tr>{\" \"}\n          </thead>{\" \"}\n          <tbody>\n            <tr className=\"\" style={{ height: \"1px\" }}>\n              <td style={{ border: \"solid 1px black\" }}>\n                <table className=\"inspectionstandards\">\n                  <thead>\n                    <tr>\n                      <th colspan=\"2\" style={{ border: \"1px solid black\" }}>\n                        <div\n                          style={{\n                            display: \"flex\",\n                            flexDirection: \"row\",\n                          }}\n                        >\n                          <div\n                            style={{\n                              paddingLeft: \"3px\",\n                              height: \"100%\",\n                              paddingTop: \"0px\",\n                              paddingBottom: \"0px\",\n                              fontStyle: \"italic\",\n                              fontWeight: \"bold\",\n                            }}\n                          >\n                            Item{\" \"}\n                          </div>{\" \"}\n                        </div>{\" \"}\n                      </th>{\" \"}\n                    </tr>{\" \"}\n                  </thead>{\" \"}\n                  <tbody>\n                    <tr className=\"\" style={{ height: \"1px\" }}>\n                      <td\n                        style={{\n                          width: \"213px\",\n                          textAlign: \"start\",\n                          paddingLeft: \"5px\",\n                          border: \"1px solid black\",\n                        }}\n                      >\n                        CNG cylinder mounting on the brackets{\" \"}\n                      </td>{\" \"}\n                    </tr>{\" \"}\n                    <tr className=\"\">\n                      <td\n                        style={{\n                          width: \"213px\",\n                          textAlign: \"start\",\n                          paddingLeft: \"5px\",\n                          border: \"1px solid black\",\n                        }}\n                      >\n                        CNG cylinder Condition{\" \"}\n                      </td>{\" \"}\n                    </tr>{\" \"}\n                    <tr className=\"\">\n                      <td\n                        style={{\n                          width: \"213px\",\n                          textAlign: \"start\",\n                          paddingLeft: \"5px\",\n                          border: \"1px solid black\",\n                        }}\n                      >\n                        PRD condition and vent line{\" \"}\n                      </td>{\" \"}\n                    </tr>{\" \"}\n                    <tr className=\"\">\n                      <td\n                        style={{\n                          width: \"213px\",\n                          textAlign: \"start\",\n                          paddingLeft: \"5px\",\n                          border: \"1px solid black\",\n                        }}\n                      >\n                        Fuel line from CNG cylinder to Pressure Regulator{\" \"}\n                      </td>{\" \"}\n                    </tr>{\" \"}\n                    <tr className=\"\">\n                      <td\n                        style={{\n                          width: \"213px\",\n                          textAlign: \"start\",\n                          paddingLeft: \"5px\",\n                          border: \"1px solid black\",\n                        }}\n                      >\n                        Pressure Regulator{\" \"}\n                      </td>{\" \"}\n                    </tr>{\" \"}\n                    <tr className=\"\">\n                      <td\n                        style={{\n                          width: \"213px\",\n                          textAlign: \"start\",\n                          paddingLeft: \"5px\",\n                          border: \"1px solid black\",\n                        }}\n                      >\n                        Refuelling connection and mounting{\" \"}\n                      </td>{\" \"}\n                    </tr>{\" \"}\n                    <tr className=\"\">\n                      <td\n                        style={{\n                          width: \"213px\",\n                          textAlign: \"start\",\n                          paddingLeft: \"5px\",\n                          border: \"1px solid black\",\n                        }}\n                      >\n                        Piping and hoses condition and connections under the\n                        bonnet{\" \"}\n                      </td>{\" \"}\n                    </tr>{\" \"}\n                    <tr className=\"\">\n                      <td\n                        style={{\n                          width: \"213px\",\n                          textAlign: \"start\",\n                          paddingLeft: \"5px\",\n                          border: \"1px solid black\",\n                        }}\n                      >\n                        Dressing of wiring{\" \"}\n                      </td>{\" \"}\n                    </tr>{\" \"}\n                  </tbody>{\" \"}\n                </table>{\" \"}\n              </td>{\" \"}\n              <td style={{ border: \"solid 1px black\" }}>\n                <div\n                  style={{\n                    width: \"377px\",\n                    height: \"200px\",\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    gap: \"55px\",\n                  }}\n                >\n                  <div\n                    style={{\n                      border: \"1px solid black\",\n                      height: \"23px\",\n                      fontWeight: \"bold\",\n                      textAlign: \"start\",\n                      padding: \"2px\",\n                      fontStyle: \"italic\",\n                      marginTop: \"0px\",\n                    }}\n                  >\n                    Inspection Procedure{\" \"}\n                  </div>{\" \"}\n                  <div style={{}}>\n                    <p\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        gap: \"15px\",\n                        paddingLeft: \"35px\",\n                        fontStyle: \"italic\",\n                        fontWeight: \"normal\",\n                      }}\n                    >\n                      <h5> &#8226;</h5>\n                      <h5\n                        style={{\n                          fontSize: \"12px\",\n                          width: \"400px\",\n                          textAlign: \"start\",\n                          fontWeight: \"normal\",\n                        }}\n                      >\n                        NFPA - 52: Vehicular Gaseous Fuel Systems Code .2010\n                        Edition{\" \"}\n                      </h5>{\" \"}\n                    </p>{\" \"}\n                    <p\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        gap: \"15px\",\n                        paddingLeft: \"35px\",\n                        fontStyle: \"italic\",\n                        fontWeight: \"normal\",\n                      }}\n                    >\n                      <h5> &#8226;</h5>\n                      <h5\n                        style={{\n                          fontSize: \"12px\",\n                          width: \"400px\",\n                          textAlign: \"start\",\n                          fontWeight: \"normal\",\n                        }}\n                      >\n                        CGA C - 6.4: Compressed Gas Association - Standards for\n                        Visual Inspection of Steel Compressed Gas Cylinders,\n                        2001{\" \"}\n                      </h5>{\" \"}\n                    </p>{\" \"}\n                  </div>{\" \"}\n                </div>{\" \"}\n              </td>{\" \"}\n            </tr>{\" \"}\n          </tbody>{\" \"}\n        </table>{\" \"}\n      </div>{\" \"}\n    </Container>\n  );\n}\nconst MapStateToprops = (store) => {\n  return { ...store };\n};\nexport default connect(MapStateToprops)(Printform);\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Charts/Spline.js",["357"],"import { Chart } from \"react-google-charts\";\nimport * as React from \"react\";\nimport { render } from \"react-dom\";\n\nconst options = {\n  title: \"Months vs. Number of cars inspected\",\n  hAxis: { title: \"Months\", viewWindow: { min: 0, max: 12 } },\n  vAxis: {\n    title: \"Number of cars inspected\",\n    viewWindow: { min: 0, max: 120 },\n  },\n  legend: \"none\",\n};\nconst data = [\n  [\"Months\", \"Number of cars inspected\"],\n  [0, 0],\n  [1, 5],\n  [2, 14],\n  [3, 5],\n  [4, 3],\n  [5, 7],\n  [6, 7],\n  [7, 10],\n  [8, 7],\n  [9, 7],\n  [10, 7],\n  [11, 7],\n  [12, 7],\n];\n\nfunction Spline() {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        background: \"red\",\n\n        width: \"auto\",\n      }}\n    >\n      <Chart\n        chartType=\"LineChart\"\n        data={data}\n        options={options}\n        width=\"100%\"\n        height=\"500px\"\n        legendToggle\n      />\n    </div>\n  );\n}\n\nexport default Spline;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Profile/Profile.js",["358","359","360","361","362","363","364","365"],"import React, { useRef, useState, useEffect } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport { getUserId, httpActions } from \"../../../client/index\";\nimport \"./profile.css\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { connect } from \"react-redux\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { useGet } from \"../../../hooks\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Spinner from \"../../Spinner/Spiner\";\nimport { EDIT_USER, EXIT_EDIT_USER, EXIT_VEW_USER } from \"../../../actions\";\nimport { editProfile } from \"../../../client\";\n\nconst spinerStyle = {\n  display: \"flex\",\n  flexDirection: \"rows\",\n  gap: \"12px\",\n};\n\nconst Editstyle = {\n  maxWidth: 300,\n  padding: \"20px\",\n  borderRadius: \"16px\",\n  margin: \"auto\",\n  transition: \"0.3s\",\n  boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n  \"&:hover\": {\n    boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n  },\n};\n\nconst { putProfile } = httpActions;\n\nfunction Profile({ profile, edituser, dispatch }) {\n  const style = { display: \"flex\", flexDirection: \"row\", fontWeight: \"bold\" };\n  const { fname, initial, lname, email, username, phone, userRole } =\n    profile || {};\n  const { addToast } = useToasts();\n  const [loading, setLoading] = useState(false);\n  const formref = useRef();\n  const fsname = useRef(fname);\n  const lsname = useRef(lname);\n  const usrphone = useRef(phone);\n\n  async function handlesave() {\n    try {\n      setLoading(true);\n      // formref.current.reset();\n      const response = await editProfile({\n        firstname: fsname.current.value,\n        lastname: lsname.current.value,\n        phone: usrphone.current.value,\n      });\n\n      if (response) {\n        setLoading(false);\n        addToast(\"... was Updated successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n        window.location.replace(`/dashboard`);\n        return;\n      }\n      setLoading(false);\n      addToast(\"Updates saved!\", { appearance: \"warning\" });\n    } catch (error) {\n      setLoading(false);\n      addToast(\"Failed\", { appearance: \"error\" });\n    }\n  }\n\n  const edit = false;\n\n  return (\n    <>\n      {\" \"}\n      {!edituser ? (\n        <Card\n          variant=\"outlined \"\n          style={{\n            marginTop: \"10px\",\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"50%\",\n            fontFamily: \"sans-serif\",\n            transform: \"translate(-50%, -50%)\",\n            width: \"35%\",\n            minWidth: \"300px\",\n            zIndex: \"1\",\n            height: \"500px\",\n            borderRadius: \"16px\",\n          }}\n        >\n          <div className=\"pavata\">\n            <div className=\"avata\">\n              <span className=\"initialzoomp\"> {initial} </span>{\" \"}\n            </div>{\" \"}\n          </div>{\" \"}\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n            }}\n          >\n            {\" \"}\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                width: \"80%\",\n                margin: \"50px\",\n                gap: \"16px\",\n              }}\n            >\n              <span style={style}>\n                Name:{\" \"}\n                <span style={{ fontWeight: \"normal\" }}>\n                  {\" \"}\n                  {fname + \"   \" + lname}{\" \"}\n                </span>{\" \"}\n              </span>{\" \"}\n              <span style={style}>\n                Email: <span style={{ fontWeight: \"normal\" }}> {email} </span>{\" \"}\n              </span>{\" \"}\n              <span style={style}>\n                Phone: <span style={{ fontWeight: \"normal\" }}> {phone} </span>{\" \"}\n              </span>{\" \"}\n              <span style={style}>\n                Role: <span style={{ fontWeight: \"normal\" }}> {userRole} </span>{\" \"}\n              </span>{\" \"}\n            </div>{\" \"}\n            <IconButton\n              style={{\n                width: \"10%\",\n                height: \"50px\",\n                marginTop: \"78px\",\n                marginRight: \"30px\",\n              }}\n              color=\"primary\"\n              component=\"span\"\n              onClick={() => {\n                dispatch({ type: EDIT_USER });\n              }}\n            >\n              <Edit />\n            </IconButton>{\" \"}\n          </div>\n          <div style={{ display: \"flex \", justifyContent: \"center\" }}>\n            {\" \"}\n            <Button\n              variant=\"contained\"\n              width=\"sm\"\n              style={{ marginTop: \"1rem\", paddingLeft: \"0px\" }}\n              onClick={() => dispatch({ type: EXIT_VEW_USER })}\n            >\n              Close{\" \"}\n            </Button>{\" \"}\n          </div>\n        </Card>\n      ) : (\n        <Card\n          variant=\"outlined \"\n          style={{\n            marginTop: \"10px\",\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"50%\",\n            fontFamily: \"sans-serif\",\n            transform: \"translate(-50%, -50%)\",\n            width: \"35%\",\n            minWidth: \"300px\",\n            zIndex: \"1\",\n            height: \"400px\",\n            borderRadius: \"16px\",\n            maxWidth: 300,\n            padding: \"20px\",\n            borderRadius: \"16px\",\n            transition: \"0.3s\",\n            boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n            \"&:hover\": {\n              boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n            },\n          }}\n        >\n          {\" \"}\n          <TextField\n            label=\"First Name \"\n            defaultValue={fname}\n            margin=\"normal\"\n            inputRef={fsname}\n            variant=\"outlined\"\n            autoComplete=\"off\"\n            fullWidth\n            ref={formref}\n          />{\" \"}\n          <TextField\n            label=\"Last Name \"\n            margin=\"normal\"\n            inputRef={lsname}\n            variant=\"outlined\"\n            autoComplete=\"off\"\n            defaultValue={lname}\n            fullWidth\n            ref={formref}\n          />{\" \"}\n          <TextField\n            label=\"Phone\"\n            margin=\"normal\"\n            defaultValue={phone}\n            inputRef={usrphone}\n            variant=\"outlined\"\n            autoComplete=\"off\"\n            fullWidth\n            ref={formref}\n          />{\" \"}\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n              gap: \"10px\",\n            }}\n          >\n            {\" \"}\n            <Button\n              variant=\"contained\"\n              widht=\"sm\"\n              color=\"primary\"\n              style={{ marginTop: \"1rem\", paddingLeft: \"0px\" }}\n              onClick={handlesave}\n            >\n              {loading ? (\n                <div style={spinerStyle}>\n                  <Spinner loading={loading} /> Loading...{\" \"}\n                </div>\n              ) : (\n                \"Save\"\n              )}{\" \"}\n            </Button>{\" \"}\n            <Button\n              variant=\"contained\"\n              width=\"sm\"\n              style={{ marginTop: \"1rem\", paddingLeft: \"0px\" }}\n              onClick={() => dispatch({ type: EXIT_EDIT_USER })}\n            >\n              Close{\" \"}\n            </Button>{\" \"}\n          </div>\n          <h4> </h4>{\" \"}\n        </Card>\n      )}{\" \"}\n    </>\n  );\n}\nconst MapStateToprops = (store) => {\n  return { ...store };\n};\nexport default connect(MapStateToprops)(Profile);\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Team/Index.js",["366","367"],"import React, { useMemo } from \"react\";\nimport Table from \"./Table/Table\";\nimport Adduser from \"./Regteam\";\nimport { connect } from \"react-redux\";\nimport { ADD_USER } from \"../../../actions\";\n\nfunction Index({ adduser }) {\n  return (\n    <div style={{ height: \"600px\" }}>{!adduser ? <Table /> : <Adduser />} </div>\n  );\n}\nconst MapStateToprops = (store) => {\n  return { ...store };\n};\nexport default connect(MapStateToprops)(Index);\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Team/Regteam.js",["368","369","370","371","372"],"import React, { useRef, useState, useEffect } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Button from \"@material-ui/core/Button\";\nimport { useToasts } from \"react-toast-notifications\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Spinner from \"../../Spinner/Spiner\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { connect } from \"react-redux\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { ADD_USER, EXIT_ADD_FORM } from \"../../../actions\";\nimport { addUser } from \"../../../client/client\";\n\nconst spinerStyle = {\n  display: \"flex\",\n  flexDirection: \"rows\",\n  gap: \"12px\",\n};\n\nfunction Regteam({ adduser, teamdata, dispatch }) {\n  const style = { display: \"flex\", flexDirection: \"row\", fontWeight: \"bold\" };\n  const [cng, setCng] = useState(\"\");\n  const [open, setOpen] = React.useState(false);\n  const { addToast } = useToasts();\n  const [loading, setLoading] = useState(false);\n  const formref = useRef();\n  const fsname = useRef(\"\");\n  const lsname = useRef(\"\");\n  const usrphone = useRef(\"\");\n  const email = useRef(\"\");\n  const signature = useRef(\"\");\n  const pass = useRef(\"\");\n\n  const {\n    fname = \"\",\n    lname = \"\",\n    usphone = \"\",\n    usremail = \"\",\n    usrcng = \"\",\n    usrpass = \"\",\n  } = teamdata;\n  const handleChange = (event) => {\n    setCng(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  async function handlesave() {\n    try {\n      setLoading(true);\n      // formref.current.reset();\n      let response = await addUser({\n        firstname: fsname.current.value,\n        lastname: lsname.current.value,\n        email: email.current.value,\n        username: email.current.value,\n        signature: cng,\n        phone: usrphone.current.value,\n        password: pass.current.value,\n      });\n\n      if (response) {\n        setLoading(false);\n        addToast(\" User Added successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n        window.location.replace(`/dashboard/team`);\n        return;\n      }\n      setLoading(false);\n      addToast(\"Updates saved!\", { appearance: \"warning\" });\n    } catch (error) {\n      setLoading(false);\n      addToast(\"Failed\", { appearance: \"error\" });\n    }\n  }\n\n  return (\n    <Card\n      variant=\"outlined \"\n      style={{\n        marginTop: \"30px\",\n        position: \"absolute\",\n        left: \"50%\",\n        top: \"50%\",\n        fontFamily: \"sans-serif\",\n        transform: \"translate(-50%, -50%)\",\n        width: \"35%\",\n        minWidth: \"300px\",\n        zIndex: \"1\",\n        height: \"auto\",\n        borderRadius: \"16px\",\n        marginBottom: \"20px !important\",\n        maxWidth: 300,\n        padding: \"20px\",\n        borderRadius: \"16px\",\n        transition: \"0.3s\",\n        boxShadow: \"0 8px 40px -12px rgba(0,0,0,0.4)\",\n        \"&:hover\": {\n          boxShadow: \"0 16px 70px -12.125px rgba(0,0,0,0.4)\",\n        },\n      }}\n    >\n      {\" \"}\n      <TextField\n        label=\"First Name \"\n        margin=\"normal\"\n        inputRef={fsname}\n        variant=\"outlined\"\n        autoComplete=\"off\"\n        fullWidth\n        ref={formref}\n        defaultValue={fname}\n      />{\" \"}\n      <TextField\n        label=\"Last Name \"\n        margin=\"normal\"\n        inputRef={lsname}\n        variant=\"outlined\"\n        autoComplete=\"off\"\n        fullWidth\n        defaultValue={lname}\n        ref={formref}\n      />{\" \"}\n      <TextField\n        label=\"Phone\"\n        margin=\"normal\"\n        inputRef={usrphone}\n        variant=\"outlined\"\n        autoComplete=\"off\"\n        fullWidth\n        ref={formref}\n        defaultValue={usphone}\n      />{\" \"}\n      <TextField\n        label=\"Email\"\n        margin=\"normal\"\n        inputRef={email}\n        variant=\"outlined\"\n        autoComplete=\"off\"\n        fullWidth\n        defaultValue={usremail}\n        ref={formref}\n      />{\" \"}\n      <TextField\n        label=\"Password\"\n        margin=\"normal\"\n        inputRef={pass}\n        variant=\"outlined\"\n        autoComplete=\"off\"\n        fullWidth\n        defaultValue={usrpass}\n        ref={formref}\n      />{\" \"}\n      <InputLabel id=\"label\"> CNG - FSI </InputLabel>{\" \"}\n      <Select\n        labelId=\"label\"\n        id=\"select\"\n        open={open}\n        onClose={handleClose}\n        onOpen={handleOpen}\n        value={cng}\n        onChange={handleChange}\n        defaultValue={usrcng}\n        ref={formref}\n      >\n        <MenuItem value=\"majengo\"> Majengo </MenuItem>{\" \"}\n        <MenuItem value=\"masaka\"> Masaka </MenuItem>{\" \"}\n        <MenuItem value=\"rajabu\"> Rajabu </MenuItem>{\" \"}\n      </Select>{\" \"}\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          gap: \"10px\",\n        }}\n      >\n        {\" \"}\n        <Button\n          variant=\"contained\"\n          width=\"sm\"\n          color=\"primary\"\n          style={{ marginTop: \"1rem\" }}\n          onClick={handlesave}\n        >\n          {loading ? (\n            <div style={spinerStyle}>\n              <Spinner loading={loading} /> Loading...{\" \"}\n            </div>\n          ) : (\n            \"Save\"\n          )}{\" \"}\n        </Button>{\" \"}\n        <Button\n          variant=\"contained\"\n          width=\"sm\"\n          style={{ marginTop: \"1rem\" }}\n          onClick={() => dispatch({ type: EXIT_ADD_FORM })}\n        >\n          Close{\" \"}\n        </Button>{\" \"}\n      </div>{\" \"}\n      <h4> </h4>{\" \"}\n    </Card>\n  );\n}\nconst MapStateToprops = (store) => {\n  return { ...store };\n};\n\nexport default connect(MapStateToprops)(Regteam);\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Team/Table/Table.js",["373","374","375","376","377","378","379","380","381","382","383","384","385","386"],"import React, {\n  useCallback,\n  useMemo,\n  useEffect,\n  useState,\n  useRef,\n} from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { FaEye, FaRegEye, FaTrash, FaPrint } from \"react-icons/fa\";\nimport { ImPencil } from \"react-icons/im\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { useToasts } from \"react-toast-notifications\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Pagination from \"react-bootstrap/Pagination\";\nimport { useGet, useGetList } from \"../../../../hooks/index\";\nimport { connect } from \"react-redux\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { getUsers, deleteUser } from \"../../../../client/client\";\nimport {\n  ADD_USER,\n  SAVE_PROFILE_DATA,\n  CLEAR_PROFILE_DATA,\n} from \"../../../../actions\";\nimport \"./tableteam.css\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nfunction BasicTable({ adduser, dispatch }) {\n  const { results: rows, loading, refresh } = useGetList(getUsers);\n  const { addToast } = useToasts();\n  const [loadingdel, setLoadingdel] = useState(false);\n\n  const Actions = useCallback(\n    (row) => (\n      <div\n        style={{\n          marginTop: \"30px\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          gap: \"15px\",\n          paddingRight: \"40px\",\n        }}\n      >\n        <Link>\n          {\" \"}\n          <ImPencil\n            className=\"IconStyle\"\n            onClick={() => {\n              dispatch({ type: SAVE_PROFILE_DATA, payload: row });\n              dispatch({ type: ADD_USER });\n            }}\n          />\n        </Link>\n\n        <FaTrash\n          id=\"trash\"\n          className=\"IconStyle\"\n          onClick={() => {\n            handledelete(row);\n          }}\n        />\n      </div>\n    ),\n    []\n  );\n  let history = useHistory();\n  const columns = [\n    { label: \"First name\", show: true, name: \"first_name\" },\n    { label: \"Last name\", show: true, name: \"last_name\" },\n    { label: \"Phone \", show: true, name: \"phone\" },\n    { label: \"Email\", show: true, name: \"email\" },\n    { label: \"Role\", show: true, name: \"userRole\" },\n    { label: \"Signature \", show: true, name: \"signature\" },\n    { name: \"formatter\", label: \"Actions\", show: true, formatter: Actions },\n  ];\n\n  const classes = useStyles();\n  const handleAdduser = () => {\n    dispatch({ type: CLEAR_PROFILE_DATA });\n    dispatch({ type: ADD_USER });\n  };\n\n  async function handledelete(row) {\n    const { id } = row;\n    try {\n      setLoadingdel(true);\n      let response = await deleteUser(id);\n\n      if (response) {\n        setLoadingdel(false);\n        addToast(\"deleted successfully\", {\n          appearance: \"success\",\n          autoDismiss: true,\n        });\n        window.location.replace(\"/dashboard/team\");\n        return;\n      }\n      setLoadingdel(false);\n      addToast(\"Wrong Credentials!\", { appearance: \"error\" });\n    } catch (error) {\n      setLoadingdel(false);\n      addToast(\"Failed\", { appearance: \"error\" });\n    }\n  }\n\n  return (\n    <div className=\"table-wrapper\">\n      <div style={{ textAlign: \"center\" }}>TEAM</div>\n\n      <TableContainer\n        component={Paper}\n        style={{\n          border: \"none\",\n        }}\n      >\n        <Table\n          className={classes.table}\n          aria-label=\"simple table\"\n          style={{\n            border: \"none\",\n            padding: \"auto\",\n          }}\n        >\n          <TableHead style={{ background: \"rgb(241, 239, 239)\" }}>\n            <TableRow>\n              <TableCell></TableCell>\n              {columns.map((th) => (\n                <TableCell>{th.label}</TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row, index) => (\n              <TableRow key={row.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {index + 1}\n                </TableCell>\n                {columns.map((column) => {\n                  if (column.show == false) {\n                    return null;\n                  }\n                  if (column.name == \"formatter\") {\n                    return <TableCell>{column.formatter(row)}</TableCell>;\n                  }\n                  return (\n                    <TableCell style={{ border: \"none !important\" }}>\n                      {row[column.name] || \"N/A\"}\n                    </TableCell>\n                  );\n                })}\n              </TableRow>\n            ))}\n          </TableBody>\n          <caption>\n            <div style={{ float: \"right\", marginRight: \"50px\" }}>\n              <Pagination\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  textDecoration: \"none !important\",\n                }}\n              >\n                <AddIcon className=\"plus\" onClick={handleAdduser} />\n                <Pagination.First onClick={() => \"\"} disabled={true} />\n                <Pagination.Prev onClick={() => \"goToPage(currentPage - 1)\"} />\n                <Pagination.Next onClick={() => \" goToPage(currentPage + 1)\"} />\n                <Pagination.Last onClick={() => \"goToPage(pages)\"} />\n              </Pagination>\n            </div>\n          </caption>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\nconst MapStateToprops = (store) => {\n  return { ...store };\n};\nexport default connect(MapStateToprops)(BasicTable);\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Report/Report.js",["387","388","389","390","391","392"],"import React from \"react\";\nimport {\n  Redirect,\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport Table from \"./Table/Table\";\nimport VehicleReg from \"../Registration/index\";\nimport PrintForm from \"../Printform/Printform\";\nimport Pdf from \"../../Pdf/Pdf\";\nimport View from \"./View\";\n\nfunction Report() {\n  const table = false;\n  const editdata = true;\n  const viewdata = false;\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/dashboard/reports\" exact component={Table} />{\" \"}\n        <Route path=\"/dashboard/reports/edit\" exact component={VehicleReg} />{\" \"}\n        <Route path=\"/dashboard/reports/view\" exact component={View} />{\" \"}\n      </Switch>{\" \"}\n    </Router>\n  );\n}\n\nexport default Report;\n","/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Report/Table/Table.js",["393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412"],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Pdf/previe.js",["413"],"/home/pwamly/pwamly2020/Devhooks/portal/netbot/src/components/Dash_board/Report/View.js",["414","415","416","417","418","419"],"import React, { PureComponent } from \"react\";\nimport Pdf from \"../Printform/Printform\";\nimport Button from \"@material-ui/core/Button\";\nimport ReactToPrint from \"react-to-print\";\nimport { Link, useHistory, withRouter } from \"react-router-dom\";\n\nconst viewpdf = {};\nconst actions = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  gap: \"30px\",\n  justifyContent: \"center\",\n  marginBottom: \"20px\",\n};\n\nconst thStyle = {\n  fontFamily: \"Anton\",\n  fontWeight: \"normal\",\n  fontStyle: \"normal\",\n};\n\n// export const Componet = withRouter(({ history, location }) => {});\n\nclass ComponentToPrint extends React.Component {\n  render() {\n    return <Pdf />;\n  }\n}\n\nclass Example extends PureComponent {\n  render() {\n    const { history, location } = this.props;\n    return (\n      <div>\n        <ComponentToPrint ref={(el) => (this.componentRef = el)} />\n        <div style={actions}>\n          <ReactToPrint\n            trigger={() => (\n              <Button\n                variant=\"contained\"\n                width=\"sm\"\n                color=\"primary\"\n                style={{ marginTop: \"1rem\", paddingLeft: \"0px\" }}\n              >\n                Print\n              </Button>\n            )}\n            content={() => this.componentRef}\n          />\n          <Button\n            variant=\"contained\"\n            width=\"sm\"\n            color=\"primary\"\n            style={{ marginTop: \"1rem\", paddingLeft: \"0px\" }}\n            onClick={() => history.push(\"/dashboard/reports\")}\n          >\n            Back\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Example;\n",{"ruleId":"420","replacedBy":"421"},{"ruleId":"422","replacedBy":"423"},{"ruleId":"424","severity":1,"message":"425","line":11,"column":8,"nodeType":"426","messageId":"427","endLine":11,"endColumn":12},{"ruleId":"424","severity":1,"message":"428","line":16,"column":10,"nodeType":"426","messageId":"427","endLine":16,"endColumn":18},{"ruleId":"424","severity":1,"message":"429","line":16,"column":20,"nodeType":"426","messageId":"427","endLine":16,"endColumn":30},{"ruleId":"424","severity":1,"message":"430","line":3,"column":8,"nodeType":"426","messageId":"427","endLine":3,"endColumn":12},{"ruleId":"424","severity":1,"message":"431","line":11,"column":7,"nodeType":"426","messageId":"427","endLine":11,"endColumn":12},{"ruleId":"424","severity":1,"message":"432","line":12,"column":7,"nodeType":"426","messageId":"427","endLine":12,"endColumn":13},{"ruleId":"433","severity":1,"message":"434","line":6,"column":3,"nodeType":"435","messageId":"436","endLine":12,"endColumn":4},{"ruleId":"420","replacedBy":"437"},{"ruleId":"422","replacedBy":"438"},{"ruleId":"420","replacedBy":"439"},{"ruleId":"422","replacedBy":"440"},{"ruleId":"424","severity":1,"message":"441","line":1,"column":10,"nodeType":"426","messageId":"427","endLine":1,"endColumn":19},{"ruleId":"424","severity":1,"message":"442","line":2,"column":10,"nodeType":"426","messageId":"427","endLine":2,"endColumn":15},{"ruleId":"424","severity":1,"message":"443","line":4,"column":10,"nodeType":"426","messageId":"427","endLine":4,"endColumn":20},{"ruleId":"424","severity":1,"message":"444","line":5,"column":10,"nodeType":"426","messageId":"427","endLine":5,"endColumn":15},{"ruleId":"424","severity":1,"message":"445","line":85,"column":15,"nodeType":"426","messageId":"427","endLine":85,"endColumn":23},{"ruleId":"446","severity":1,"message":"447","line":104,"column":9,"nodeType":"448","messageId":"449","endLine":104,"endColumn":46},{"ruleId":"424","severity":1,"message":"450","line":117,"column":17,"nodeType":"426","messageId":"427","endLine":117,"endColumn":28},{"ruleId":"451","severity":1,"message":"452","line":118,"column":28,"nodeType":"453","messageId":"454","endLine":118,"endColumn":30},{"ruleId":"424","severity":1,"message":"455","line":433,"column":23,"nodeType":"426","messageId":"427","endLine":433,"endColumn":29},{"ruleId":"424","severity":1,"message":"456","line":14,"column":25,"nodeType":"426","messageId":"427","endLine":14,"endColumn":32},{"ruleId":"424","severity":1,"message":"457","line":14,"column":34,"nodeType":"426","messageId":"427","endLine":14,"endColumn":41},{"ruleId":"424","severity":1,"message":"458","line":2,"column":5,"nodeType":"426","messageId":"427","endLine":2,"endColumn":18},{"ruleId":"424","severity":1,"message":"459","line":4,"column":5,"nodeType":"426","messageId":"427","endLine":4,"endColumn":20},{"ruleId":"424","severity":1,"message":"460","line":22,"column":5,"nodeType":"426","messageId":"427","endLine":22,"endColumn":15},{"ruleId":"424","severity":1,"message":"461","line":22,"column":17,"nodeType":"426","messageId":"427","endLine":22,"endColumn":29},{"ruleId":"462","severity":1,"message":"463","line":1,"column":1,"nodeType":"448","messageId":"464","endLine":1,"endColumn":14,"fix":"465"},{"ruleId":"462","severity":1,"message":"463","line":1,"column":1,"nodeType":"448","messageId":"464","endLine":1,"endColumn":14,"fix":"466"},{"ruleId":"424","severity":1,"message":"442","line":4,"column":10,"nodeType":"426","messageId":"427","endLine":4,"endColumn":15},{"ruleId":"424","severity":1,"message":"467","line":9,"column":44,"nodeType":"426","messageId":"427","endLine":9,"endColumn":54},{"ruleId":"468","severity":1,"message":"469","line":60,"column":8,"nodeType":"470","endLine":60,"endColumn":64,"suggestions":"471"},{"ruleId":"468","severity":1,"message":"469","line":111,"column":8,"nodeType":"470","endLine":111,"endColumn":51,"suggestions":"472"},{"ruleId":"468","severity":1,"message":"473","line":156,"column":8,"nodeType":"470","endLine":156,"endColumn":23,"suggestions":"474"},{"ruleId":"424","severity":1,"message":"475","line":13,"column":8,"nodeType":"426","messageId":"427","endLine":13,"endColumn":15},{"ruleId":"424","severity":1,"message":"476","line":14,"column":8,"nodeType":"426","messageId":"427","endLine":14,"endColumn":17},{"ruleId":"424","severity":1,"message":"477","line":21,"column":3,"nodeType":"426","messageId":"427","endLine":21,"endColumn":11},{"ruleId":"424","severity":1,"message":"478","line":23,"column":3,"nodeType":"426","messageId":"427","endLine":23,"endColumn":8},{"ruleId":"424","severity":1,"message":"456","line":32,"column":25,"nodeType":"426","messageId":"427","endLine":32,"endColumn":32},{"ruleId":"424","severity":1,"message":"457","line":32,"column":34,"nodeType":"426","messageId":"427","endLine":32,"endColumn":41},{"ruleId":"468","severity":1,"message":"479","line":58,"column":6,"nodeType":"470","endLine":58,"endColumn":12,"suggestions":"480"},{"ruleId":"451","severity":1,"message":"452","line":18,"column":15,"nodeType":"453","messageId":"454","endLine":18,"endColumn":17},{"ruleId":"424","severity":1,"message":"481","line":1,"column":17,"nodeType":"426","messageId":"427","endLine":1,"endColumn":25},{"ruleId":"482","severity":2,"message":"483","line":9,"column":21,"nodeType":"426","messageId":"484","endLine":9,"endColumn":28},{"ruleId":"482","severity":2,"message":"485","line":10,"column":47,"nodeType":"426","messageId":"484","endLine":10,"endColumn":58},{"ruleId":"486","severity":1,"message":"487","line":19,"column":3,"nodeType":"488","messageId":"489","endLine":24,"endColumn":4},{"ruleId":"424","severity":1,"message":"490","line":5,"column":10,"nodeType":"426","messageId":"427","endLine":5,"endColumn":17},{"ruleId":"424","severity":1,"message":"491","line":21,"column":18,"nodeType":"426","messageId":"427","endLine":21,"endColumn":22},{"ruleId":"424","severity":1,"message":"492","line":21,"column":24,"nodeType":"426","messageId":"427","endLine":21,"endColumn":31},{"ruleId":"424","severity":1,"message":"493","line":1,"column":35,"nodeType":"426","messageId":"427","endLine":1,"endColumn":44},{"ruleId":"424","severity":1,"message":"494","line":2,"column":16,"nodeType":"426","messageId":"427","endLine":2,"endColumn":26},{"ruleId":"424","severity":1,"message":"495","line":3,"column":8,"nodeType":"426","messageId":"427","endLine":3,"endColumn":17},{"ruleId":"486","severity":1,"message":"487","line":19,"column":3,"nodeType":"488","messageId":"489","endLine":24,"endColumn":4},{"ruleId":"424","severity":1,"message":"496","line":1,"column":17,"nodeType":"426","messageId":"427","endLine":1,"endColumn":23},{"ruleId":"424","severity":1,"message":"493","line":1,"column":35,"nodeType":"426","messageId":"427","endLine":1,"endColumn":44},{"ruleId":"424","severity":1,"message":"456","line":23,"column":10,"nodeType":"426","messageId":"427","endLine":23,"endColumn":17},{"ruleId":"424","severity":1,"message":"491","line":24,"column":18,"nodeType":"426","messageId":"427","endLine":24,"endColumn":22},{"ruleId":"424","severity":1,"message":"492","line":24,"column":24,"nodeType":"426","messageId":"427","endLine":24,"endColumn":31},{"ruleId":"424","severity":1,"message":"496","line":1,"column":17,"nodeType":"426","messageId":"427","endLine":1,"endColumn":23},{"ruleId":"424","severity":1,"message":"493","line":1,"column":35,"nodeType":"426","messageId":"427","endLine":1,"endColumn":44},{"ruleId":"424","severity":1,"message":"456","line":23,"column":10,"nodeType":"426","messageId":"427","endLine":23,"endColumn":17},{"ruleId":"424","severity":1,"message":"497","line":4,"column":10,"nodeType":"426","messageId":"427","endLine":4,"endColumn":21},{"ruleId":"424","severity":1,"message":"498","line":5,"column":13,"nodeType":"426","messageId":"427","endLine":5,"endColumn":20},{"ruleId":"424","severity":1,"message":"499","line":6,"column":13,"nodeType":"426","messageId":"427","endLine":6,"endColumn":20},{"ruleId":"424","severity":1,"message":"500","line":7,"column":13,"nodeType":"426","messageId":"427","endLine":7,"endColumn":20},{"ruleId":"424","severity":1,"message":"501","line":13,"column":9,"nodeType":"426","messageId":"427","endLine":13,"endColumn":20},{"ruleId":"424","severity":1,"message":"498","line":2,"column":13,"nodeType":"426","messageId":"427","endLine":2,"endColumn":20},{"ruleId":"424","severity":1,"message":"502","line":14,"column":15,"nodeType":"426","messageId":"427","endLine":14,"endColumn":23},{"ruleId":"424","severity":1,"message":"503","line":19,"column":5,"nodeType":"426","messageId":"427","endLine":19,"endColumn":14},{"ruleId":"424","severity":1,"message":"504","line":20,"column":5,"nodeType":"426","messageId":"427","endLine":20,"endColumn":12},{"ruleId":"424","severity":1,"message":"505","line":76,"column":5,"nodeType":"426","messageId":"427","endLine":76,"endColumn":16},{"ruleId":"486","severity":1,"message":"487","line":154,"column":3,"nodeType":"488","messageId":"489","endLine":299,"endColumn":4},{"ruleId":"424","severity":1,"message":"506","line":21,"column":5,"nodeType":"426","messageId":"427","endLine":21,"endColumn":20},{"ruleId":"424","severity":1,"message":"507","line":22,"column":5,"nodeType":"426","messageId":"427","endLine":22,"endColumn":13},{"ruleId":"424","severity":1,"message":"508","line":23,"column":5,"nodeType":"426","messageId":"427","endLine":23,"endColumn":18},{"ruleId":"424","severity":1,"message":"509","line":28,"column":5,"nodeType":"426","messageId":"427","endLine":28,"endColumn":10},{"ruleId":"424","severity":1,"message":"510","line":29,"column":5,"nodeType":"426","messageId":"427","endLine":29,"endColumn":13},{"ruleId":"424","severity":1,"message":"511","line":30,"column":5,"nodeType":"426","messageId":"427","endLine":30,"endColumn":13},{"ruleId":"424","severity":1,"message":"512","line":31,"column":5,"nodeType":"426","messageId":"427","endLine":31,"endColumn":13},{"ruleId":"424","severity":1,"message":"513","line":40,"column":9,"nodeType":"426","messageId":"427","endLine":40,"endColumn":16},{"ruleId":"424","severity":1,"message":"506","line":21,"column":5,"nodeType":"426","messageId":"427","endLine":21,"endColumn":20},{"ruleId":"424","severity":1,"message":"507","line":22,"column":5,"nodeType":"426","messageId":"427","endLine":22,"endColumn":13},{"ruleId":"424","severity":1,"message":"508","line":23,"column":5,"nodeType":"426","messageId":"427","endLine":23,"endColumn":18},{"ruleId":"424","severity":1,"message":"514","line":24,"column":5,"nodeType":"426","messageId":"427","endLine":24,"endColumn":14},{"ruleId":"424","severity":1,"message":"515","line":26,"column":5,"nodeType":"426","messageId":"427","endLine":26,"endColumn":12},{"ruleId":"424","severity":1,"message":"516","line":27,"column":5,"nodeType":"426","messageId":"427","endLine":27,"endColumn":9},{"ruleId":"424","severity":1,"message":"513","line":40,"column":9,"nodeType":"426","messageId":"427","endLine":40,"endColumn":16},{"ruleId":"424","severity":1,"message":"517","line":20,"column":11,"nodeType":"426","messageId":"427","endLine":20,"endColumn":15},{"ruleId":"424","severity":1,"message":"518","line":43,"column":18,"nodeType":"426","messageId":"427","endLine":43,"endColumn":24},{"ruleId":"424","severity":1,"message":"518","line":46,"column":18,"nodeType":"426","messageId":"427","endLine":46,"endColumn":24},{"ruleId":"424","severity":1,"message":"496","line":1,"column":17,"nodeType":"426","messageId":"427","endLine":1,"endColumn":23},{"ruleId":"424","severity":1,"message":"493","line":1,"column":35,"nodeType":"426","messageId":"427","endLine":1,"endColumn":44},{"ruleId":"424","severity":1,"message":"519","line":9,"column":7,"nodeType":"426","messageId":"427","endLine":9,"endColumn":12},{"ruleId":"424","severity":1,"message":"520","line":5,"column":7,"nodeType":"426","messageId":"427","endLine":5,"endColumn":14},{"ruleId":"424","severity":1,"message":"521","line":20,"column":31,"nodeType":"426","messageId":"427","endLine":20,"endColumn":38},{"ruleId":"424","severity":1,"message":"522","line":3,"column":10,"nodeType":"426","messageId":"427","endLine":3,"endColumn":17},{"ruleId":"424","severity":1,"message":"523","line":5,"column":8,"nodeType":"426","messageId":"427","endLine":5,"endColumn":22},{"ruleId":"424","severity":1,"message":"503","line":28,"column":5,"nodeType":"426","messageId":"427","endLine":28,"endColumn":14},{"ruleId":"424","severity":1,"message":"524","line":31,"column":5,"nodeType":"426","messageId":"427","endLine":31,"endColumn":9},{"ruleId":"424","severity":1,"message":"525","line":32,"column":5,"nodeType":"426","messageId":"427","endLine":32,"endColumn":10},{"ruleId":"424","severity":1,"message":"526","line":33,"column":5,"nodeType":"426","messageId":"427","endLine":33,"endColumn":10},{"ruleId":"424","severity":1,"message":"527","line":34,"column":5,"nodeType":"426","messageId":"427","endLine":34,"endColumn":13},{"ruleId":"424","severity":1,"message":"505","line":86,"column":5,"nodeType":"426","messageId":"427","endLine":86,"endColumn":16},{"ruleId":"451","severity":1,"message":"452","line":92,"column":17,"nodeType":"453","messageId":"454","endLine":92,"endColumn":19},{"ruleId":"451","severity":1,"message":"452","line":95,"column":17,"nodeType":"453","messageId":"454","endLine":95,"endColumn":19},{"ruleId":"451","severity":1,"message":"452","line":98,"column":17,"nodeType":"453","messageId":"454","endLine":98,"endColumn":19},{"ruleId":"528","severity":1,"message":"529","line":401,"column":23,"nodeType":"530","messageId":"454","endLine":401,"endColumn":34},{"ruleId":"531","severity":1,"message":"532","line":652,"column":13,"nodeType":"533","endLine":652,"endColumn":75},{"ruleId":"531","severity":1,"message":"532","line":655,"column":13,"nodeType":"533","endLine":655,"endColumn":81},{"ruleId":"424","severity":1,"message":"534","line":3,"column":10,"nodeType":"426","messageId":"427","endLine":3,"endColumn":16},{"ruleId":"424","severity":1,"message":"493","line":1,"column":35,"nodeType":"426","messageId":"427","endLine":1,"endColumn":44},{"ruleId":"424","severity":1,"message":"535","line":3,"column":10,"nodeType":"426","messageId":"427","endLine":3,"endColumn":19},{"ruleId":"424","severity":1,"message":"536","line":9,"column":10,"nodeType":"426","messageId":"427","endLine":9,"endColumn":16},{"ruleId":"424","severity":1,"message":"537","line":22,"column":7,"nodeType":"426","messageId":"427","endLine":22,"endColumn":16},{"ruleId":"424","severity":1,"message":"538","line":34,"column":9,"nodeType":"426","messageId":"427","endLine":34,"endColumn":19},{"ruleId":"424","severity":1,"message":"539","line":38,"column":41,"nodeType":"426","messageId":"427","endLine":38,"endColumn":49},{"ruleId":"424","severity":1,"message":"540","line":74,"column":9,"nodeType":"426","messageId":"427","endLine":74,"endColumn":13},{"ruleId":"528","severity":1,"message":"541","line":179,"column":13,"nodeType":"530","messageId":"454","endLine":179,"endColumn":25},{"ruleId":"424","severity":1,"message":"542","line":1,"column":17,"nodeType":"426","messageId":"427","endLine":1,"endColumn":24},{"ruleId":"424","severity":1,"message":"543","line":5,"column":10,"nodeType":"426","messageId":"427","endLine":5,"endColumn":18},{"ruleId":"424","severity":1,"message":"493","line":1,"column":35,"nodeType":"426","messageId":"427","endLine":1,"endColumn":44},{"ruleId":"424","severity":1,"message":"543","line":11,"column":10,"nodeType":"426","messageId":"427","endLine":11,"endColumn":18},{"ruleId":"424","severity":1,"message":"519","line":21,"column":9,"nodeType":"426","messageId":"427","endLine":21,"endColumn":14},{"ruleId":"424","severity":1,"message":"544","line":31,"column":9,"nodeType":"426","messageId":"427","endLine":31,"endColumn":18},{"ruleId":"528","severity":1,"message":"541","line":103,"column":9,"nodeType":"530","messageId":"454","endLine":103,"endColumn":21},{"ruleId":"424","severity":1,"message":"542","line":3,"column":3,"nodeType":"426","messageId":"427","endLine":3,"endColumn":10},{"ruleId":"424","severity":1,"message":"493","line":4,"column":3,"nodeType":"426","messageId":"427","endLine":4,"endColumn":12},{"ruleId":"424","severity":1,"message":"496","line":6,"column":3,"nodeType":"426","messageId":"427","endLine":6,"endColumn":9},{"ruleId":"424","severity":1,"message":"545","line":10,"column":10,"nodeType":"426","messageId":"427","endLine":10,"endColumn":15},{"ruleId":"424","severity":1,"message":"546","line":10,"column":17,"nodeType":"426","messageId":"427","endLine":10,"endColumn":25},{"ruleId":"424","severity":1,"message":"547","line":10,"column":36,"nodeType":"426","messageId":"427","endLine":10,"endColumn":43},{"ruleId":"424","severity":1,"message":"536","line":21,"column":10,"nodeType":"426","messageId":"427","endLine":21,"endColumn":16},{"ruleId":"424","severity":1,"message":"456","line":39,"column":26,"nodeType":"426","messageId":"427","endLine":39,"endColumn":33},{"ruleId":"424","severity":1,"message":"457","line":39,"column":35,"nodeType":"426","messageId":"427","endLine":39,"endColumn":42},{"ruleId":"424","severity":1,"message":"548","line":41,"column":10,"nodeType":"426","messageId":"427","endLine":41,"endColumn":20},{"ruleId":"468","severity":1,"message":"549","line":74,"column":5,"nodeType":"470","endLine":74,"endColumn":7,"suggestions":"550"},{"ruleId":"424","severity":1,"message":"551","line":76,"column":7,"nodeType":"426","messageId":"427","endLine":76,"endColumn":14},{"ruleId":"451","severity":1,"message":"452","line":149,"column":35,"nodeType":"453","messageId":"454","endLine":149,"endColumn":37},{"ruleId":"451","severity":1,"message":"452","line":152,"column":35,"nodeType":"453","messageId":"454","endLine":152,"endColumn":37},{"ruleId":"424","severity":1,"message":"477","line":3,"column":3,"nodeType":"426","messageId":"427","endLine":3,"endColumn":11},{"ruleId":"424","severity":1,"message":"552","line":10,"column":8,"nodeType":"426","messageId":"427","endLine":10,"endColumn":17},{"ruleId":"424","severity":1,"message":"553","line":11,"column":8,"nodeType":"426","messageId":"427","endLine":11,"endColumn":11},{"ruleId":"424","severity":1,"message":"554","line":15,"column":9,"nodeType":"426","messageId":"427","endLine":15,"endColumn":14},{"ruleId":"424","severity":1,"message":"555","line":16,"column":9,"nodeType":"426","messageId":"427","endLine":16,"endColumn":17},{"ruleId":"424","severity":1,"message":"556","line":17,"column":9,"nodeType":"426","messageId":"427","endLine":17,"endColumn":17},{"ruleId":"424","severity":1,"message":"542","line":3,"column":3,"nodeType":"426","messageId":"427","endLine":3,"endColumn":10},{"ruleId":"424","severity":1,"message":"536","line":18,"column":10,"nodeType":"426","messageId":"427","endLine":18,"endColumn":16},{"ruleId":"424","severity":1,"message":"557","line":21,"column":8,"nodeType":"426","messageId":"427","endLine":21,"endColumn":15},{"ruleId":"424","severity":1,"message":"543","line":24,"column":3,"nodeType":"426","messageId":"427","endLine":24,"endColumn":11},{"ruleId":"424","severity":1,"message":"558","line":26,"column":3,"nodeType":"426","messageId":"427","endLine":26,"endColumn":21},{"ruleId":"424","severity":1,"message":"546","line":32,"column":17,"nodeType":"426","messageId":"427","endLine":32,"endColumn":25},{"ruleId":"424","severity":1,"message":"547","line":32,"column":36,"nodeType":"426","messageId":"427","endLine":32,"endColumn":43},{"ruleId":"424","severity":1,"message":"559","line":44,"column":9,"nodeType":"426","messageId":"427","endLine":44,"endColumn":16},{"ruleId":"424","severity":1,"message":"560","line":45,"column":9,"nodeType":"426","messageId":"427","endLine":45,"endColumn":15},{"ruleId":"424","severity":1,"message":"561","line":46,"column":10,"nodeType":"426","messageId":"427","endLine":46,"endColumn":14},{"ruleId":"424","severity":1,"message":"562","line":47,"column":10,"nodeType":"426","messageId":"427","endLine":47,"endColumn":16},{"ruleId":"424","severity":1,"message":"548","line":51,"column":10,"nodeType":"426","messageId":"427","endLine":51,"endColumn":20},{"ruleId":"424","severity":1,"message":"563","line":55,"column":9,"nodeType":"426","messageId":"427","endLine":55,"endColumn":25},{"ruleId":"424","severity":1,"message":"456","line":59,"column":26,"nodeType":"426","messageId":"427","endLine":59,"endColumn":33},{"ruleId":"424","severity":1,"message":"457","line":59,"column":35,"nodeType":"426","messageId":"427","endLine":59,"endColumn":42},{"ruleId":"468","severity":1,"message":"564","line":102,"column":5,"nodeType":"470","endLine":102,"endColumn":7,"suggestions":"565"},{"ruleId":"424","severity":1,"message":"566","line":173,"column":9,"nodeType":"426","messageId":"427","endLine":173,"endColumn":27},{"ruleId":"468","severity":1,"message":"567","line":192,"column":6,"nodeType":"470","endLine":192,"endColumn":46,"suggestions":"568"},{"ruleId":"451","severity":1,"message":"452","line":344,"column":35,"nodeType":"453","messageId":"454","endLine":344,"endColumn":37},{"ruleId":"451","severity":1,"message":"452","line":347,"column":35,"nodeType":"453","messageId":"454","endLine":347,"endColumn":37},{"ruleId":"424","severity":1,"message":"520","line":5,"column":7,"nodeType":"426","messageId":"427","endLine":5,"endColumn":14},{"ruleId":"424","severity":1,"message":"569","line":5,"column":10,"nodeType":"426","messageId":"427","endLine":5,"endColumn":14},{"ruleId":"424","severity":1,"message":"494","line":5,"column":16,"nodeType":"426","messageId":"427","endLine":5,"endColumn":26},{"ruleId":"424","severity":1,"message":"570","line":5,"column":28,"nodeType":"426","messageId":"427","endLine":5,"endColumn":38},{"ruleId":"424","severity":1,"message":"571","line":7,"column":7,"nodeType":"426","messageId":"427","endLine":7,"endColumn":14},{"ruleId":"424","severity":1,"message":"520","line":16,"column":7,"nodeType":"426","messageId":"427","endLine":16,"endColumn":14},{"ruleId":"424","severity":1,"message":"527","line":32,"column":22,"nodeType":"426","messageId":"427","endLine":32,"endColumn":30},"no-native-reassign",["572"],"no-negated-in-lhs",["573"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'userData' is defined but never used.","'getProfile' is defined but never used.","'Card' is defined but never used.","'login' is assigned a value but never used.","'forgot' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["572"],["573"],["572"],["573"],"'stringify' is defined but never used.","'store' is defined but never used.","'SAVE_TOKEN' is defined but never used.","'merge' is defined but never used.","'repsonse' is assigned a value but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'accessToken' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'plural' is assigned a value but never used.","'loading' is assigned a value but never used.","'refresh' is assigned a value but never used.","'ACTIVATE_USER' is defined but never used.","'DEACTIVATE_USER' is defined but never used.","'removeUser' is defined but never used.","'registerUser' is defined but never used.","strict","'use strict' is unnecessary inside of modules.","module",{"range":"574","text":"575"},{"range":"576","text":"575"},"'useContext' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'addToast', 'onGet', and 'params'. Either include them or remove the dependency array. If 'onGet' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["577"],["578"],"React Hook useEffect has missing dependencies: 'addToast', 'id', and 'onGet'. Either include them or remove the dependency array. If 'onGet' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["579"],"'Regform' is defined but never used.","'Printform' is defined but never used.","'Redirect' is defined but never used.","'Route' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'email', 'fname', 'initial', 'lname', 'phone', 'signature', 'userRole', and 'username'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["580"],"'useState' is defined but never used.","no-undef","'sidebar' is not defined.","undef","'showsidebar' is not defined.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'getCode' is defined but never used.","'code' is assigned a value but never used.","'newpass' is assigned a value but never used.","'useEffect' is defined but never used.","'useHistory' is defined but never used.","'Container' is defined but never used.","'useRef' is defined but never used.","'SidebarData' is defined but never used.","'FaIcons' is defined but never used.","'AiIcons' is defined but never used.","'IoIcons' is defined but never used.","'showsidebar' is assigned a value but never used.","'setColor' is assigned a value but never used.","'createdAt' is assigned a value but never used.","'validto' is assigned a value but never used.","'inspectorID' is assigned a value but never used.","'newInstallation' is assigned a value but never used.","'periodic' is assigned a value but never used.","'afterAccident' is assigned a value but never used.","'model' is assigned a value but never used.","'chasisno' is assigned a value but never used.","'engineno' is assigned a value but never used.","'milliege' is assigned a value but never used.","'Default' is assigned a value but never used.","'ownername' is assigned a value but never used.","'manYear' is assigned a value but never used.","'make' is assigned a value but never used.","'type' is assigned a value but never used.","'handle' is defined but never used.","'style' is assigned a value but never used.","'thStyle' is assigned a value but never used.","'plateno' is assigned a value but never used.","'borders' is defined but never used.","'BootstrapTable' is defined but never used.","'name' is assigned a value but never used.","'email' is assigned a value but never used.","'phone' is assigned a value but never used.","'location' is assigned a value but never used.","no-dupe-keys","Duplicate key 'borderRight'.","ObjectExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'render' is defined but never used.","'getUserId' is defined but never used.","'useGet' is defined but never used.","'Editstyle' is assigned a value but never used.","'putProfile' is assigned a value but never used.","'username' is assigned a value but never used.","'edit' is assigned a value but never used.","Duplicate key 'borderRadius'.","'useMemo' is defined but never used.","'ADD_USER' is defined but never used.","'signature' is assigned a value but never used.","'FaEye' is defined but never used.","'FaRegEye' is defined but never used.","'FaPrint' is defined but never used.","'loadingdel' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'dispatch' and 'handledelete'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["581"],"'history' is assigned a value but never used.","'PrintForm' is defined but never used.","'Pdf' is defined but never used.","'table' is assigned a value but never used.","'editdata' is assigned a value but never used.","'viewdata' is assigned a value but never used.","'AddIcon' is defined but never used.","'CLEAR_PROFILE_DATA' is defined but never used.","'formref' is assigned a value but never used.","'fsname' is assigned a value but never used.","'date' is assigned a value but never used.","'status' is assigned a value but never used.","'handleChangedate' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'dispatch', 'handledelete', and 'history'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["582"],"'handleChangestatus' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'params'. Either include it or remove the dependency array.",["583"],"'Link' is defined but never used.","'withRouter' is defined but never used.","'viewpdf' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[0,13],"",[0,13],{"desc":"584","fix":"585"},{"desc":"586","fix":"587"},{"desc":"588","fix":"589"},{"desc":"590","fix":"591"},{"desc":"592","fix":"593"},{"desc":"594","fix":"595"},{"desc":"596","fix":"597"},"Update the dependencies array to be: [currentPage, sort, filters, searchQuery, shouldRefresh, onGet, params, addToast]",{"range":"598","text":"599"},"Update the dependencies array to be: [sort, filters, searchQuery, shouldRefresh, onGet, params, addToast]",{"range":"600","text":"601"},"Update the dependencies array to be: [addToast, id, onGet, shouldRefresh]",{"range":"602","text":"603"},"Update the dependencies array to be: [dispatch, email, fname, initial, lname, phone, signature, user, userRole, username]",{"range":"604","text":"605"},"Update the dependencies array to be: [dispatch, handledelete]",{"range":"606","text":"607"},"Update the dependencies array to be: [dispatch, handledelete, history]",{"range":"608","text":"609"},"Update the dependencies array to be: [params, paramsDate, paramsSearch, paramsStatus]",{"range":"610","text":"611"},[2102,2158],"[currentPage, sort, filters, searchQuery, shouldRefresh, onGet, params, addToast]",[3596,3639],"[sort, filters, searchQuery, shouldRefresh, onGet, params, addToast]",[4760,4775],"[addToast, id, onGet, shouldRefresh]",[1632,1638],"[dispatch, email, fname, initial, lname, phone, signature, user, userRole, username]",[2075,2077],"[dispatch, handledelete]",[3220,3222],"[dispatch, handledelete, history]",[7515,7555],"[params, paramsDate, paramsSearch, paramsStatus]"]